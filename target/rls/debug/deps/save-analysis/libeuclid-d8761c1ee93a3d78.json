{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4","program":"C:\\Users\\RBento\\.rustup\\toolchains\\nightly-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","euclid","--edition=2018","C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","opt-level=1","-C","embed-bitcode=no","-C","debuginfo=2","-C","debug-assertions=on","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=d8761c1ee93a3d78","-C","extra-filename=-d8761c1ee93a3d78","--out-dir","c:\\Users\\RBento\\Documents\\GitHub\\rust-bevy-game\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\RBento\\Documents\\GitHub\\rust-bevy-game\\target\\rls\\debug\\deps","--extern","num_traits=c:\\Users\\RBento\\Documents\\GitHub\\rust-bevy-game\\target\\rls\\debug\\deps\\libnum_traits-6d9d726ff2e51a11.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\RBento\\.rustup/toolchains/nightly-x86_64-pc-windows-msvc"],"output":"c:\\Users\\RBento\\Documents\\GitHub\\rust-bevy-game\\target\\rls\\debug\\deps\\libeuclid-d8761c1ee93a3d78.rmeta"},"prelude":{"crate_id":{"name":"euclid","disambiguator":[10725810907199219980,9712296289502794840]},"crate_root":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src","external_crates":[{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","num":1,"id":{"name":"core","disambiguator":[15148766368479893525,17497858971256376700]}},{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[16194220905313221195,6339449639258572938]}},{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[16728121507327789412,17936324348553370828]}},{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\angle.rs","num":4,"id":{"name":"num_traits","disambiguator":[9105792792004482925,16132080609106608078]}},{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\angle.rs","num":5,"id":{"name":"std","disambiguator":[15869266064849044270,13812703651219207899]}},{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\angle.rs","num":6,"id":{"name":"alloc","disambiguator":[8353546475527657673,16963020149250979420]}},{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\angle.rs","num":7,"id":{"name":"libc","disambiguator":[14145689099815379496,9077506326932238031]}},{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\angle.rs","num":8,"id":{"name":"unwind","disambiguator":[6244492946486796811,5490964437503717086]}},{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\angle.rs","num":9,"id":{"name":"cfg_if","disambiguator":[4957111798665788102,12670576939103314555]}},{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\angle.rs","num":10,"id":{"name":"hashbrown","disambiguator":[9357994508122440114,8896505374189203733]}},{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\angle.rs","num":11,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[17341712432760991862,18372629839506156389]}},{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\angle.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[2671884461253057496,4478164966631933143]}},{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\angle.rs","num":13,"id":{"name":"std_detect","disambiguator":[6741719769603984485,10712659696795682227]}},{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\angle.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[15998493142843264248,17902295596389096714]}}],"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","byte_start":427,"byte_end":4536,"line_start":10,"line_end":115,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":4519},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","byte_start":1894,"byte_end":1899,"line_start":43,"line_end":43,"column_start":23,"column_end":28},"alias_span":null,"name":"Angle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":370},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","byte_start":1923,"byte_end":1928,"line_start":44,"line_end":44,"column_start":23,"column_end":28},"alias_span":null,"name":"Box2D","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":828},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","byte_start":1954,"byte_end":1971,"line_start":45,"line_end":45,"column_start":25,"column_end":42},"alias_span":null,"name":"HomogeneousVector","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":959},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","byte_start":1996,"byte_end":2002,"line_start":46,"line_end":46,"column_start":24,"column_end":30},"alias_span":null,"name":"Length","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":960},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","byte_start":1996,"byte_end":2002,"line_start":46,"line_end":46,"column_start":24,"column_end":30},"alias_span":null,"name":"Length","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1661},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","byte_start":2027,"byte_end":2033,"line_start":47,"line_end":47,"column_start":24,"column_end":30},"alias_span":null,"name":"point2","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1664},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","byte_start":2035,"byte_end":2041,"line_start":47,"line_end":47,"column_start":32,"column_end":38},"alias_span":null,"name":"point3","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1226},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","byte_start":2043,"byte_end":2050,"line_start":47,"line_end":47,"column_start":40,"column_end":47},"alias_span":null,"name":"Point2D","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1441},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","byte_start":2052,"byte_end":2059,"line_start":47,"line_end":47,"column_start":49,"column_end":56},"alias_span":null,"name":"Point3D","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2281},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","byte_start":2084,"byte_end":2089,"line_start":48,"line_end":48,"column_start":23,"column_end":28},"alias_span":null,"name":"Scale","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2282},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","byte_start":2084,"byte_end":2089,"line_start":48,"line_end":48,"column_start":23,"column_end":28},"alias_span":null,"name":"Scale","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3119},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","byte_start":2119,"byte_end":2130,"line_start":49,"line_end":49,"column_start":29,"column_end":40},"alias_span":null,"name":"Transform2D","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3360},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","byte_start":2160,"byte_end":2171,"line_start":50,"line_end":50,"column_start":29,"column_end":40},"alias_span":null,"name":"Transform3D","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4473},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","byte_start":2197,"byte_end":2202,"line_start":51,"line_end":51,"column_start":25,"column_end":30},"alias_span":null,"name":"bvec2","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4474},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","byte_start":2204,"byte_end":2209,"line_start":51,"line_end":51,"column_start":32,"column_end":37},"alias_span":null,"name":"bvec3","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4682},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","byte_start":2211,"byte_end":2223,"line_start":51,"line_end":51,"column_start":39,"column_end":51},"alias_span":null,"name":"BoolVector2D","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4700},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","byte_start":2225,"byte_end":2237,"line_start":51,"line_end":51,"column_start":53,"column_end":65},"alias_span":null,"name":"BoolVector3D","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4467},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","byte_start":2264,"byte_end":2268,"line_start":52,"line_end":52,"column_start":25,"column_end":29},"alias_span":null,"name":"vec2","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4470},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","byte_start":2270,"byte_end":2274,"line_start":52,"line_end":52,"column_start":31,"column_end":35},"alias_span":null,"name":"vec3","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3959},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","byte_start":2276,"byte_end":2284,"line_start":52,"line_end":52,"column_start":37,"column_end":45},"alias_span":null,"name":"Vector2D","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4196},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","byte_start":2286,"byte_end":2294,"line_start":52,"line_end":52,"column_start":47,"column_end":55},"alias_span":null,"name":"Vector3D","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":784},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","byte_start":2321,"byte_end":2326,"line_start":54,"line_end":54,"column_start":24,"column_end":29},"alias_span":null,"name":"box3d","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":613},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","byte_start":2328,"byte_end":2333,"line_start":54,"line_end":54,"column_start":31,"column_end":36},"alias_span":null,"name":"Box3D","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1923},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","byte_start":2358,"byte_end":2362,"line_start":55,"line_end":55,"column_start":23,"column_end":27},"alias_span":null,"name":"rect","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1735},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","byte_start":2364,"byte_end":2368,"line_start":55,"line_end":55,"column_start":29,"column_end":33},"alias_span":null,"name":"Rect","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4617},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","byte_start":2393,"byte_end":2409,"line_start":56,"line_end":56,"column_start":23,"column_end":39},"alias_span":null,"name":"RigidTransform3D","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2070},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","byte_start":2437,"byte_end":2447,"line_start":57,"line_end":57,"column_start":27,"column_end":37},"alias_span":null,"name":"Rotation2D","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2136},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","byte_start":2449,"byte_end":2459,"line_start":57,"line_end":57,"column_start":39,"column_end":49},"alias_span":null,"name":"Rotation3D","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2428},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","byte_start":2491,"byte_end":2504,"line_start":58,"line_end":58,"column_start":30,"column_end":43},"alias_span":null,"name":"SideOffsets2D","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2801},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","byte_start":2528,"byte_end":2533,"line_start":59,"line_end":59,"column_start":23,"column_end":28},"alias_span":null,"name":"size2","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3039},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","byte_start":2535,"byte_end":2540,"line_start":59,"line_end":59,"column_start":30,"column_end":35},"alias_span":null,"name":"size3","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2614},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","byte_start":2542,"byte_end":2548,"line_start":59,"line_end":59,"column_start":37,"column_end":43},"alias_span":null,"name":"Size2D","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2828},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","byte_start":2550,"byte_end":2556,"line_start":59,"line_end":59,"column_start":45,"column_end":51},"alias_span":null,"name":"Size3D","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3623},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","byte_start":2588,"byte_end":2601,"line_start":60,"line_end":60,"column_start":30,"column_end":43},"alias_span":null,"name":"Translation2D","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3727},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","byte_start":2603,"byte_end":2616,"line_start":60,"line_end":60,"column_start":45,"column_end":58},"alias_span":null,"name":"Translation3D","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3835},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","byte_start":2640,"byte_end":2644,"line_start":61,"line_end":61,"column_start":22,"column_end":26},"alias_span":null,"name":"Trig","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","byte_start":427,"byte_end":4536,"line_start":10,"line_end":115,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":20},{"krate":0,"index":23},{"krate":0,"index":26},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":32},{"krate":0,"index":35},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":42},{"krate":0,"index":45},{"krate":0,"index":48},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":55},{"krate":0,"index":58},{"krate":0,"index":61},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":68},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":75},{"krate":0,"index":78},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":85},{"krate":0,"index":88},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":95},{"krate":0,"index":98},{"krate":0,"index":101},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":108},{"krate":0,"index":111},{"krate":0,"index":114},{"krate":0,"index":116},{"krate":0,"index":275},{"krate":0,"index":282},{"krate":0,"index":287},{"krate":0,"index":540},{"krate":0,"index":787},{"krate":0,"index":884},{"krate":0,"index":1112},{"krate":0,"index":1134},{"krate":0,"index":1667},{"krate":0,"index":1926},{"krate":0,"index":1986},{"krate":0,"index":2223},{"krate":0,"index":2380},{"krate":0,"index":2519},{"krate":0,"index":3042},{"krate":0,"index":3259},{"krate":0,"index":3542},{"krate":0,"index":3834},{"krate":0,"index":3843},{"krate":0,"index":4719},{"krate":0,"index":4721},{"krate":0,"index":4723},{"krate":0,"index":4724},{"krate":0,"index":4726},{"krate":0,"index":4728},{"krate":0,"index":4729},{"krate":0,"index":4731},{"krate":0,"index":4732},{"krate":0,"index":4734},{"krate":0,"index":4736},{"krate":0,"index":4738},{"krate":0,"index":4475}],"decl_id":null,"docs":" A collection of strongly typed math tools for computer graphics with an inclination\n towards 2d graphics and layout.","sig":null,"attributes":[{"value":"no_std","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","byte_start":450,"byte_end":456,"line_start":10,"line_end":10,"column_start":24,"column_end":30}},{"value":"/ A collection of strongly typed math tools for computer graphics with an inclination","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","byte_start":460,"byte_end":547,"line_start":12,"line_end":12,"column_start":1,"column_end":88}},{"value":"/ towards 2d graphics and layout.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","byte_start":548,"byte_end":583,"line_start":13,"line_end":13,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","byte_start":584,"byte_end":587,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ All types are generic over the scalar type of their component (`f32`, `i32`, etc.),","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","byte_start":588,"byte_end":675,"line_start":15,"line_end":15,"column_start":1,"column_end":88}},{"value":"/ and tagged with a generic Unit parameter which is useful to prevent mixing","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","byte_start":676,"byte_end":754,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ values from different spaces. For example it should not be legal to translate","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","byte_start":755,"byte_end":836,"line_start":17,"line_end":17,"column_start":1,"column_end":82}},{"value":"/ a screen-space position by a world-space vector and this can be expressed using","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","byte_start":837,"byte_end":920,"line_start":18,"line_end":18,"column_start":1,"column_end":84}},{"value":"/ the generic Unit parameter.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","byte_start":921,"byte_end":952,"line_start":19,"line_end":19,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","byte_start":953,"byte_end":956,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ This unit system is not mandatory and all structures have an alias","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","byte_start":957,"byte_end":1027,"line_start":21,"line_end":21,"column_start":1,"column_end":71}},{"value":"/ with the default unit: `UnknownUnit`.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","byte_start":1028,"byte_end":1069,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/ for example ```default::Point2D<T>``` is equivalent to ```Point2D<T, UnknownUnit>```.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","byte_start":1070,"byte_end":1159,"line_start":23,"line_end":23,"column_start":1,"column_end":90}},{"value":"/ Client code typically creates a set of aliases for each type and doesn't need","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","byte_start":1160,"byte_end":1241,"line_start":24,"line_end":24,"column_start":1,"column_end":82}},{"value":"/ to deal with the specifics of typed units further. For example:","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","byte_start":1242,"byte_end":1309,"line_start":25,"line_end":25,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","byte_start":1310,"byte_end":1313,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","byte_start":1314,"byte_end":1325,"line_start":27,"line_end":27,"column_start":1,"column_end":12}},{"value":"/ use euclid::*;","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","byte_start":1326,"byte_end":1344,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ pub struct ScreenSpace;","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","byte_start":1345,"byte_end":1372,"line_start":29,"line_end":29,"column_start":1,"column_end":28}},{"value":"/ pub type ScreenPoint = Point2D<f32, ScreenSpace>;","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","byte_start":1373,"byte_end":1426,"line_start":30,"line_end":30,"column_start":1,"column_end":54}},{"value":"/ pub type ScreenSize = Size2D<f32, ScreenSpace>;","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","byte_start":1427,"byte_end":1478,"line_start":31,"line_end":31,"column_start":1,"column_end":52}},{"value":"/ pub struct WorldSpace;","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","byte_start":1479,"byte_end":1505,"line_start":32,"line_end":32,"column_start":1,"column_end":27}},{"value":"/ pub type WorldPoint = Point3D<f32, WorldSpace>;","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","byte_start":1506,"byte_end":1557,"line_start":33,"line_end":33,"column_start":1,"column_end":52}},{"value":"/ pub type ProjectionMatrix = Transform3D<f32, WorldSpace, ScreenSpace>;","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","byte_start":1558,"byte_end":1632,"line_start":34,"line_end":34,"column_start":1,"column_end":75}},{"value":"/ // etc...","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","byte_start":1633,"byte_end":1646,"line_start":35,"line_end":35,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","byte_start":1647,"byte_end":1654,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","byte_start":1655,"byte_end":1658,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ All euclid types are marked `#[repr(C)]` in order to facilitate exposing them to","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","byte_start":1659,"byte_end":1743,"line_start":38,"line_end":38,"column_start":1,"column_end":85}},{"value":"/ foreign function interfaces (provided the underlying scalar type is also `repr(C)`).","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","byte_start":1744,"byte_end":1832,"line_start":39,"line_end":39,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","byte_start":1833,"byte_end":1836,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"deny(unconditional_recursion)","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","byte_start":1837,"byte_end":1870,"line_start":41,"line_end":41,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":4519},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\angle.rs","byte_start":6630,"byte_end":6635,"line_start":24,"line_end":24,"column_start":12,"column_end":17},"name":"Angle","qualname":"::angle::Angle","value":"Angle { radians }","parent":null,"children":[{"krate":0,"index":4521}],"decl_id":null,"docs":" An angle in radians\n","sig":null,"attributes":[{"value":"/ An angle in radians","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\angle.rs","byte_start":6395,"byte_end":6418,"line_start":20,"line_end":20,"column_start":1,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":4521},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\angle.rs","byte_start":6649,"byte_end":6656,"line_start":25,"line_end":25,"column_start":9,"column_end":16},"name":"radians","qualname":"::angle::Angle::radians","value":"T","parent":{"krate":0,"index":4519},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\angle.rs","byte_start":6708,"byte_end":6715,"line_start":30,"line_end":30,"column_start":12,"column_end":19},"name":"radians","qualname":"<Angle<T>>::radians","value":"pub fn radians(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\angle.rs","byte_start":6687,"byte_end":6696,"line_start":29,"line_end":29,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\angle.rs","byte_start":6796,"byte_end":6799,"line_start":35,"line_end":35,"column_start":12,"column_end":15},"name":"get","qualname":"<Angle<T>>::get","value":"pub fn get(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\angle.rs","byte_start":6775,"byte_end":6784,"line_start":34,"line_end":34,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":189},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\angle.rs","byte_start":6906,"byte_end":6913,"line_start":45,"line_end":45,"column_start":12,"column_end":19},"name":"degrees","qualname":"<Angle<T>>::degrees","value":"pub fn degrees(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\angle.rs","byte_start":6885,"byte_end":6894,"line_start":44,"line_end":44,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\angle.rs","byte_start":7039,"byte_end":7049,"line_start":52,"line_end":52,"column_start":12,"column_end":22},"name":"to_degrees","qualname":"<Angle<T>>::to_degrees","value":"pub fn to_degrees(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\angle.rs","byte_start":7018,"byte_end":7027,"line_start":51,"line_end":51,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\angle.rs","byte_start":7303,"byte_end":7311,"line_start":62,"line_end":62,"column_start":12,"column_end":20},"name":"positive","qualname":"<Angle<T>>::positive","value":"pub fn positive(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns this angle in the [0..2*PI[ range.\n","sig":null,"attributes":[{"value":"/ Returns this angle in the [0..2*PI[ range.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\angle.rs","byte_start":7245,"byte_end":7291,"line_start":61,"line_end":61,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\angle.rs","byte_start":7572,"byte_end":7578,"line_start":72,"line_end":72,"column_start":12,"column_end":18},"name":"signed","qualname":"<Angle<T>>::signed","value":"pub fn signed(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns this angle in the ]-PI..PI] range.\n","sig":null,"attributes":[{"value":"/ Returns this angle in the ]-PI..PI] range.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\angle.rs","byte_start":7514,"byte_end":7560,"line_start":71,"line_end":71,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\angle.rs","byte_start":7965,"byte_end":7973,"line_start":90,"line_end":90,"column_start":12,"column_end":20},"name":"angle_to","qualname":"<Angle<T>>::angle_to","value":"pub fn angle_to(&Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the shortest signed angle between two angles.","sig":null,"attributes":[{"value":"/ Returns the shortest signed angle between two angles.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\angle.rs","byte_start":7841,"byte_end":7898,"line_start":87,"line_end":87,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\angle.rs","byte_start":7903,"byte_end":7906,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ Takes wrapping and signs into account.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\angle.rs","byte_start":7911,"byte_end":7953,"line_start":89,"line_end":89,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\angle.rs","byte_start":8259,"byte_end":8263,"line_start":99,"line_end":99,"column_start":12,"column_end":16},"name":"lerp","qualname":"<Angle<T>>::lerp","value":"pub fn lerp(&Self, Self, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Linear interpolation between two angles, using the shortest path.\n","sig":null,"attributes":[{"value":"/ Linear interpolation between two angles, using the shortest path.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\angle.rs","byte_start":8178,"byte_end":8247,"line_start":98,"line_end":98,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\angle.rs","byte_start":8440,"byte_end":8447,"line_start":109,"line_end":109,"column_start":12,"column_end":19},"name":"sin_cos","qualname":"<Angle<T>>::sin_cos","value":"pub fn sin_cos(Self) -> (T, T)","parent":null,"children":[],"decl_id":null,"docs":" Returns (sin(self), cos(self)).\n","sig":null,"attributes":[{"value":"/ Returns (sin(self), cos(self)).","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\angle.rs","byte_start":8393,"byte_end":8428,"line_start":108,"line_end":108,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\angle.rs","byte_start":8583,"byte_end":8592,"line_start":115,"line_end":115,"column_start":12,"column_end":21},"name":"is_finite","qualname":"<Angle<T>>::is_finite","value":"pub fn is_finite(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the angle is a finite number.\n","sig":null,"attributes":[{"value":"/ Returns true if the angle is a finite number.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\angle.rs","byte_start":8508,"byte_end":8557,"line_start":113,"line_end":113,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\angle.rs","byte_start":8562,"byte_end":8571,"line_start":114,"line_end":114,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\angle.rs","byte_start":8700,"byte_end":8704,"line_start":124,"line_end":124,"column_start":12,"column_end":16},"name":"zero","qualname":"<Angle<T>>::zero","value":"pub fn zero() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\angle.rs","byte_start":8833,"byte_end":8835,"line_start":133,"line_end":133,"column_start":12,"column_end":14},"name":"pi","qualname":"<Angle<T>>::pi","value":"pub fn pi() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\angle.rs","byte_start":8898,"byte_end":8904,"line_start":137,"line_end":137,"column_start":12,"column_end":18},"name":"two_pi","qualname":"<Angle<T>>::two_pi","value":"pub fn two_pi() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\angle.rs","byte_start":8977,"byte_end":8986,"line_start":141,"line_end":141,"column_start":12,"column_end":21},"name":"frac_pi_2","qualname":"<Angle<T>>::frac_pi_2","value":"pub fn frac_pi_2() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\angle.rs","byte_start":9056,"byte_end":9065,"line_start":145,"line_end":145,"column_start":12,"column_end":21},"name":"frac_pi_3","qualname":"<Angle<T>>::frac_pi_3","value":"pub fn frac_pi_3() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\angle.rs","byte_start":9135,"byte_end":9144,"line_start":149,"line_end":149,"column_start":12,"column_end":21},"name":"frac_pi_4","qualname":"<Angle<T>>::frac_pi_4","value":"pub fn frac_pi_4() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\angle.rs","byte_start":9335,"byte_end":9339,"line_start":160,"line_end":160,"column_start":12,"column_end":16},"name":"cast","qualname":"<Angle<T>>::cast","value":"pub fn cast<NewT: NumCast>(&Self) -> Angle<NewT>","parent":null,"children":[],"decl_id":null,"docs":" Cast from one numeric representation to another.\n","sig":null,"attributes":[{"value":"/ Cast from one numeric representation to another.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\angle.rs","byte_start":9257,"byte_end":9309,"line_start":158,"line_end":158,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\angle.rs","byte_start":9314,"byte_end":9323,"line_start":159,"line_end":159,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\angle.rs","byte_start":9496,"byte_end":9504,"line_start":165,"line_end":165,"column_start":12,"column_end":20},"name":"try_cast","qualname":"<Angle<T>>::try_cast","value":"pub fn try_cast<NewT: NumCast>(&Self) -> Option<Angle<NewT>>","parent":null,"children":[],"decl_id":null,"docs":" Fallible cast from one numeric representation to another.\n","sig":null,"attributes":[{"value":"/ Fallible cast from one numeric representation to another.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\angle.rs","byte_start":9423,"byte_end":9484,"line_start":164,"line_end":164,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\angle.rs","byte_start":9730,"byte_end":9736,"line_start":173,"line_end":173,"column_start":12,"column_end":18},"name":"to_f32","qualname":"<Angle<T>>::to_f32","value":"pub fn to_f32(&Self) -> Angle<f32>","parent":null,"children":[],"decl_id":null,"docs":" Cast angle to `f32`.\n","sig":null,"attributes":[{"value":"/ Cast angle to `f32`.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\angle.rs","byte_start":9680,"byte_end":9704,"line_start":171,"line_end":171,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\angle.rs","byte_start":9709,"byte_end":9718,"line_start":172,"line_end":172,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\angle.rs","byte_start":9838,"byte_end":9844,"line_start":179,"line_end":179,"column_start":12,"column_end":18},"name":"to_f64","qualname":"<Angle<T>>::to_f64","value":"pub fn to_f64(&Self) -> Angle<f64>","parent":null,"children":[],"decl_id":null,"docs":" Cast angle `f64`.\n","sig":null,"attributes":[{"value":"/ Cast angle `f64`.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\angle.rs","byte_start":9791,"byte_end":9812,"line_start":177,"line_end":177,"column_start":5,"column_end":26}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\angle.rs","byte_start":9817,"byte_end":9826,"line_start":178,"line_end":178,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":275},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\approxeq.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"approxeq","qualname":"::approxeq","value":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\approxeq.rs","parent":null,"children":[{"krate":0,"index":276},{"krate":0,"index":4551},{"krate":0,"index":4554}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":276},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\approxeq.rs","byte_start":15140,"byte_end":15148,"line_start":11,"line_end":11,"column_start":11,"column_end":19},"name":"ApproxEq","qualname":"::approxeq::ApproxEq","value":"ApproxEq<Eps>","parent":null,"children":[{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":280}],"decl_id":null,"docs":" Trait for testing approximate equality\n","sig":null,"attributes":[{"value":"/ Trait for testing approximate equality","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\approxeq.rs","byte_start":15087,"byte_end":15129,"line_start":10,"line_end":10,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\approxeq.rs","byte_start":15193,"byte_end":15207,"line_start":13,"line_end":13,"column_start":8,"column_end":22},"name":"approx_epsilon","qualname":"::approxeq::ApproxEq::approx_epsilon","value":"pub fn approx_epsilon() -> Eps","parent":{"krate":0,"index":276},"children":[],"decl_id":null,"docs":" Default epsilon value\n","sig":null,"attributes":[{"value":"/ Default epsilon value","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\approxeq.rs","byte_start":15160,"byte_end":15185,"line_start":12,"line_end":12,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\approxeq.rs","byte_start":15345,"byte_end":15358,"line_start":17,"line_end":17,"column_start":8,"column_end":21},"name":"approx_eq_eps","qualname":"::approxeq::ApproxEq::approx_eq_eps","value":"pub fn approx_eq_eps(&Self, &Self, &Eps) -> bool","parent":{"krate":0,"index":276},"children":[],"decl_id":null,"docs":" Returns `true` is this object is approximately equal to the other one, using\n a provided epsilon value.\n","sig":null,"attributes":[{"value":"/ Returns `true` is this object is approximately equal to the other one, using","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\approxeq.rs","byte_start":15223,"byte_end":15303,"line_start":15,"line_end":15,"column_start":5,"column_end":85}},{"value":"/ a provided epsilon value.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\approxeq.rs","byte_start":15308,"byte_end":15337,"line_start":16,"line_end":16,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\approxeq.rs","byte_start":15550,"byte_end":15559,"line_start":21,"line_end":21,"column_start":8,"column_end":17},"name":"approx_eq","qualname":"::approxeq::ApproxEq::approx_eq","value":"pub fn approx_eq(&Self, &Self) -> bool","parent":{"krate":0,"index":276},"children":[],"decl_id":null,"docs":" Returns `true` is this object is approximately equal to the other one, using\n the `approx_epsilon()` epsilon value.\n","sig":null,"attributes":[{"value":"/ Returns `true` is this object is approximately equal to the other one, using","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\approxeq.rs","byte_start":15416,"byte_end":15496,"line_start":19,"line_end":19,"column_start":5,"column_end":85}},{"value":"/ the `approx_epsilon()` epsilon value.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\approxeq.rs","byte_start":15501,"byte_end":15542,"line_start":20,"line_end":20,"column_start":5,"column_end":46}}]},{"kind":"Mod","id":{"krate":0,"index":282},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\approxord.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"approxord","qualname":"::approxord","value":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\approxord.rs","parent":null,"children":[{"krate":0,"index":283},{"krate":0,"index":285}],"decl_id":null,"docs":" Utilities for testing approximate ordering - especially true for\n floating point types, where NaN's cannot be ordered.\n","sig":null,"attributes":[{"value":"/ Utilities for testing approximate ordering - especially true for","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\approxord.rs","byte_start":16536,"byte_end":16604,"line_start":10,"line_end":10,"column_start":1,"column_end":69}},{"value":"/ floating point types, where NaN's cannot be ordered.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\approxord.rs","byte_start":16605,"byte_end":16661,"line_start":11,"line_end":11,"column_start":1,"column_end":57}}]},{"kind":"Function","id":{"krate":0,"index":283},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\approxord.rs","byte_start":16670,"byte_end":16673,"line_start":13,"line_end":13,"column_start":8,"column_end":11},"name":"min","qualname":"::approxord::min","value":"pub fn min<T: PartialOrd>(T, T) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":285},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\approxord.rs","byte_start":16773,"byte_end":16776,"line_start":21,"line_end":21,"column_start":8,"column_end":11},"name":"max","qualname":"::approxord::max","value":"pub fn max<T: PartialOrd>(T, T) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":370},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":19644,"byte_end":19649,"line_start":65,"line_end":65,"column_start":12,"column_end":17},"name":"Box2D","qualname":"::box2d::Box2D","value":"Box2D { min, max }","parent":null,"children":[{"krate":0,"index":373},{"krate":0,"index":374}],"decl_id":null,"docs":" A 2d axis aligned rectangle represented by its minimum and maximum coordinates.","sig":null,"attributes":[{"value":"/ A 2d axis aligned rectangle represented by its minimum and maximum coordinates.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":18133,"byte_end":18216,"line_start":30,"line_end":30,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":18217,"byte_end":18220,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ # Representation","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":18221,"byte_end":18241,"line_start":32,"line_end":32,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":18242,"byte_end":18245,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ This struct is similar to [`Rect`], but stores rectangle as two endpoints","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":18246,"byte_end":18323,"line_start":34,"line_end":34,"column_start":1,"column_end":78}},{"value":"/ instead of origin point and size. Such representation has several advantages over","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":18324,"byte_end":18409,"line_start":35,"line_end":35,"column_start":1,"column_end":86}},{"value":"/ [`Rect`] representation:","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":18410,"byte_end":18438,"line_start":36,"line_end":36,"column_start":1,"column_end":29}},{"value":"/ - Several operations are more efficient with `Box2D`, including [`intersection`],","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":18439,"byte_end":18524,"line_start":37,"line_end":37,"column_start":1,"column_end":86}},{"value":"/   [`union`], and point-in-rect.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":18525,"byte_end":18560,"line_start":38,"line_end":38,"column_start":1,"column_end":36}},{"value":"/ - The representation is less susceptible to overflow. With [`Rect`], computation","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":18561,"byte_end":18645,"line_start":39,"line_end":39,"column_start":1,"column_end":85}},{"value":"/   of second point can overflow for a large range of values of origin and size.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":18646,"byte_end":18728,"line_start":40,"line_end":40,"column_start":1,"column_end":83}},{"value":"/   However, with `Box2D`, computation of [`size`] cannot overflow if the coordinates","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":18729,"byte_end":18816,"line_start":41,"line_end":41,"column_start":1,"column_end":88}},{"value":"/   are signed and the resulting size is unsigned.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":18817,"byte_end":18869,"line_start":42,"line_end":42,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":18870,"byte_end":18873,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ A known disadvantage of `Box2D` is that translating the rectangle requires translating","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":18874,"byte_end":18964,"line_start":44,"line_end":44,"column_start":1,"column_end":91}},{"value":"/ both points, whereas translating [`Rect`] only requires translating one point.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":18965,"byte_end":19047,"line_start":45,"line_end":45,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":19048,"byte_end":19051,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ # Empty box","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":19052,"byte_end":19067,"line_start":47,"line_end":47,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":19068,"byte_end":19071,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ A box is considered empty (see [`is_empty`]) if any of the following is true:","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":19072,"byte_end":19153,"line_start":49,"line_end":49,"column_start":1,"column_end":82}},{"value":"/ - it's area is empty,","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":19154,"byte_end":19179,"line_start":50,"line_end":50,"column_start":1,"column_end":26}},{"value":"/ - it's area is negative (`min.x > max.x` or `min.y > max.y`),","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":19180,"byte_end":19245,"line_start":51,"line_end":51,"column_start":1,"column_end":66}},{"value":"/ - it contains NaNs.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":19246,"byte_end":19269,"line_start":52,"line_end":52,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":19270,"byte_end":19273,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ [`Rect`]: struct.Rect.html","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":19274,"byte_end":19304,"line_start":54,"line_end":54,"column_start":1,"column_end":31}},{"value":"/ [`intersection`]: #method.intersection","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":19305,"byte_end":19347,"line_start":55,"line_end":55,"column_start":1,"column_end":43}},{"value":"/ [`is_empty`]: #method.is_empty","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":19348,"byte_end":19382,"line_start":56,"line_end":56,"column_start":1,"column_end":35}},{"value":"/ [`union`]: #method.union","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":19383,"byte_end":19411,"line_start":57,"line_end":57,"column_start":1,"column_end":29}},{"value":"/ [`size`]: #method.size","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":19412,"byte_end":19438,"line_start":58,"line_end":58,"column_start":1,"column_end":27}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":19439,"byte_end":19449,"line_start":59,"line_end":59,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":373},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":19666,"byte_end":19669,"line_start":66,"line_end":66,"column_start":9,"column_end":12},"name":"min","qualname":"::box2d::Box2D::min","value":"point::Point2D<T, U>","parent":{"krate":0,"index":370},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":374},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":19694,"byte_end":19697,"line_start":67,"line_end":67,"column_start":9,"column_end":12},"name":"max","qualname":"::box2d::Box2D::max","value":"point::Point2D<T, U>","parent":{"krate":0,"index":370},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":401},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":20545,"byte_end":20548,"line_start":105,"line_end":105,"column_start":18,"column_end":21},"name":"new","qualname":"<Box2D<T, U>>::new","value":"pub const fn new(Point2D<T, U>, Point2D<T, U>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructor.\n","sig":null,"attributes":[{"value":"/ Constructor.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":20497,"byte_end":20513,"line_start":103,"line_end":103,"column_start":5,"column_end":21}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":20518,"byte_end":20527,"line_start":104,"line_end":104,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":402},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":20679,"byte_end":20699,"line_start":111,"line_end":111,"column_start":12,"column_end":32},"name":"from_origin_and_size","qualname":"<Box2D<T, U>>::from_origin_and_size","value":"pub fn from_origin_and_size(Point2D<T, U>, Size2D<T, U>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructor.\n","sig":null,"attributes":[{"value":"/ Constructor.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":20637,"byte_end":20653,"line_start":109,"line_end":109,"column_start":5,"column_end":21}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":20658,"byte_end":20667,"line_start":110,"line_end":110,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":403},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":20945,"byte_end":20954,"line_start":120,"line_end":120,"column_start":12,"column_end":21},"name":"from_size","qualname":"<Box2D<T, U>>::from_size","value":"pub fn from_size(Size2D<T, U>) -> Self where T: Zero","parent":null,"children":[],"decl_id":null,"docs":" Creates a Box2D of the given size, at offset zero.\n","sig":null,"attributes":[{"value":"/ Creates a Box2D of the given size, at offset zero.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":20865,"byte_end":20919,"line_start":118,"line_end":118,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":20924,"byte_end":20933,"line_start":119,"line_end":119,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":407},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":21427,"byte_end":21438,"line_start":137,"line_end":137,"column_start":12,"column_end":23},"name":"is_negative","qualname":"<Box2D<T, U>>::is_negative","value":"pub fn is_negative(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the box has a negative area.","sig":null,"attributes":[{"value":"/ Returns true if the box has a negative area.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":21172,"byte_end":21220,"line_start":132,"line_end":132,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":21225,"byte_end":21228,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ The common interpretation for a negative box is to consider it empty. It can be obtained","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":21233,"byte_end":21325,"line_start":134,"line_end":134,"column_start":5,"column_end":97}},{"value":"/ by calculating the intersection of two boxes that do not intersect.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":21330,"byte_end":21401,"line_start":135,"line_end":135,"column_start":5,"column_end":76}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":21406,"byte_end":21415,"line_start":136,"line_end":136,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":408},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":21606,"byte_end":21614,"line_start":143,"line_end":143,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Box2D<T, U>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the size is zero, negative or NaN.\n","sig":null,"attributes":[{"value":"/ Returns true if the size is zero, negative or NaN.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":21526,"byte_end":21580,"line_start":141,"line_end":141,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":21585,"byte_end":21594,"line_start":142,"line_end":142,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":409},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":21777,"byte_end":21787,"line_start":149,"line_end":149,"column_start":12,"column_end":22},"name":"intersects","qualname":"<Box2D<T, U>>::intersects","value":"pub fn intersects(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the two boxes intersect.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the two boxes intersect.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":21705,"byte_end":21751,"line_start":147,"line_end":147,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":21756,"byte_end":21765,"line_start":148,"line_end":148,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":410},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":22213,"byte_end":22221,"line_start":160,"line_end":160,"column_start":12,"column_end":20},"name":"contains","qualname":"<Box2D<T, U>>::contains","value":"pub fn contains(&Self, Point2D<T, U>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this box contains the point. Points are considered\n in the box if they are on the front, left or top faces, but outside if they\n are on the back, right or bottom faces.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this box contains the point. Points are considered","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":21983,"byte_end":22055,"line_start":156,"line_end":156,"column_start":5,"column_end":77}},{"value":"/ in the box if they are on the front, left or top faces, but outside if they","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":22060,"byte_end":22139,"line_start":157,"line_end":157,"column_start":5,"column_end":84}},{"value":"/ are on the back, right or bottom faces.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":22144,"byte_end":22187,"line_start":158,"line_end":158,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":22192,"byte_end":22201,"line_start":159,"line_end":159,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":411},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":22579,"byte_end":22591,"line_start":168,"line_end":168,"column_start":12,"column_end":24},"name":"contains_box","qualname":"<Box2D<T, U>>::contains_box","value":"pub fn contains_box(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this box contains the interior of the other box. Always\n returns `true` if other is empty, and always returns `false` if other is\n nonempty but this box is empty.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this box contains the interior of the other box. Always","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":22355,"byte_end":22432,"line_start":164,"line_end":164,"column_start":5,"column_end":82}},{"value":"/ returns `true` if other is empty, and always returns `false` if other is","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":22437,"byte_end":22513,"line_start":165,"line_end":165,"column_start":5,"column_end":81}},{"value":"/ nonempty but this box is empty.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":22518,"byte_end":22553,"line_start":166,"line_end":166,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":22558,"byte_end":22567,"line_start":167,"line_end":167,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":415},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":22917,"byte_end":22929,"line_start":182,"line_end":182,"column_start":12,"column_end":24},"name":"to_non_empty","qualname":"<Box2D<T, U>>::to_non_empty","value":"pub fn to_non_empty(&Self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":22896,"byte_end":22905,"line_start":181,"line_end":181,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":416},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":23168,"byte_end":23180,"line_start":192,"line_end":192,"column_start":12,"column_end":24},"name":"intersection","qualname":"<Box2D<T, U>>::intersection","value":"pub fn intersection(&Self, &Self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Computes the intersection of two boxes, returning `None` if the boxes do not intersect.\n","sig":null,"attributes":[{"value":"/ Computes the intersection of two boxes, returning `None` if the boxes do not intersect.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":23051,"byte_end":23142,"line_start":190,"line_end":190,"column_start":5,"column_end":96}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":23147,"byte_end":23156,"line_start":191,"line_end":191,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":417},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":23758,"byte_end":23780,"line_start":209,"line_end":209,"column_start":12,"column_end":34},"name":"intersection_unchecked","qualname":"<Box2D<T, U>>::intersection_unchecked","value":"pub fn intersection_unchecked(&Self, &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the intersection of two boxes without check whether they do intersect.","sig":null,"attributes":[{"value":"/ Computes the intersection of two boxes without check whether they do intersect.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":23362,"byte_end":23445,"line_start":202,"line_end":202,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":23450,"byte_end":23453,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ The result is a negative box if the boxes do not intersect.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":23458,"byte_end":23521,"line_start":204,"line_end":204,"column_start":5,"column_end":68}},{"value":"/ This can be useful for computing the intersection of more than two boxes, as","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":23526,"byte_end":23606,"line_start":205,"line_end":205,"column_start":5,"column_end":85}},{"value":"/ it is possible to chain multiple intersection_unchecked calls and check for","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":23611,"byte_end":23690,"line_start":206,"line_end":206,"column_start":5,"column_end":84}},{"value":"/ empty/negative result at the end.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":23695,"byte_end":23732,"line_start":207,"line_end":207,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":23737,"byte_end":23746,"line_start":208,"line_end":208,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":418},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":24040,"byte_end":24045,"line_start":217,"line_end":217,"column_start":12,"column_end":17},"name":"union","qualname":"<Box2D<T, U>>::union","value":"pub fn union(&Self, &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":24019,"byte_end":24028,"line_start":216,"line_end":216,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":422},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":24426,"byte_end":24435,"line_start":231,"line_end":231,"column_start":12,"column_end":21},"name":"translate","qualname":"<Box2D<T, U>>::translate","value":"pub fn translate(&Self, Vector2D<T, U>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the same box, translated by a vector.\n","sig":null,"attributes":[{"value":"/ Returns the same box, translated by a vector.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":24351,"byte_end":24400,"line_start":229,"line_end":229,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":24405,"byte_end":24414,"line_start":230,"line_end":230,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":426},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":24662,"byte_end":24666,"line_start":244,"line_end":244,"column_start":12,"column_end":16},"name":"size","qualname":"<Box2D<T, U>>::size","value":"pub fn size(&Self) -> Size2D<T, U>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":24641,"byte_end":24650,"line_start":243,"line_end":243,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":427},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":24764,"byte_end":24769,"line_start":249,"line_end":249,"column_start":12,"column_end":17},"name":"width","qualname":"<Box2D<T, U>>::width","value":"pub fn width(&Self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":24743,"byte_end":24752,"line_start":248,"line_end":248,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":428},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":24848,"byte_end":24854,"line_start":254,"line_end":254,"column_start":12,"column_end":18},"name":"height","qualname":"<Box2D<T, U>>::height","value":"pub fn height(&Self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":24827,"byte_end":24836,"line_start":253,"line_end":253,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":429},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":24933,"byte_end":24940,"line_start":259,"line_end":259,"column_start":12,"column_end":19},"name":"to_rect","qualname":"<Box2D<T, U>>::to_rect","value":"pub fn to_rect(&Self) -> Rect<T, U>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":24912,"byte_end":24921,"line_start":258,"line_end":258,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":433},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":25261,"byte_end":25268,"line_start":274,"line_end":274,"column_start":12,"column_end":19},"name":"inflate","qualname":"<Box2D<T, U>>::inflate","value":"pub fn inflate(&Self, T, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Inflates the box by the specified sizes on each side respectively.\n","sig":null,"attributes":[{"value":"/ Inflates the box by the specified sizes on each side respectively.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":25149,"byte_end":25219,"line_start":271,"line_end":271,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":25224,"byte_end":25233,"line_start":272,"line_end":272,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":25238,"byte_end":25249,"line_start":273,"line_end":273,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":434},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":25704,"byte_end":25713,"line_start":285,"line_end":285,"column_start":12,"column_end":21},"name":"inner_box","qualname":"<Box2D<T, U>>::inner_box","value":"pub fn inner_box(&Self, SideOffsets2D<T, U>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculate the size and position of an inner box.","sig":null,"attributes":[{"value":"/ Calculate the size and position of an inner box.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":25476,"byte_end":25528,"line_start":281,"line_end":281,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":25533,"byte_end":25536,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ Subtracts the side offsets from all sides. The horizontal, vertical","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":25541,"byte_end":25612,"line_start":283,"line_end":283,"column_start":5,"column_end":76}},{"value":"/ and applicate offsets must not be larger than the original side length.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":25617,"byte_end":25692,"line_start":284,"line_end":284,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":435},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":26061,"byte_end":26070,"line_start":295,"line_end":295,"column_start":12,"column_end":21},"name":"outer_box","qualname":"<Box2D<T, U>>::outer_box","value":"pub fn outer_box(&Self, SideOffsets2D<T, U>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculate the b and position of an outer box.","sig":null,"attributes":[{"value":"/ Calculate the b and position of an outer box.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":25924,"byte_end":25973,"line_start":292,"line_end":292,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":25978,"byte_end":25981,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ Add the offsets to all sides. The expanded box is returned.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":25986,"byte_end":26049,"line_start":294,"line_end":294,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":439},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":26426,"byte_end":26437,"line_start":308,"line_end":308,"column_start":12,"column_end":23},"name":"from_points","qualname":"<Box2D<T, U>>::from_points","value":"pub fn from_points<I>(I) -> Self where I: IntoIterator,\nI::Item: Borrow<Point2D<T, U>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the smallest box containing all of the provided points.\n","sig":null,"attributes":[{"value":"/ Returns the smallest box containing all of the provided points.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":26347,"byte_end":26414,"line_start":307,"line_end":307,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":444},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":27473,"byte_end":27477,"line_start":350,"line_end":350,"column_start":12,"column_end":16},"name":"lerp","qualname":"<Box2D<T, U>>::lerp","value":"pub fn lerp(&Self, Self, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Linearly interpolate between this box and another box.\n","sig":null,"attributes":[{"value":"/ Linearly interpolate between this box and another box.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":27389,"byte_end":27447,"line_start":348,"line_end":348,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":27452,"byte_end":27461,"line_start":349,"line_end":349,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":448},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":27696,"byte_end":27702,"line_start":359,"line_end":359,"column_start":12,"column_end":18},"name":"center","qualname":"<Box2D<T, U>>::center","value":"pub fn center(&Self) -> Point2D<T, U>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":452},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":27936,"byte_end":27940,"line_start":370,"line_end":370,"column_start":12,"column_end":16},"name":"area","qualname":"<Box2D<T, U>>::area","value":"pub fn area(&Self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":27915,"byte_end":27924,"line_start":369,"line_end":369,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":456},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":28132,"byte_end":28136,"line_start":381,"line_end":381,"column_start":12,"column_end":16},"name":"zero","qualname":"<Box2D<T, U>>::zero","value":"pub fn zero() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructor, setting all sides to zero.\n","sig":null,"attributes":[{"value":"/ Constructor, setting all sides to zero.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":28077,"byte_end":28120,"line_start":380,"line_end":380,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":498},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":29926,"byte_end":29933,"line_start":457,"line_end":457,"column_start":12,"column_end":19},"name":"x_range","qualname":"<Box2D<T, U>>::x_range","value":"pub fn x_range(&Self) -> Range<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":29905,"byte_end":29914,"line_start":456,"line_end":456,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":499},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":30018,"byte_end":30025,"line_start":462,"line_end":462,"column_start":12,"column_end":19},"name":"y_range","qualname":"<Box2D<T, U>>::y_range","value":"pub fn y_range(&Self) -> Range<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":29997,"byte_end":30006,"line_start":461,"line_end":461,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":500},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":30169,"byte_end":30179,"line_start":468,"line_end":468,"column_start":12,"column_end":22},"name":"to_untyped","qualname":"<Box2D<T, U>>::to_untyped","value":"pub fn to_untyped(&Self) -> Box2D<T, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":" Drop the units, preserving only the numeric value.\n","sig":null,"attributes":[{"value":"/ Drop the units, preserving only the numeric value.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":30089,"byte_end":30143,"line_start":466,"line_end":466,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":30148,"byte_end":30157,"line_start":467,"line_end":467,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":501},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":30352,"byte_end":30364,"line_start":474,"line_end":474,"column_start":12,"column_end":24},"name":"from_untyped","qualname":"<Box2D<T, U>>::from_untyped","value":"pub fn from_untyped(&Box2D<T, UnknownUnit>) -> Box2D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Tag a unitless value with units.\n","sig":null,"attributes":[{"value":"/ Tag a unitless value with units.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":30290,"byte_end":30326,"line_start":472,"line_end":472,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":30331,"byte_end":30340,"line_start":473,"line_end":473,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":502},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":30542,"byte_end":30551,"line_start":480,"line_end":480,"column_start":12,"column_end":21},"name":"cast_unit","qualname":"<Box2D<T, U>>::cast_unit","value":"pub fn cast_unit<V>(&Self) -> Box2D<T, V>","parent":null,"children":[],"decl_id":null,"docs":" Cast the unit\n","sig":null,"attributes":[{"value":"/ Cast the unit","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":30499,"byte_end":30516,"line_start":478,"line_end":478,"column_start":5,"column_end":22}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":30521,"byte_end":30530,"line_start":479,"line_end":479,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":504},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":30674,"byte_end":30679,"line_start":485,"line_end":485,"column_start":12,"column_end":17},"name":"scale","qualname":"<Box2D<T, U>>::scale","value":"pub fn scale<S: Copy>(&Self, S, S) -> Self where T: Mul<S, Output = T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":30653,"byte_end":30662,"line_start":484,"line_end":484,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":509},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":31337,"byte_end":31341,"line_start":503,"line_end":503,"column_start":12,"column_end":16},"name":"cast","qualname":"<Box2D<T, U>>::cast","value":"pub fn cast<NewT: NumCast>(&Self) -> Box2D<NewT, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast from one numeric representation to another, preserving the units.","sig":null,"attributes":[{"value":"/ Cast from one numeric representation to another, preserving the units.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":30957,"byte_end":31031,"line_start":497,"line_end":497,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":31036,"byte_end":31039,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point to integer coordinates, the decimals are truncated","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":31044,"byte_end":31131,"line_start":499,"line_end":499,"column_start":5,"column_end":92}},{"value":"/ as one would expect from a simple cast, but this behavior does not always make sense","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":31136,"byte_end":31224,"line_start":500,"line_end":500,"column_start":5,"column_end":93}},{"value":"/ geometrically. Consider using round(), round_in or round_out() before casting.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":31229,"byte_end":31311,"line_start":501,"line_end":501,"column_start":5,"column_end":87}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":31316,"byte_end":31325,"line_start":502,"line_end":502,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":511},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":31823,"byte_end":31831,"line_start":512,"line_end":512,"column_start":12,"column_end":20},"name":"try_cast","qualname":"<Box2D<T, U>>::try_cast","value":"pub fn try_cast<NewT: NumCast>(&Self) -> Option<Box2D<NewT, U>>","parent":null,"children":[],"decl_id":null,"docs":" Fallible cast from one numeric representation to another, preserving the units.","sig":null,"attributes":[{"value":"/ Fallible cast from one numeric representation to another, preserving the units.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":31448,"byte_end":31531,"line_start":507,"line_end":507,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":31536,"byte_end":31539,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point to integer coordinates, the decimals are truncated","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":31544,"byte_end":31631,"line_start":509,"line_end":509,"column_start":5,"column_end":92}},{"value":"/ as one would expect from a simple cast, but this behavior does not always make sense","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":31636,"byte_end":31724,"line_start":510,"line_end":510,"column_start":5,"column_end":93}},{"value":"/ geometrically. Consider using round(), round_in or round_out() before casting.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":31729,"byte_end":31811,"line_start":511,"line_end":511,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":513},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":32143,"byte_end":32149,"line_start":523,"line_end":523,"column_start":12,"column_end":18},"name":"to_f32","qualname":"<Box2D<T, U>>::to_f32","value":"pub fn to_f32(&Self) -> Box2D<f32, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `f32` box.\n","sig":null,"attributes":[{"value":"/ Cast into an `f32` box.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":32090,"byte_end":32117,"line_start":521,"line_end":521,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":32122,"byte_end":32131,"line_start":522,"line_end":522,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":514},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":32260,"byte_end":32266,"line_start":529,"line_end":529,"column_start":12,"column_end":18},"name":"to_f64","qualname":"<Box2D<T, U>>::to_f64","value":"pub fn to_f64(&Self) -> Box2D<f64, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `f64` box.\n","sig":null,"attributes":[{"value":"/ Cast into an `f64` box.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":32207,"byte_end":32234,"line_start":527,"line_end":527,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":32239,"byte_end":32248,"line_start":528,"line_end":528,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":515},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":32623,"byte_end":32631,"line_start":539,"line_end":539,"column_start":12,"column_end":20},"name":"to_usize","qualname":"<Box2D<T, U>>::to_usize","value":"pub fn to_usize(&Self) -> Box2D<usize, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `usize` box, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `usize` box, truncating decimals if any.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":32324,"byte_end":32381,"line_start":533,"line_end":533,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":32386,"byte_end":32389,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point boxes, it is worth considering whether","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":32394,"byte_end":32469,"line_start":535,"line_end":535,"column_start":5,"column_end":80}},{"value":"/ to `round()`, `round_in()` or `round_out()` before the cast in order to","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":32474,"byte_end":32549,"line_start":536,"line_end":536,"column_start":5,"column_end":80}},{"value":"/ obtain the desired conversion behavior.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":32554,"byte_end":32597,"line_start":537,"line_end":537,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":32602,"byte_end":32611,"line_start":538,"line_end":538,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":516},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":32988,"byte_end":32994,"line_start":549,"line_end":549,"column_start":12,"column_end":18},"name":"to_u32","qualname":"<Box2D<T, U>>::to_u32","value":"pub fn to_u32(&Self) -> Box2D<u32, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `u32` box, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `u32` box, truncating decimals if any.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":32691,"byte_end":32746,"line_start":543,"line_end":543,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":32751,"byte_end":32754,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point boxes, it is worth considering whether","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":32759,"byte_end":32834,"line_start":545,"line_end":545,"column_start":5,"column_end":80}},{"value":"/ to `round()`, `round_in()` or `round_out()` before the cast in order to","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":32839,"byte_end":32914,"line_start":546,"line_end":546,"column_start":5,"column_end":80}},{"value":"/ obtain the desired conversion behavior.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":32919,"byte_end":32962,"line_start":547,"line_end":547,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":32967,"byte_end":32976,"line_start":548,"line_end":548,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":517},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":33349,"byte_end":33355,"line_start":559,"line_end":559,"column_start":12,"column_end":18},"name":"to_i32","qualname":"<Box2D<T, U>>::to_i32","value":"pub fn to_i32(&Self) -> Box2D<i32, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `i32` box, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `i32` box, truncating decimals if any.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":33052,"byte_end":33107,"line_start":553,"line_end":553,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":33112,"byte_end":33115,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point boxes, it is worth considering whether","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":33120,"byte_end":33195,"line_start":555,"line_end":555,"column_start":5,"column_end":80}},{"value":"/ to `round()`, `round_in()` or `round_out()` before the cast in order to","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":33200,"byte_end":33275,"line_start":556,"line_end":556,"column_start":5,"column_end":80}},{"value":"/ obtain the desired conversion behavior.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":33280,"byte_end":33323,"line_start":557,"line_end":557,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":33328,"byte_end":33337,"line_start":558,"line_end":558,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":518},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":33710,"byte_end":33716,"line_start":569,"line_end":569,"column_start":12,"column_end":18},"name":"to_i64","qualname":"<Box2D<T, U>>::to_i64","value":"pub fn to_i64(&Self) -> Box2D<i64, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `i64` box, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `i64` box, truncating decimals if any.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":33413,"byte_end":33468,"line_start":563,"line_end":563,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":33473,"byte_end":33476,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point boxes, it is worth considering whether","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":33481,"byte_end":33556,"line_start":565,"line_end":565,"column_start":5,"column_end":80}},{"value":"/ to `round()`, `round_in()` or `round_out()` before the cast in order to","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":33561,"byte_end":33636,"line_start":566,"line_end":566,"column_start":5,"column_end":80}},{"value":"/ obtain the desired conversion behavior.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":33641,"byte_end":33684,"line_start":567,"line_end":567,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":33689,"byte_end":33698,"line_start":568,"line_end":568,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":522},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":33877,"byte_end":33886,"line_start":577,"line_end":577,"column_start":12,"column_end":21},"name":"is_finite","qualname":"<Box2D<T, U>>::is_finite","value":"pub fn is_finite(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if all members are finite.\n","sig":null,"attributes":[{"value":"/ Returns true if all members are finite.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":33808,"byte_end":33851,"line_start":575,"line_end":575,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":33856,"byte_end":33865,"line_start":576,"line_end":576,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":526},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":34558,"byte_end":34563,"line_start":596,"line_end":596,"column_start":12,"column_end":17},"name":"round","qualname":"<Box2D<T, U>>::round","value":"pub fn round(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a box with edges rounded to integer coordinates, such that\n the returned box has the same set of pixel centers as the original\n one.\n Values equal to 0.5 round up.\n Suitable for most places where integral device coordinates\n are needed, but note that any translation should be applied first to\n avoid pixel rounding errors.\n Note that this is *not* rounding to nearest integer if the values are negative.\n They are always rounding as floor(n + 0.5).\n","sig":null,"attributes":[{"value":"/ Return a box with edges rounded to integer coordinates, such that","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":34014,"byte_end":34083,"line_start":586,"line_end":586,"column_start":5,"column_end":74}},{"value":"/ the returned box has the same set of pixel centers as the original","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":34088,"byte_end":34158,"line_start":587,"line_end":587,"column_start":5,"column_end":75}},{"value":"/ one.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":34163,"byte_end":34171,"line_start":588,"line_end":588,"column_start":5,"column_end":13}},{"value":"/ Values equal to 0.5 round up.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":34176,"byte_end":34209,"line_start":589,"line_end":589,"column_start":5,"column_end":38}},{"value":"/ Suitable for most places where integral device coordinates","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":34214,"byte_end":34276,"line_start":590,"line_end":590,"column_start":5,"column_end":67}},{"value":"/ are needed, but note that any translation should be applied first to","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":34281,"byte_end":34353,"line_start":591,"line_end":591,"column_start":5,"column_end":77}},{"value":"/ avoid pixel rounding errors.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":34358,"byte_end":34390,"line_start":592,"line_end":592,"column_start":5,"column_end":37}},{"value":"/ Note that this is *not* rounding to nearest integer if the values are negative.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":34395,"byte_end":34478,"line_start":593,"line_end":593,"column_start":5,"column_end":88}},{"value":"/ They are always rounding as floor(n + 0.5).","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":34483,"byte_end":34530,"line_start":594,"line_end":594,"column_start":5,"column_end":52}},{"value":"must_use","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":34535,"byte_end":34546,"line_start":595,"line_end":595,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":530},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":34857,"byte_end":34865,"line_start":608,"line_end":608,"column_start":12,"column_end":20},"name":"round_in","qualname":"<Box2D<T, U>>::round_in","value":"pub fn round_in(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a box with faces/edges rounded to integer coordinates, such that\n the original box contains the resulting box.\n","sig":null,"attributes":[{"value":"/ Return a box with faces/edges rounded to integer coordinates, such that","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":34701,"byte_end":34776,"line_start":605,"line_end":605,"column_start":5,"column_end":80}},{"value":"/ the original box contains the resulting box.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":34781,"byte_end":34829,"line_start":606,"line_end":606,"column_start":5,"column_end":53}},{"value":"must_use","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":34834,"byte_end":34845,"line_start":607,"line_end":607,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":531},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":35155,"byte_end":35164,"line_start":617,"line_end":617,"column_start":12,"column_end":21},"name":"round_out","qualname":"<Box2D<T, U>>::round_out","value":"pub fn round_out(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a box with faces/edges rounded to integer coordinates, such that\n the original box is contained in the resulting box.\n","sig":null,"attributes":[{"value":"/ Return a box with faces/edges rounded to integer coordinates, such that","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":34992,"byte_end":35067,"line_start":614,"line_end":614,"column_start":5,"column_end":80}},{"value":"/ the original box is contained in the resulting box.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":35072,"byte_end":35127,"line_start":615,"line_end":615,"column_start":5,"column_end":60}},{"value":"must_use","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":35132,"byte_end":35143,"line_start":616,"line_end":616,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":613},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":43823,"byte_end":43828,"line_start":35,"line_end":35,"column_start":12,"column_end":17},"name":"Box3D","qualname":"::box3d::Box3D","value":"Box3D { min, max }","parent":null,"children":[{"krate":0,"index":616},{"krate":0,"index":617}],"decl_id":null,"docs":" An axis aligned 3D box represented by its minimum and maximum coordinates.\n","sig":null,"attributes":[{"value":"/ An axis aligned 3D box represented by its minimum and maximum coordinates.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":43539,"byte_end":43617,"line_start":28,"line_end":28,"column_start":1,"column_end":79}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":43618,"byte_end":43628,"line_start":29,"line_end":29,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":616},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":43845,"byte_end":43848,"line_start":36,"line_end":36,"column_start":9,"column_end":12},"name":"min","qualname":"::box3d::Box3D::min","value":"point::Point3D<T, U>","parent":{"krate":0,"index":613},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":617},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":43873,"byte_end":43876,"line_start":37,"line_end":37,"column_start":9,"column_end":12},"name":"max","qualname":"::box3d::Box3D::max","value":"point::Point3D<T, U>","parent":{"krate":0,"index":613},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":644},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":44724,"byte_end":44727,"line_start":75,"line_end":75,"column_start":18,"column_end":21},"name":"new","qualname":"<Box3D<T, U>>::new","value":"pub const fn new(Point3D<T, U>, Point3D<T, U>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructor.\n","sig":null,"attributes":[{"value":"/ Constructor.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":44676,"byte_end":44692,"line_start":73,"line_end":73,"column_start":5,"column_end":21}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":44697,"byte_end":44706,"line_start":74,"line_end":74,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":645},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":44896,"byte_end":44905,"line_start":81,"line_end":81,"column_start":12,"column_end":21},"name":"from_size","qualname":"<Box3D<T, U>>::from_size","value":"pub fn from_size(Size3D<T, U>) -> Self where T: Zero","parent":null,"children":[],"decl_id":null,"docs":" Creates a Box3D of the given size, at offset zero.\n","sig":null,"attributes":[{"value":"/ Creates a Box3D of the given size, at offset zero.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":44816,"byte_end":44870,"line_start":79,"line_end":79,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":44875,"byte_end":44884,"line_start":80,"line_end":80,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":649},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":45392,"byte_end":45403,"line_start":98,"line_end":98,"column_start":12,"column_end":23},"name":"is_negative","qualname":"<Box3D<T, U>>::is_negative","value":"pub fn is_negative(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the box has a negative volume.","sig":null,"attributes":[{"value":"/ Returns true if the box has a negative volume.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":45135,"byte_end":45185,"line_start":93,"line_end":93,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":45190,"byte_end":45193,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ The common interpretation for a negative box is to consider it empty. It can be obtained","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":45198,"byte_end":45290,"line_start":95,"line_end":95,"column_start":5,"column_end":97}},{"value":"/ by calculating the intersection of two boxes that do not intersect.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":45295,"byte_end":45366,"line_start":96,"line_end":96,"column_start":5,"column_end":76}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":45371,"byte_end":45380,"line_start":97,"line_end":97,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":650},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":45598,"byte_end":45606,"line_start":104,"line_end":104,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Box3D<T, U>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the size is zero, negative or NaN.\n","sig":null,"attributes":[{"value":"/ Returns true if the size is zero, negative or NaN.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":45518,"byte_end":45572,"line_start":102,"line_end":102,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":45577,"byte_end":45586,"line_start":103,"line_end":103,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":651},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":45745,"byte_end":45755,"line_start":109,"line_end":109,"column_start":12,"column_end":22},"name":"intersects","qualname":"<Box3D<T, U>>::intersects","value":"pub fn intersects(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":45724,"byte_end":45733,"line_start":108,"line_end":108,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":652},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":46265,"byte_end":46273,"line_start":122,"line_end":122,"column_start":12,"column_end":20},"name":"contains","qualname":"<Box3D<T, U>>::contains","value":"pub fn contains(&Self, Point3D<T, U>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this box3d contains the point. Points are considered\n in the box3d if they are on the front, left or top faces, but outside if they\n are on the back, right or bottom faces.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this box3d contains the point. Points are considered","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":46031,"byte_end":46105,"line_start":118,"line_end":118,"column_start":5,"column_end":79}},{"value":"/ in the box3d if they are on the front, left or top faces, but outside if they","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":46110,"byte_end":46191,"line_start":119,"line_end":119,"column_start":5,"column_end":86}},{"value":"/ are on the back, right or bottom faces.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":46196,"byte_end":46239,"line_start":120,"line_end":120,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":46244,"byte_end":46253,"line_start":121,"line_end":121,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":653},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":46766,"byte_end":46778,"line_start":135,"line_end":135,"column_start":12,"column_end":24},"name":"contains_box","qualname":"<Box3D<T, U>>::contains_box","value":"pub fn contains_box(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this box3d contains the interior of the other box3d. Always\n returns `true` if other is empty, and always returns `false` if other is\n nonempty but this box3d is empty.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this box3d contains the interior of the other box3d. Always","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":46536,"byte_end":46617,"line_start":131,"line_end":131,"column_start":5,"column_end":86}},{"value":"/ returns `true` if other is empty, and always returns `false` if other is","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":46622,"byte_end":46698,"line_start":132,"line_end":132,"column_start":5,"column_end":81}},{"value":"/ nonempty but this box3d is empty.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":46703,"byte_end":46740,"line_start":133,"line_end":133,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":46745,"byte_end":46754,"line_start":134,"line_end":134,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":657},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":47194,"byte_end":47206,"line_start":151,"line_end":151,"column_start":12,"column_end":24},"name":"to_non_empty","qualname":"<Box3D<T, U>>::to_non_empty","value":"pub fn to_non_empty(&Self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":47173,"byte_end":47182,"line_start":150,"line_end":150,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":658},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":47349,"byte_end":47361,"line_start":160,"line_end":160,"column_start":12,"column_end":24},"name":"intersection","qualname":"<Box3D<T, U>>::intersection","value":"pub fn intersection(&Self, &Self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":47328,"byte_end":47337,"line_start":159,"line_end":159,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":659},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":47550,"byte_end":47572,"line_start":170,"line_end":170,"column_start":12,"column_end":34},"name":"intersection_unchecked","qualname":"<Box3D<T, U>>::intersection_unchecked","value":"pub fn intersection_unchecked(&Self, &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":660},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":48129,"byte_end":48134,"line_start":188,"line_end":188,"column_start":12,"column_end":17},"name":"union","qualname":"<Box3D<T, U>>::union","value":"pub fn union(&Self, &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the smallest box containing both of the provided boxes.\n","sig":null,"attributes":[{"value":"/ Returns the smallest box containing both of the provided boxes.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":48036,"byte_end":48103,"line_start":186,"line_end":186,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":48108,"byte_end":48117,"line_start":187,"line_end":187,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":664},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":48725,"byte_end":48734,"line_start":211,"line_end":211,"column_start":12,"column_end":21},"name":"translate","qualname":"<Box3D<T, U>>::translate","value":"pub fn translate(&Self, Vector3D<T, U>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the same box3d, translated by a vector.\n","sig":null,"attributes":[{"value":"/ Returns the same box3d, translated by a vector.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":48632,"byte_end":48683,"line_start":208,"line_end":208,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":48688,"byte_end":48697,"line_start":209,"line_end":209,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":48702,"byte_end":48713,"line_start":210,"line_end":210,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":668},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":48961,"byte_end":48965,"line_start":224,"line_end":224,"column_start":12,"column_end":16},"name":"size","qualname":"<Box3D<T, U>>::size","value":"pub fn size(&Self) -> Size3D<T, U>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":48940,"byte_end":48949,"line_start":223,"line_end":223,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":669},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":49165,"byte_end":49170,"line_start":233,"line_end":233,"column_start":12,"column_end":17},"name":"width","qualname":"<Box3D<T, U>>::width","value":"pub fn width(&Self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":49144,"byte_end":49153,"line_start":232,"line_end":232,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":670},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":49249,"byte_end":49255,"line_start":238,"line_end":238,"column_start":12,"column_end":18},"name":"height","qualname":"<Box3D<T, U>>::height","value":"pub fn height(&Self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":49228,"byte_end":49237,"line_start":237,"line_end":237,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":671},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":49334,"byte_end":49339,"line_start":243,"line_end":243,"column_start":12,"column_end":17},"name":"depth","qualname":"<Box3D<T, U>>::depth","value":"pub fn depth(&Self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":49313,"byte_end":49322,"line_start":242,"line_end":242,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":675},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":49597,"byte_end":49604,"line_start":255,"line_end":255,"column_start":12,"column_end":19},"name":"inflate","qualname":"<Box3D<T, U>>::inflate","value":"pub fn inflate(&Self, T, T, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Inflates the box by the specified sizes on each side respectively.\n","sig":null,"attributes":[{"value":"/ Inflates the box by the specified sizes on each side respectively.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":49485,"byte_end":49555,"line_start":252,"line_end":252,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":49560,"byte_end":49569,"line_start":253,"line_end":253,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":49574,"byte_end":49585,"line_start":254,"line_end":254,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":679},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":50013,"byte_end":50024,"line_start":268,"line_end":268,"column_start":12,"column_end":23},"name":"from_points","qualname":"<Box3D<T, U>>::from_points","value":"pub fn from_points<I>(I) -> Self where I: IntoIterator,\nI::Item: Borrow<Point3D<T, U>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the smallest box containing all of the provided points.\n","sig":null,"attributes":[{"value":"/ Returns the smallest box containing all of the provided points.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":49934,"byte_end":50001,"line_start":267,"line_end":267,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":684},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":51249,"byte_end":51253,"line_start":316,"line_end":316,"column_start":12,"column_end":16},"name":"lerp","qualname":"<Box3D<T, U>>::lerp","value":"pub fn lerp(&Self, Self, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Linearly interpolate between this box3d and another box3d.\n","sig":null,"attributes":[{"value":"/ Linearly interpolate between this box3d and another box3d.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":51161,"byte_end":51223,"line_start":314,"line_end":314,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":51228,"byte_end":51237,"line_start":315,"line_end":315,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":688},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":51472,"byte_end":51478,"line_start":325,"line_end":325,"column_start":12,"column_end":18},"name":"center","qualname":"<Box3D<T, U>>::center","value":"pub fn center(&Self) -> Point3D<T, U>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":692},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":51712,"byte_end":51718,"line_start":336,"line_end":336,"column_start":12,"column_end":18},"name":"volume","qualname":"<Box3D<T, U>>::volume","value":"pub fn volume(&Self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":51691,"byte_end":51700,"line_start":335,"line_end":335,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":693},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":51843,"byte_end":51850,"line_start":342,"line_end":342,"column_start":12,"column_end":19},"name":"xy_area","qualname":"<Box3D<T, U>>::xy_area","value":"pub fn xy_area(&Self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":51822,"byte_end":51831,"line_start":341,"line_end":341,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":694},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":51962,"byte_end":51969,"line_start":348,"line_end":348,"column_start":12,"column_end":19},"name":"yz_area","qualname":"<Box3D<T, U>>::yz_area","value":"pub fn yz_area(&Self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":51941,"byte_end":51950,"line_start":347,"line_end":347,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":695},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":52081,"byte_end":52088,"line_start":354,"line_end":354,"column_start":12,"column_end":19},"name":"xz_area","qualname":"<Box3D<T, U>>::xz_area","value":"pub fn xz_area(&Self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":52060,"byte_end":52069,"line_start":353,"line_end":353,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":699},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":52279,"byte_end":52283,"line_start":365,"line_end":365,"column_start":12,"column_end":16},"name":"zero","qualname":"<Box3D<T, U>>::zero","value":"pub fn zero() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructor, setting all sides to zero.\n","sig":null,"attributes":[{"value":"/ Constructor, setting all sides to zero.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":52224,"byte_end":52267,"line_start":364,"line_end":364,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":741},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":54149,"byte_end":54156,"line_start":443,"line_end":443,"column_start":12,"column_end":19},"name":"x_range","qualname":"<Box3D<T, U>>::x_range","value":"pub fn x_range(&Self) -> Range<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":54128,"byte_end":54137,"line_start":442,"line_end":442,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":742},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":54241,"byte_end":54248,"line_start":448,"line_end":448,"column_start":12,"column_end":19},"name":"y_range","qualname":"<Box3D<T, U>>::y_range","value":"pub fn y_range(&Self) -> Range<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":54220,"byte_end":54229,"line_start":447,"line_end":447,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":743},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":54333,"byte_end":54340,"line_start":453,"line_end":453,"column_start":12,"column_end":19},"name":"z_range","qualname":"<Box3D<T, U>>::z_range","value":"pub fn z_range(&Self) -> Range<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":54312,"byte_end":54321,"line_start":452,"line_end":452,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":744},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":54484,"byte_end":54494,"line_start":459,"line_end":459,"column_start":12,"column_end":22},"name":"to_untyped","qualname":"<Box3D<T, U>>::to_untyped","value":"pub fn to_untyped(&Self) -> Box3D<T, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":" Drop the units, preserving only the numeric value.\n","sig":null,"attributes":[{"value":"/ Drop the units, preserving only the numeric value.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":54404,"byte_end":54458,"line_start":457,"line_end":457,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":54463,"byte_end":54472,"line_start":458,"line_end":458,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":745},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":54708,"byte_end":54720,"line_start":468,"line_end":468,"column_start":12,"column_end":24},"name":"from_untyped","qualname":"<Box3D<T, U>>::from_untyped","value":"pub fn from_untyped(&Box3D<T, UnknownUnit>) -> Box3D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Tag a unitless value with units.\n","sig":null,"attributes":[{"value":"/ Tag a unitless value with units.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":54646,"byte_end":54682,"line_start":466,"line_end":466,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":54687,"byte_end":54696,"line_start":467,"line_end":467,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":746},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":54939,"byte_end":54948,"line_start":477,"line_end":477,"column_start":12,"column_end":21},"name":"cast_unit","qualname":"<Box3D<T, U>>::cast_unit","value":"pub fn cast_unit<V>(&Self) -> Box3D<T, V>","parent":null,"children":[],"decl_id":null,"docs":" Cast the unit\n","sig":null,"attributes":[{"value":"/ Cast the unit","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":54896,"byte_end":54913,"line_start":475,"line_end":475,"column_start":5,"column_end":22}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":54918,"byte_end":54927,"line_start":476,"line_end":476,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":748},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":55071,"byte_end":55076,"line_start":482,"line_end":482,"column_start":12,"column_end":17},"name":"scale","qualname":"<Box3D<T, U>>::scale","value":"pub fn scale<S: Copy>(&Self, S, S, S) -> Self where T: Mul<S, Output = T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":55050,"byte_end":55059,"line_start":481,"line_end":481,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":753},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":55778,"byte_end":55782,"line_start":500,"line_end":500,"column_start":12,"column_end":16},"name":"cast","qualname":"<Box3D<T, U>>::cast","value":"pub fn cast<NewT: NumCast>(&Self) -> Box3D<NewT, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast from one numeric representation to another, preserving the units.","sig":null,"attributes":[{"value":"/ Cast from one numeric representation to another, preserving the units.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":55398,"byte_end":55472,"line_start":494,"line_end":494,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":55477,"byte_end":55480,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point to integer coordinates, the decimals are truncated","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":55485,"byte_end":55572,"line_start":496,"line_end":496,"column_start":5,"column_end":92}},{"value":"/ as one would expect from a simple cast, but this behavior does not always make sense","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":55577,"byte_end":55665,"line_start":497,"line_end":497,"column_start":5,"column_end":93}},{"value":"/ geometrically. Consider using round(), round_in or round_out() before casting.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":55670,"byte_end":55752,"line_start":498,"line_end":498,"column_start":5,"column_end":87}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":55757,"byte_end":55766,"line_start":499,"line_end":499,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":755},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":56264,"byte_end":56272,"line_start":509,"line_end":509,"column_start":12,"column_end":20},"name":"try_cast","qualname":"<Box3D<T, U>>::try_cast","value":"pub fn try_cast<NewT: NumCast>(&Self) -> Option<Box3D<NewT, U>>","parent":null,"children":[],"decl_id":null,"docs":" Fallible cast from one numeric representation to another, preserving the units.","sig":null,"attributes":[{"value":"/ Fallible cast from one numeric representation to another, preserving the units.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":55889,"byte_end":55972,"line_start":504,"line_end":504,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":55977,"byte_end":55980,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point to integer coordinates, the decimals are truncated","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":55985,"byte_end":56072,"line_start":506,"line_end":506,"column_start":5,"column_end":92}},{"value":"/ as one would expect from a simple cast, but this behavior does not always make sense","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":56077,"byte_end":56165,"line_start":507,"line_end":507,"column_start":5,"column_end":93}},{"value":"/ geometrically. Consider using round(), round_in or round_out() before casting.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":56170,"byte_end":56252,"line_start":508,"line_end":508,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":757},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":56586,"byte_end":56592,"line_start":520,"line_end":520,"column_start":12,"column_end":18},"name":"to_f32","qualname":"<Box3D<T, U>>::to_f32","value":"pub fn to_f32(&Self) -> Box3D<f32, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `f32` box3d.\n","sig":null,"attributes":[{"value":"/ Cast into an `f32` box3d.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":56531,"byte_end":56560,"line_start":518,"line_end":518,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":56565,"byte_end":56574,"line_start":519,"line_end":519,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":758},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":56705,"byte_end":56711,"line_start":526,"line_end":526,"column_start":12,"column_end":18},"name":"to_f64","qualname":"<Box3D<T, U>>::to_f64","value":"pub fn to_f64(&Self) -> Box3D<f64, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `f64` box3d.\n","sig":null,"attributes":[{"value":"/ Cast into an `f64` box3d.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":56650,"byte_end":56679,"line_start":524,"line_end":524,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":56684,"byte_end":56693,"line_start":525,"line_end":525,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":759},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":57072,"byte_end":57080,"line_start":536,"line_end":536,"column_start":12,"column_end":20},"name":"to_usize","qualname":"<Box3D<T, U>>::to_usize","value":"pub fn to_usize(&Self) -> Box3D<usize, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `usize` box3d, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `usize` box3d, truncating decimals if any.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":56769,"byte_end":56828,"line_start":530,"line_end":530,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":56833,"byte_end":56836,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point cuboids, it is worth considering whether","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":56841,"byte_end":56918,"line_start":532,"line_end":532,"column_start":5,"column_end":82}},{"value":"/ to `round()`, `round_in()` or `round_out()` before the cast in order to","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":56923,"byte_end":56998,"line_start":533,"line_end":533,"column_start":5,"column_end":80}},{"value":"/ obtain the desired conversion behavior.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":57003,"byte_end":57046,"line_start":534,"line_end":534,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":57051,"byte_end":57060,"line_start":535,"line_end":535,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":760},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":57441,"byte_end":57447,"line_start":546,"line_end":546,"column_start":12,"column_end":18},"name":"to_u32","qualname":"<Box3D<T, U>>::to_u32","value":"pub fn to_u32(&Self) -> Box3D<u32, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `u32` box3d, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `u32` box3d, truncating decimals if any.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":57140,"byte_end":57197,"line_start":540,"line_end":540,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":57202,"byte_end":57205,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point cuboids, it is worth considering whether","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":57210,"byte_end":57287,"line_start":542,"line_end":542,"column_start":5,"column_end":82}},{"value":"/ to `round()`, `round_in()` or `round_out()` before the cast in order to","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":57292,"byte_end":57367,"line_start":543,"line_end":543,"column_start":5,"column_end":80}},{"value":"/ obtain the desired conversion behavior.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":57372,"byte_end":57415,"line_start":544,"line_end":544,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":57420,"byte_end":57429,"line_start":545,"line_end":545,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":761},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":57806,"byte_end":57812,"line_start":556,"line_end":556,"column_start":12,"column_end":18},"name":"to_i32","qualname":"<Box3D<T, U>>::to_i32","value":"pub fn to_i32(&Self) -> Box3D<i32, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `i32` box3d, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `i32` box3d, truncating decimals if any.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":57505,"byte_end":57562,"line_start":550,"line_end":550,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":57567,"byte_end":57570,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point cuboids, it is worth considering whether","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":57575,"byte_end":57652,"line_start":552,"line_end":552,"column_start":5,"column_end":82}},{"value":"/ to `round()`, `round_in()` or `round_out()` before the cast in order to","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":57657,"byte_end":57732,"line_start":553,"line_end":553,"column_start":5,"column_end":80}},{"value":"/ obtain the desired conversion behavior.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":57737,"byte_end":57780,"line_start":554,"line_end":554,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":57785,"byte_end":57794,"line_start":555,"line_end":555,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":762},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":58171,"byte_end":58177,"line_start":566,"line_end":566,"column_start":12,"column_end":18},"name":"to_i64","qualname":"<Box3D<T, U>>::to_i64","value":"pub fn to_i64(&Self) -> Box3D<i64, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `i64` box3d, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `i64` box3d, truncating decimals if any.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":57870,"byte_end":57927,"line_start":560,"line_end":560,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":57932,"byte_end":57935,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point cuboids, it is worth considering whether","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":57940,"byte_end":58017,"line_start":562,"line_end":562,"column_start":5,"column_end":82}},{"value":"/ to `round()`, `round_in()` or `round_out()` before the cast in order to","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":58022,"byte_end":58097,"line_start":563,"line_end":563,"column_start":5,"column_end":80}},{"value":"/ obtain the desired conversion behavior.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":58102,"byte_end":58145,"line_start":564,"line_end":564,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":58150,"byte_end":58159,"line_start":565,"line_end":565,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":766},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":58338,"byte_end":58347,"line_start":574,"line_end":574,"column_start":12,"column_end":21},"name":"is_finite","qualname":"<Box3D<T, U>>::is_finite","value":"pub fn is_finite(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if all members are finite.\n","sig":null,"attributes":[{"value":"/ Returns true if all members are finite.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":58269,"byte_end":58312,"line_start":572,"line_end":572,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":58317,"byte_end":58326,"line_start":573,"line_end":573,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":770},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":59023,"byte_end":59028,"line_start":593,"line_end":593,"column_start":12,"column_end":17},"name":"round","qualname":"<Box3D<T, U>>::round","value":"pub fn round(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a box3d with edges rounded to integer coordinates, such that\n the returned box3d has the same set of pixel centers as the original\n one.\n Values equal to 0.5 round up.\n Suitable for most places where integral device coordinates\n are needed, but note that any translation should be applied first to\n avoid pixel rounding errors.\n Note that this is *not* rounding to nearest integer if the values are negative.\n They are always rounding as floor(n + 0.5).\n","sig":null,"attributes":[{"value":"/ Return a box3d with edges rounded to integer coordinates, such that","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":58475,"byte_end":58546,"line_start":583,"line_end":583,"column_start":5,"column_end":76}},{"value":"/ the returned box3d has the same set of pixel centers as the original","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":58551,"byte_end":58623,"line_start":584,"line_end":584,"column_start":5,"column_end":77}},{"value":"/ one.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":58628,"byte_end":58636,"line_start":585,"line_end":585,"column_start":5,"column_end":13}},{"value":"/ Values equal to 0.5 round up.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":58641,"byte_end":58674,"line_start":586,"line_end":586,"column_start":5,"column_end":38}},{"value":"/ Suitable for most places where integral device coordinates","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":58679,"byte_end":58741,"line_start":587,"line_end":587,"column_start":5,"column_end":67}},{"value":"/ are needed, but note that any translation should be applied first to","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":58746,"byte_end":58818,"line_start":588,"line_end":588,"column_start":5,"column_end":77}},{"value":"/ avoid pixel rounding errors.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":58823,"byte_end":58855,"line_start":589,"line_end":589,"column_start":5,"column_end":37}},{"value":"/ Note that this is *not* rounding to nearest integer if the values are negative.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":58860,"byte_end":58943,"line_start":590,"line_end":590,"column_start":5,"column_end":88}},{"value":"/ They are always rounding as floor(n + 0.5).","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":58948,"byte_end":58995,"line_start":591,"line_end":591,"column_start":5,"column_end":52}},{"value":"must_use","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":59000,"byte_end":59011,"line_start":592,"line_end":592,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":774},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":59328,"byte_end":59336,"line_start":605,"line_end":605,"column_start":12,"column_end":20},"name":"round_in","qualname":"<Box3D<T, U>>::round_in","value":"pub fn round_in(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a box3d with faces/edges rounded to integer coordinates, such that\n the original box3d contains the resulting box3d.\n","sig":null,"attributes":[{"value":"/ Return a box3d with faces/edges rounded to integer coordinates, such that","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":59166,"byte_end":59243,"line_start":602,"line_end":602,"column_start":5,"column_end":82}},{"value":"/ the original box3d contains the resulting box3d.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":59248,"byte_end":59300,"line_start":603,"line_end":603,"column_start":5,"column_end":57}},{"value":"must_use","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":59305,"byte_end":59316,"line_start":604,"line_end":604,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":775},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":59629,"byte_end":59638,"line_start":615,"line_end":615,"column_start":12,"column_end":21},"name":"round_out","qualname":"<Box3D<T, U>>::round_out","value":"pub fn round_out(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a box3d with faces/edges rounded to integer coordinates, such that\n the original box3d is contained in the resulting box3d.\n","sig":null,"attributes":[{"value":"/ Return a box3d with faces/edges rounded to integer coordinates, such that","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":59460,"byte_end":59537,"line_start":612,"line_end":612,"column_start":5,"column_end":82}},{"value":"/ the original box3d is contained in the resulting box3d.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":59542,"byte_end":59601,"line_start":613,"line_end":613,"column_start":5,"column_end":64}},{"value":"must_use","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":59606,"byte_end":59617,"line_start":614,"line_end":614,"column_start":5,"column_end":16}}]},{"kind":"Function","id":{"krate":0,"index":784},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":60195,"byte_end":60200,"line_start":642,"line_end":642,"column_start":8,"column_end":13},"name":"box3d","qualname":"::box3d::box3d","value":"pub fn box3d<T: Copy, U>(T, T, T, T, T, T) -> Box3D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Shorthand for `Box3D::new(Point3D::new(x1, y1, z1), Point3D::new(x2, y2, z2))`.\n","sig":null,"attributes":[{"value":"/ Shorthand for `Box3D::new(Point3D::new(x1, y1, z1), Point3D::new(x2, y2, z2))`.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":60104,"byte_end":60187,"line_start":641,"line_end":641,"column_start":1,"column_end":84}}]},{"kind":"Struct","id":{"krate":0,"index":828},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\homogen.rs","byte_start":70055,"byte_end":70072,"line_start":25,"line_end":25,"column_start":12,"column_end":29},"name":"HomogeneousVector","qualname":"::homogen::HomogeneousVector","value":"HomogeneousVector { x, y, z, w, _unit }","parent":null,"children":[{"krate":0,"index":831},{"krate":0,"index":832},{"krate":0,"index":833},{"krate":0,"index":834},{"krate":0,"index":835}],"decl_id":null,"docs":" Homogeneous vector in 3D space.\n","sig":null,"attributes":[{"value":"/ Homogeneous vector in 3D space.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\homogen.rs","byte_start":69997,"byte_end":70032,"line_start":23,"line_end":23,"column_start":1,"column_end":36}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\homogen.rs","byte_start":70033,"byte_end":70043,"line_start":24,"line_end":24,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":831},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\homogen.rs","byte_start":70089,"byte_end":70090,"line_start":26,"line_end":26,"column_start":9,"column_end":10},"name":"x","qualname":"::homogen::HomogeneousVector::x","value":"T","parent":{"krate":0,"index":828},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":832},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\homogen.rs","byte_start":70103,"byte_end":70104,"line_start":27,"line_end":27,"column_start":9,"column_end":10},"name":"y","qualname":"::homogen::HomogeneousVector::y","value":"T","parent":{"krate":0,"index":828},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":833},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\homogen.rs","byte_start":70117,"byte_end":70118,"line_start":28,"line_end":28,"column_start":9,"column_end":10},"name":"z","qualname":"::homogen::HomogeneousVector::z","value":"T","parent":{"krate":0,"index":828},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":834},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\homogen.rs","byte_start":70131,"byte_end":70132,"line_start":29,"line_end":29,"column_start":9,"column_end":10},"name":"w","qualname":"::homogen::HomogeneousVector::w","value":"T","parent":{"krate":0,"index":828},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":835},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\homogen.rs","byte_start":70164,"byte_end":70169,"line_start":31,"line_end":31,"column_start":9,"column_end":14},"name":"_unit","qualname":"::homogen::HomogeneousVector::_unit","value":"core::marker::PhantomData<U>","parent":{"krate":0,"index":828},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":858},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\homogen.rs","byte_start":71923,"byte_end":71926,"line_start":107,"line_end":107,"column_start":18,"column_end":21},"name":"new","qualname":"<HomogeneousVector<T, U>>::new","value":"pub const fn new(T, T, T, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructor taking scalar values directly.\n","sig":null,"attributes":[{"value":"/ Constructor taking scalar values directly.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\homogen.rs","byte_start":71845,"byte_end":71891,"line_start":105,"line_end":105,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\homogen.rs","byte_start":71896,"byte_end":71905,"line_start":106,"line_end":106,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":862},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\homogen.rs","byte_start":72328,"byte_end":72338,"line_start":123,"line_end":123,"column_start":12,"column_end":22},"name":"to_point2d","qualname":"<HomogeneousVector<T, U>>::to_point2d","value":"pub fn to_point2d(Self) -> Option<Point2D<T, U>>","parent":null,"children":[],"decl_id":null,"docs":" Convert into Cartesian 2D point.","sig":null,"attributes":[{"value":"/ Convert into Cartesian 2D point.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\homogen.rs","byte_start":72188,"byte_end":72224,"line_start":119,"line_end":119,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\homogen.rs","byte_start":72229,"byte_end":72232,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ Returns None if the point is on or behind the W=0 hemisphere.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\homogen.rs","byte_start":72237,"byte_end":72302,"line_start":121,"line_end":121,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\homogen.rs","byte_start":72307,"byte_end":72316,"line_start":122,"line_end":122,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":863},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\homogen.rs","byte_start":72664,"byte_end":72674,"line_start":135,"line_end":135,"column_start":12,"column_end":22},"name":"to_point3d","qualname":"<HomogeneousVector<T, U>>::to_point3d","value":"pub fn to_point3d(Self) -> Option<Point3D<T, U>>","parent":null,"children":[],"decl_id":null,"docs":" Convert into Cartesian 3D point.","sig":null,"attributes":[{"value":"/ Convert into Cartesian 3D point.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\homogen.rs","byte_start":72524,"byte_end":72560,"line_start":131,"line_end":131,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\homogen.rs","byte_start":72565,"byte_end":72568,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ Returns None if the point is on or behind the W=0 hemisphere.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\homogen.rs","byte_start":72573,"byte_end":72638,"line_start":133,"line_end":133,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\homogen.rs","byte_start":72643,"byte_end":72652,"line_start":134,"line_end":134,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":959},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":76409,"byte_end":76415,"line_start":42,"line_end":42,"column_start":12,"column_end":18},"name":"Length","qualname":"::length::Length","value":"","parent":null,"children":[],"decl_id":null,"docs":" A one-dimensional distance, with value represented by `T` and unit of measurement `Unit`.","sig":null,"attributes":[{"value":"/ A one-dimensional distance, with value represented by `T` and unit of measurement `Unit`.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":75721,"byte_end":75814,"line_start":28,"line_end":28,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":75815,"byte_end":75818,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ `T` can be any numeric type, for example a primitive type like `u64` or `f32`.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":75819,"byte_end":75901,"line_start":30,"line_end":30,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":75902,"byte_end":75905,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ `Unit` is not used in the representation of a `Length` value. It is used only at compile time","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":75906,"byte_end":76003,"line_start":32,"line_end":32,"column_start":1,"column_end":98}},{"value":"/ to ensure that a `Length` stored with one unit is converted explicitly before being used in an","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":76004,"byte_end":76102,"line_start":33,"line_end":33,"column_start":1,"column_end":99}},{"value":"/ expression that requires a different unit.  It may be a type without values, such as an empty","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":76103,"byte_end":76200,"line_start":34,"line_end":34,"column_start":1,"column_end":98}},{"value":"/ enum.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":76201,"byte_end":76210,"line_start":35,"line_end":35,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":76211,"byte_end":76214,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ You can multiply a `Length` by a `scale::Scale` to convert it from one unit to","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":76215,"byte_end":76297,"line_start":37,"line_end":37,"column_start":1,"column_end":83}},{"value":"/ another. See the [`Scale`] docs for an example.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":76298,"byte_end":76349,"line_start":38,"line_end":38,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":76350,"byte_end":76353,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ [`Scale`]: struct.Scale.html","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":76354,"byte_end":76386,"line_start":40,"line_end":40,"column_start":1,"column_end":33}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":76387,"byte_end":76397,"line_start":41,"line_end":41,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":963},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":76425,"byte_end":76430,"line_start":42,"line_end":42,"column_start":28,"column_end":33},"name":"0","qualname":"::length::Length::0","value":"T","parent":{"krate":0,"index":959},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":964},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":76447,"byte_end":76468,"line_start":42,"line_end":42,"column_start":50,"column_end":71},"name":"1","qualname":"::length::Length::1","value":"core::marker::PhantomData<Unit>","parent":{"krate":0,"index":959},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":975},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":77294,"byte_end":77297,"line_start":81,"line_end":81,"column_start":18,"column_end":21},"name":"new","qualname":"<Length<T, U>>::new","value":"pub const fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Associate a value with a unit of measure.\n","sig":null,"attributes":[{"value":"/ Associate a value with a unit of measure.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":77217,"byte_end":77262,"line_start":79,"line_end":79,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":77267,"byte_end":77276,"line_start":80,"line_end":80,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":979},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":77452,"byte_end":77455,"line_start":88,"line_end":88,"column_start":12,"column_end":15},"name":"get","qualname":"<Length<T, U>>::get","value":"pub fn get(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Unpack the underlying value from the wrapper.\n","sig":null,"attributes":[{"value":"/ Unpack the underlying value from the wrapper.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":77391,"byte_end":77440,"line_start":87,"line_end":87,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":980},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":77538,"byte_end":77547,"line_start":94,"line_end":94,"column_start":12,"column_end":21},"name":"cast_unit","qualname":"<Length<T, U>>::cast_unit","value":"pub fn cast_unit<V>(Self) -> Length<T, V>","parent":null,"children":[],"decl_id":null,"docs":" Cast the unit\n","sig":null,"attributes":[{"value":"/ Cast the unit","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":77495,"byte_end":77512,"line_start":92,"line_end":92,"column_start":5,"column_end":22}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":77517,"byte_end":77526,"line_start":93,"line_end":93,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":982},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":78191,"byte_end":78195,"line_start":115,"line_end":115,"column_start":12,"column_end":16},"name":"lerp","qualname":"<Length<T, U>>::lerp","value":"pub fn lerp(Self, Self, T) -> Self where T: One + Sub<Output = T> + Mul<Output\n= T> + Add<Output = T>","parent":null,"children":[],"decl_id":null,"docs":" Linearly interpolate between this length and another length.","sig":null,"attributes":[{"value":"/ Linearly interpolate between this length and another length.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":77614,"byte_end":77678,"line_start":98,"line_end":98,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":77683,"byte_end":77686,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":77691,"byte_end":77704,"line_start":100,"line_end":100,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":77709,"byte_end":77712,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":77717,"byte_end":77728,"line_start":102,"line_end":102,"column_start":5,"column_end":16}},{"value":"/ use euclid::default::Length;","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":77733,"byte_end":77765,"line_start":103,"line_end":103,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":77770,"byte_end":77773,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ let from = Length::new(0.0);","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":77778,"byte_end":77810,"line_start":105,"line_end":105,"column_start":5,"column_end":37}},{"value":"/ let to = Length::new(8.0);","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":77815,"byte_end":77845,"line_start":106,"line_end":106,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":77850,"byte_end":77853,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(from.lerp(to, -1.0), Length::new(-8.0));","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":77858,"byte_end":77913,"line_start":108,"line_end":108,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(from.lerp(to,  0.0), Length::new( 0.0));","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":77918,"byte_end":77973,"line_start":109,"line_end":109,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(from.lerp(to,  0.5), Length::new( 4.0));","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":77978,"byte_end":78033,"line_start":110,"line_end":110,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(from.lerp(to,  1.0), Length::new( 8.0));","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":78038,"byte_end":78093,"line_start":111,"line_end":111,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(from.lerp(to,  2.0), Length::new(16.0));","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":78098,"byte_end":78153,"line_start":112,"line_end":112,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":78158,"byte_end":78165,"line_start":113,"line_end":113,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":78170,"byte_end":78179,"line_start":114,"line_end":114,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":986},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":78551,"byte_end":78554,"line_start":127,"line_end":127,"column_start":12,"column_end":15},"name":"min","qualname":"<Length<T, U>>::min","value":"pub fn min(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns minimum between this length and another length.\n","sig":null,"attributes":[{"value":"/ Returns minimum between this length and another length.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":78466,"byte_end":78525,"line_start":125,"line_end":125,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":78530,"byte_end":78539,"line_start":126,"line_end":126,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":987},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":78705,"byte_end":78708,"line_start":133,"line_end":133,"column_start":12,"column_end":15},"name":"max","qualname":"<Length<T, U>>::max","value":"pub fn max(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns maximum between this length and another length.\n","sig":null,"attributes":[{"value":"/ Returns maximum between this length and another length.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":78620,"byte_end":78679,"line_start":131,"line_end":131,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":78684,"byte_end":78693,"line_start":132,"line_end":132,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":991},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":78919,"byte_end":78923,"line_start":141,"line_end":141,"column_start":12,"column_end":16},"name":"cast","qualname":"<Length<T, U>>::cast","value":"pub fn cast<NewT: NumCast>(Self) -> Length<NewT, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast from one numeric representation to another, preserving the units.\n","sig":null,"attributes":[{"value":"/ Cast from one numeric representation to another, preserving the units.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":78819,"byte_end":78893,"line_start":139,"line_end":139,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":78898,"byte_end":78907,"line_start":140,"line_end":140,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":993},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":79105,"byte_end":79113,"line_start":146,"line_end":146,"column_start":12,"column_end":20},"name":"try_cast","qualname":"<Length<T, U>>::try_cast","value":"pub fn try_cast<NewT: NumCast>(Self) -> Option<Length<NewT, U>>","parent":null,"children":[],"decl_id":null,"docs":" Fallible cast from one numeric representation to another, preserving the units.\n","sig":null,"attributes":[{"value":"/ Fallible cast from one numeric representation to another, preserving the units.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":79010,"byte_end":79093,"line_start":145,"line_end":145,"column_start":5,"column_end":88}}]},{"kind":"Mod","id":{"krate":0,"index":1112},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\num.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"num","qualname":"::num","value":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\num.rs","parent":null,"children":[{"krate":0,"index":1113},{"krate":0,"index":1116},{"krate":0,"index":1118},{"krate":0,"index":1121},{"krate":0,"index":1123},{"krate":0,"index":1126},{"krate":0,"index":1128},{"krate":0,"index":1130},{"krate":0,"index":4557},{"krate":0,"index":4559},{"krate":0,"index":4561},{"krate":0,"index":4563},{"krate":0,"index":4565},{"krate":0,"index":4567},{"krate":0,"index":4569},{"krate":0,"index":4571},{"krate":0,"index":4573},{"krate":0,"index":4575},{"krate":0,"index":4577},{"krate":0,"index":4579},{"krate":0,"index":4581},{"krate":0,"index":4583},{"krate":0,"index":4585},{"krate":0,"index":4587},{"krate":0,"index":4589},{"krate":0,"index":4591},{"krate":0,"index":4593},{"krate":0,"index":4595},{"krate":0,"index":4597},{"krate":0,"index":4599},{"krate":0,"index":4601},{"krate":0,"index":4603},{"krate":0,"index":4605},{"krate":0,"index":4607},{"krate":0,"index":4609},{"krate":0,"index":4611},{"krate":0,"index":4613},{"krate":0,"index":4615}],"decl_id":null,"docs":" A one-dimensional length, tagged with its units.\n","sig":null,"attributes":[{"value":"/ A one-dimensional length, tagged with its units.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\num.rs","byte_start":91118,"byte_end":91170,"line_start":9,"line_end":9,"column_start":1,"column_end":53}}]},{"kind":"Trait","id":{"krate":0,"index":1116},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\num.rs","byte_start":92299,"byte_end":92303,"line_start":28,"line_end":28,"column_start":11,"column_end":15},"name":"Zero","qualname":"::num::Zero","value":"Zero","parent":null,"children":[{"krate":0,"index":1117}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1117},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\num.rs","byte_start":92313,"byte_end":92317,"line_start":29,"line_end":29,"column_start":8,"column_end":12},"name":"zero","qualname":"::num::Zero::zero","value":"pub fn zero() -> Self","parent":{"krate":0,"index":1116},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1121},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\num.rs","byte_start":92444,"byte_end":92447,"line_start":38,"line_end":38,"column_start":11,"column_end":14},"name":"One","qualname":"::num::One","value":"One","parent":null,"children":[{"krate":0,"index":1122}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1122},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\num.rs","byte_start":92457,"byte_end":92460,"line_start":39,"line_end":39,"column_start":8,"column_end":11},"name":"one","qualname":"::num::One::one","value":"pub fn one() -> Self","parent":{"krate":0,"index":1121},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1126},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\num.rs","byte_start":92643,"byte_end":92648,"line_start":49,"line_end":49,"column_start":11,"column_end":16},"name":"Round","qualname":"::num::Round","value":"Round: Copy","parent":null,"children":[{"krate":0,"index":1127}],"decl_id":null,"docs":" Defines the nearest integer value to the original value.\n","sig":null,"attributes":[{"value":"/ Defines the nearest integer value to the original value.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\num.rs","byte_start":92572,"byte_end":92632,"line_start":48,"line_end":48,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1127},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\num.rs","byte_start":92813,"byte_end":92818,"line_start":54,"line_end":54,"column_start":8,"column_end":13},"name":"round","qualname":"::num::Round::round","value":"pub fn round(Self) -> Self","parent":{"krate":0,"index":1126},"children":[],"decl_id":null,"docs":" Rounds to the nearest integer value.","sig":null,"attributes":[{"value":"/ Rounds to the nearest integer value.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\num.rs","byte_start":92661,"byte_end":92701,"line_start":50,"line_end":50,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\num.rs","byte_start":92706,"byte_end":92709,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ This behavior is preserved for negative values (unlike the basic cast).","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\num.rs","byte_start":92714,"byte_end":92789,"line_start":52,"line_end":52,"column_start":5,"column_end":80}},{"value":"must_use","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\num.rs","byte_start":92794,"byte_end":92805,"line_start":53,"line_end":53,"column_start":5,"column_end":16}}]},{"kind":"Trait","id":{"krate":0,"index":1128},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\num.rs","byte_start":92918,"byte_end":92923,"line_start":57,"line_end":57,"column_start":11,"column_end":16},"name":"Floor","qualname":"::num::Floor","value":"Floor: Copy","parent":null,"children":[{"krate":0,"index":1129}],"decl_id":null,"docs":" Defines the biggest integer equal or lower than the original value.\n","sig":null,"attributes":[{"value":"/ Defines the biggest integer equal or lower than the original value.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\num.rs","byte_start":92836,"byte_end":92907,"line_start":56,"line_end":56,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1129},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\num.rs","byte_start":93121,"byte_end":93126,"line_start":62,"line_end":62,"column_start":8,"column_end":13},"name":"floor","qualname":"::num::Floor::floor","value":"pub fn floor(Self) -> Self","parent":{"krate":0,"index":1128},"children":[],"decl_id":null,"docs":" Rounds to the biggest integer equal or lower than the original value.","sig":null,"attributes":[{"value":"/ Rounds to the biggest integer equal or lower than the original value.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\num.rs","byte_start":92936,"byte_end":93009,"line_start":58,"line_end":58,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\num.rs","byte_start":93014,"byte_end":93017,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ This behavior is preserved for negative values (unlike the basic cast).","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\num.rs","byte_start":93022,"byte_end":93097,"line_start":60,"line_end":60,"column_start":5,"column_end":80}},{"value":"must_use","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\num.rs","byte_start":93102,"byte_end":93113,"line_start":61,"line_end":61,"column_start":5,"column_end":16}}]},{"kind":"Trait","id":{"krate":0,"index":1130},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\num.rs","byte_start":93229,"byte_end":93233,"line_start":65,"line_end":65,"column_start":11,"column_end":15},"name":"Ceil","qualname":"::num::Ceil","value":"Ceil: Copy","parent":null,"children":[{"krate":0,"index":1131}],"decl_id":null,"docs":" Defines the smallest integer equal or greater than the original value.\n","sig":null,"attributes":[{"value":"/ Defines the smallest integer equal or greater than the original value.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\num.rs","byte_start":93144,"byte_end":93218,"line_start":64,"line_end":64,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1131},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\num.rs","byte_start":93434,"byte_end":93438,"line_start":70,"line_end":70,"column_start":8,"column_end":12},"name":"ceil","qualname":"::num::Ceil::ceil","value":"pub fn ceil(Self) -> Self","parent":{"krate":0,"index":1130},"children":[],"decl_id":null,"docs":" Rounds to the smallest integer equal or greater than the original value.","sig":null,"attributes":[{"value":"/ Rounds to the smallest integer equal or greater than the original value.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\num.rs","byte_start":93246,"byte_end":93322,"line_start":66,"line_end":66,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\num.rs","byte_start":93327,"byte_end":93330,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ This behavior is preserved for negative values (unlike the basic cast).","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\num.rs","byte_start":93335,"byte_end":93410,"line_start":68,"line_end":68,"column_start":5,"column_end":80}},{"value":"must_use","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\num.rs","byte_start":93415,"byte_end":93426,"line_start":69,"line_end":69,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":1226},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":95600,"byte_end":95607,"line_start":31,"line_end":31,"column_start":12,"column_end":19},"name":"Point2D","qualname":"::point::Point2D","value":"Point2D { x, y, _unit }","parent":null,"children":[{"krate":0,"index":1229},{"krate":0,"index":1230},{"krate":0,"index":1231}],"decl_id":null,"docs":" A 2d Point tagged with a unit.\n","sig":null,"attributes":[{"value":"/ A 2d Point tagged with a unit.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":95543,"byte_end":95577,"line_start":29,"line_end":29,"column_start":1,"column_end":35}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":95578,"byte_end":95588,"line_start":30,"line_end":30,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":1229},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":95624,"byte_end":95625,"line_start":32,"line_end":32,"column_start":9,"column_end":10},"name":"x","qualname":"::point::Point2D::x","value":"T","parent":{"krate":0,"index":1226},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1230},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":95638,"byte_end":95639,"line_start":33,"line_end":33,"column_start":9,"column_end":10},"name":"y","qualname":"::point::Point2D::y","value":"T","parent":{"krate":0,"index":1226},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1231},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":95671,"byte_end":95676,"line_start":35,"line_end":35,"column_start":9,"column_end":14},"name":"_unit","qualname":"::point::Point2D::_unit","value":"core::marker::PhantomData<U>","parent":{"krate":0,"index":1226},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1262},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":97864,"byte_end":97870,"line_start":134,"line_end":134,"column_start":12,"column_end":18},"name":"origin","qualname":"<Point2D<T, U>>::origin","value":"pub fn origin() -> Self where T: Zero","parent":null,"children":[],"decl_id":null,"docs":" Constructor, setting all components to zero.\n","sig":null,"attributes":[{"value":"/ Constructor, setting all components to zero.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":97790,"byte_end":97838,"line_start":132,"line_end":132,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":97843,"byte_end":97852,"line_start":133,"line_end":133,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1263},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":98039,"byte_end":98043,"line_start":143,"line_end":143,"column_start":12,"column_end":16},"name":"zero","qualname":"<Point2D<T, U>>::zero","value":"pub fn zero() -> Self where T: Zero","parent":null,"children":[],"decl_id":null,"docs":" The same as [`origin()`](#method.origin).\n","sig":null,"attributes":[{"value":"/ The same as [`origin()`](#method.origin).","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":97968,"byte_end":98013,"line_start":141,"line_end":141,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":98018,"byte_end":98027,"line_start":142,"line_end":142,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1264},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":98199,"byte_end":98202,"line_start":152,"line_end":152,"column_start":18,"column_end":21},"name":"new","qualname":"<Point2D<T, U>>::new","value":"pub const fn new(T, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructor taking scalar values directly.\n","sig":null,"attributes":[{"value":"/ Constructor taking scalar values directly.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":98121,"byte_end":98167,"line_start":150,"line_end":150,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":98172,"byte_end":98181,"line_start":151,"line_end":151,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1265},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":98417,"byte_end":98429,"line_start":162,"line_end":162,"column_start":12,"column_end":24},"name":"from_lengths","qualname":"<Point2D<T, U>>::from_lengths","value":"pub fn from_lengths(Length<T, U>, Length<T, U>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructor taking properly Lengths instead of scalar values.\n","sig":null,"attributes":[{"value":"/ Constructor taking properly Lengths instead of scalar values.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":98326,"byte_end":98391,"line_start":160,"line_end":160,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":98396,"byte_end":98405,"line_start":161,"line_end":161,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1266},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":98593,"byte_end":98598,"line_start":168,"line_end":168,"column_start":12,"column_end":17},"name":"splat","qualname":"<Point2D<T, U>>::splat","value":"pub fn splat(T) -> Self where T: Clone","parent":null,"children":[],"decl_id":null,"docs":" Constructor setting all components to the same value.\n","sig":null,"attributes":[{"value":"/ Constructor setting all components to the same value.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":98510,"byte_end":98567,"line_start":166,"line_end":166,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":98572,"byte_end":98581,"line_start":167,"line_end":167,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1267},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":98824,"byte_end":98836,"line_start":181,"line_end":181,"column_start":12,"column_end":24},"name":"from_untyped","qualname":"<Point2D<T, U>>::from_untyped","value":"pub fn from_untyped(Point2D<T, UnknownUnit>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Tag a unitless value with units.\n","sig":null,"attributes":[{"value":"/ Tag a unitless value with units.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":98762,"byte_end":98798,"line_start":179,"line_end":179,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":98803,"byte_end":98812,"line_start":180,"line_end":180,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1271},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":99037,"byte_end":99043,"line_start":189,"line_end":189,"column_start":12,"column_end":18},"name":"extend","qualname":"<Point2D<T, U>>::extend","value":"pub fn extend(Self, T) -> Point3D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Create a 3d point from this one, using the specified z value.\n","sig":null,"attributes":[{"value":"/ Create a 3d point from this one, using the specified z value.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":98946,"byte_end":99011,"line_start":187,"line_end":187,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":99016,"byte_end":99025,"line_start":188,"line_end":188,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1272},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":99250,"byte_end":99259,"line_start":197,"line_end":197,"column_start":12,"column_end":21},"name":"to_vector","qualname":"<Point2D<T, U>>::to_vector","value":"pub fn to_vector(Self) -> Vector2D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast this point into a vector.","sig":null,"attributes":[{"value":"/ Cast this point into a vector.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":99120,"byte_end":99154,"line_start":193,"line_end":193,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":99159,"byte_end":99162,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ Equivalent to subtracting the origin from this point.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":99167,"byte_end":99224,"line_start":195,"line_end":195,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":99229,"byte_end":99238,"line_start":196,"line_end":196,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1273},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":99683,"byte_end":99685,"line_start":218,"line_end":218,"column_start":12,"column_end":14},"name":"yx","qualname":"<Point2D<T, U>>::yx","value":"pub fn yx(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Swap x and y.","sig":null,"attributes":[{"value":"/ Swap x and y.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":99404,"byte_end":99421,"line_start":205,"line_end":205,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":99426,"byte_end":99429,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":99434,"byte_end":99447,"line_start":207,"line_end":207,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":99452,"byte_end":99455,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":99460,"byte_end":99471,"line_start":209,"line_end":209,"column_start":5,"column_end":16}},{"value":"/ # use euclid::{Point2D, point2};","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":99476,"byte_end":99512,"line_start":210,"line_end":210,"column_start":5,"column_end":41}},{"value":"/ enum Mm {}","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":99517,"byte_end":99531,"line_start":211,"line_end":211,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":99536,"byte_end":99539,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ let point: Point2D<_, Mm> = point2(1, -8);","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":99544,"byte_end":99590,"line_start":213,"line_end":213,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":99595,"byte_end":99598,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(point.yx(), point2(-8, 1));","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":99603,"byte_end":99645,"line_start":215,"line_end":215,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":99650,"byte_end":99657,"line_start":216,"line_end":216,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":99662,"byte_end":99671,"line_start":217,"line_end":217,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1274},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":100115,"byte_end":100125,"line_start":236,"line_end":236,"column_start":12,"column_end":22},"name":"to_untyped","qualname":"<Point2D<T, U>>::to_untyped","value":"pub fn to_untyped(Self) -> Point2D<T, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":" Drop the units, preserving only the numeric value.","sig":null,"attributes":[{"value":"/ Drop the units, preserving only the numeric value.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":99744,"byte_end":99798,"line_start":222,"line_end":222,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":99803,"byte_end":99806,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":99811,"byte_end":99824,"line_start":224,"line_end":224,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":99829,"byte_end":99832,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":99837,"byte_end":99848,"line_start":226,"line_end":226,"column_start":5,"column_end":16}},{"value":"/ # use euclid::{Point2D, point2};","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":99853,"byte_end":99889,"line_start":227,"line_end":227,"column_start":5,"column_end":41}},{"value":"/ enum Mm {}","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":99894,"byte_end":99908,"line_start":228,"line_end":228,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":99913,"byte_end":99916,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ let point: Point2D<_, Mm> = point2(1, -8);","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":99921,"byte_end":99967,"line_start":230,"line_end":230,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":99972,"byte_end":99975,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(point.x, point.to_untyped().x);","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":99980,"byte_end":100026,"line_start":232,"line_end":232,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(point.y, point.to_untyped().y);","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":100031,"byte_end":100077,"line_start":233,"line_end":233,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":100082,"byte_end":100089,"line_start":234,"line_end":234,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":100094,"byte_end":100103,"line_start":235,"line_end":235,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1275},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":100597,"byte_end":100606,"line_start":255,"line_end":255,"column_start":12,"column_end":21},"name":"cast_unit","qualname":"<Point2D<T, U>>::cast_unit","value":"pub fn cast_unit<V>(Self) -> Point2D<T, V>","parent":null,"children":[],"decl_id":null,"docs":" Cast the unit, preserving the numeric value.","sig":null,"attributes":[{"value":"/ Cast the unit, preserving the numeric value.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":100203,"byte_end":100251,"line_start":240,"line_end":240,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":100256,"byte_end":100259,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":100264,"byte_end":100277,"line_start":242,"line_end":242,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":100282,"byte_end":100285,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":100290,"byte_end":100301,"line_start":244,"line_end":244,"column_start":5,"column_end":16}},{"value":"/ # use euclid::{Point2D, point2};","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":100306,"byte_end":100342,"line_start":245,"line_end":245,"column_start":5,"column_end":41}},{"value":"/ enum Mm {}","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":100347,"byte_end":100361,"line_start":246,"line_end":246,"column_start":5,"column_end":19}},{"value":"/ enum Cm {}","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":100366,"byte_end":100380,"line_start":247,"line_end":247,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":100385,"byte_end":100388,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ let point: Point2D<_, Mm> = point2(1, -8);","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":100393,"byte_end":100439,"line_start":249,"line_end":249,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":100444,"byte_end":100447,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(point.x, point.cast_unit::<Cm>().x);","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":100452,"byte_end":100503,"line_start":251,"line_end":251,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(point.y, point.cast_unit::<Cm>().y);","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":100508,"byte_end":100559,"line_start":252,"line_end":252,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":100564,"byte_end":100571,"line_start":253,"line_end":253,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":100576,"byte_end":100585,"line_start":254,"line_end":254,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1277},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":100975,"byte_end":100983,"line_start":272,"line_end":272,"column_start":12,"column_end":20},"name":"to_array","qualname":"<Point2D<T, U>>::to_array","value":"pub fn to_array(Self) -> [T; ]","parent":null,"children":[],"decl_id":null,"docs":" Cast into an array with x and y.","sig":null,"attributes":[{"value":"/ Cast into an array with x and y.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":100677,"byte_end":100713,"line_start":259,"line_end":259,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":100718,"byte_end":100721,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":100726,"byte_end":100739,"line_start":261,"line_end":261,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":100744,"byte_end":100747,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":100752,"byte_end":100763,"line_start":263,"line_end":263,"column_start":5,"column_end":16}},{"value":"/ # use euclid::{Point2D, point2};","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":100768,"byte_end":100804,"line_start":264,"line_end":264,"column_start":5,"column_end":41}},{"value":"/ enum Mm {}","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":100809,"byte_end":100823,"line_start":265,"line_end":265,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":100828,"byte_end":100831,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ let point: Point2D<_, Mm> = point2(1, -8);","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":100836,"byte_end":100882,"line_start":267,"line_end":267,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":100887,"byte_end":100890,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(point.to_array(), [1, -8]);","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":100895,"byte_end":100937,"line_start":269,"line_end":269,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":100942,"byte_end":100949,"line_start":270,"line_end":270,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":100954,"byte_end":100963,"line_start":271,"line_end":271,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1279},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":101335,"byte_end":101343,"line_start":289,"line_end":289,"column_start":12,"column_end":20},"name":"to_tuple","qualname":"<Point2D<T, U>>::to_tuple","value":"pub fn to_tuple(Self) -> (T, T)","parent":null,"children":[],"decl_id":null,"docs":" Cast into a tuple with x and y.","sig":null,"attributes":[{"value":"/ Cast into a tuple with x and y.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":101038,"byte_end":101073,"line_start":276,"line_end":276,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":101078,"byte_end":101081,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":101086,"byte_end":101099,"line_start":278,"line_end":278,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":101104,"byte_end":101107,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":101112,"byte_end":101123,"line_start":280,"line_end":280,"column_start":5,"column_end":16}},{"value":"/ # use euclid::{Point2D, point2};","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":101128,"byte_end":101164,"line_start":281,"line_end":281,"column_start":5,"column_end":41}},{"value":"/ enum Mm {}","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":101169,"byte_end":101183,"line_start":282,"line_end":282,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":101188,"byte_end":101191,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ let point: Point2D<_, Mm> = point2(1, -8);","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":101196,"byte_end":101242,"line_start":284,"line_end":284,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":101247,"byte_end":101250,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(point.to_tuple(), (1, -8));","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":101255,"byte_end":101297,"line_start":286,"line_end":286,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":101302,"byte_end":101309,"line_start":287,"line_end":287,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":101314,"byte_end":101323,"line_start":288,"line_end":288,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1280},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":101485,"byte_end":101490,"line_start":295,"line_end":295,"column_start":12,"column_end":17},"name":"to_3d","qualname":"<Point2D<T, U>>::to_3d","value":"pub fn to_3d(Self) -> Point3D<T, U> where T: Zero","parent":null,"children":[],"decl_id":null,"docs":" Convert into a 3d point with z-coordinate equals to zero.\n","sig":null,"attributes":[{"value":"/ Convert into a 3d point with z-coordinate equals to zero.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":101398,"byte_end":101459,"line_start":293,"line_end":293,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":101464,"byte_end":101473,"line_start":294,"line_end":294,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1281},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":101965,"byte_end":101970,"line_start":314,"line_end":314,"column_start":12,"column_end":17},"name":"round","qualname":"<Point2D<T, U>>::round","value":"pub fn round(Self) -> Self where T: Round","parent":null,"children":[],"decl_id":null,"docs":" Rounds each component to the nearest integer value.","sig":null,"attributes":[{"value":"/ Rounds each component to the nearest integer value.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":101603,"byte_end":101658,"line_start":302,"line_end":302,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":101663,"byte_end":101666,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ This behavior is preserved for negative values (unlike the basic cast).","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":101671,"byte_end":101746,"line_start":304,"line_end":304,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":101751,"byte_end":101754,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":101759,"byte_end":101770,"line_start":306,"line_end":306,"column_start":5,"column_end":16}},{"value":"/ # use euclid::point2;","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":101775,"byte_end":101800,"line_start":307,"line_end":307,"column_start":5,"column_end":30}},{"value":"/ enum Mm {}","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":101805,"byte_end":101819,"line_start":308,"line_end":308,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":101824,"byte_end":101827,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(point2::<_, Mm>(-0.1, -0.8).round(), point2::<_, Mm>(0.0, -1.0))","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":101832,"byte_end":101911,"line_start":310,"line_end":310,"column_start":5,"column_end":84}},{"value":"/ ```","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":101916,"byte_end":101923,"line_start":311,"line_end":311,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":101928,"byte_end":101937,"line_start":312,"line_end":312,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":101942,"byte_end":101953,"line_start":313,"line_end":313,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1282},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":102473,"byte_end":102477,"line_start":333,"line_end":333,"column_start":12,"column_end":16},"name":"ceil","qualname":"<Point2D<T, U>>::ceil","value":"pub fn ceil(Self) -> Self where T: Ceil","parent":null,"children":[],"decl_id":null,"docs":" Rounds each component to the smallest integer equal or greater than the original value.","sig":null,"attributes":[{"value":"/ Rounds each component to the smallest integer equal or greater than the original value.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":102077,"byte_end":102168,"line_start":321,"line_end":321,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":102173,"byte_end":102176,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ This behavior is preserved for negative values (unlike the basic cast).","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":102181,"byte_end":102256,"line_start":323,"line_end":323,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":102261,"byte_end":102264,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":102269,"byte_end":102280,"line_start":325,"line_end":325,"column_start":5,"column_end":16}},{"value":"/ # use euclid::point2;","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":102285,"byte_end":102310,"line_start":326,"line_end":326,"column_start":5,"column_end":30}},{"value":"/ enum Mm {}","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":102315,"byte_end":102329,"line_start":327,"line_end":327,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":102334,"byte_end":102337,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(point2::<_, Mm>(-0.1, -0.8).ceil(), point2::<_, Mm>(0.0, 0.0))","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":102342,"byte_end":102419,"line_start":329,"line_end":329,"column_start":5,"column_end":82}},{"value":"/ ```","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":102424,"byte_end":102431,"line_start":330,"line_end":330,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":102436,"byte_end":102445,"line_start":331,"line_end":331,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":102450,"byte_end":102461,"line_start":332,"line_end":332,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1283},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":102977,"byte_end":102982,"line_start":352,"line_end":352,"column_start":12,"column_end":17},"name":"floor","qualname":"<Point2D<T, U>>::floor","value":"pub fn floor(Self) -> Self where T: Floor","parent":null,"children":[],"decl_id":null,"docs":" Rounds each component to the biggest integer equal or lower than the original value.","sig":null,"attributes":[{"value":"/ Rounds each component to the biggest integer equal or lower than the original value.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":102581,"byte_end":102669,"line_start":340,"line_end":340,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":102674,"byte_end":102677,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ This behavior is preserved for negative values (unlike the basic cast).","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":102682,"byte_end":102757,"line_start":342,"line_end":342,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":102762,"byte_end":102765,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":102770,"byte_end":102781,"line_start":344,"line_end":344,"column_start":5,"column_end":16}},{"value":"/ # use euclid::point2;","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":102786,"byte_end":102811,"line_start":345,"line_end":345,"column_start":5,"column_end":30}},{"value":"/ enum Mm {}","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":102816,"byte_end":102830,"line_start":346,"line_end":346,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":102835,"byte_end":102838,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(point2::<_, Mm>(-0.1, -0.8).floor(), point2::<_, Mm>(-1.0, -1.0))","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":102843,"byte_end":102923,"line_start":348,"line_end":348,"column_start":5,"column_end":85}},{"value":"/ ```","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":102928,"byte_end":102935,"line_start":349,"line_end":349,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":102940,"byte_end":102949,"line_start":350,"line_end":350,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":102954,"byte_end":102965,"line_start":351,"line_end":351,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1284},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":103730,"byte_end":103734,"line_start":377,"line_end":377,"column_start":12,"column_end":16},"name":"lerp","qualname":"<Point2D<T, U>>::lerp","value":"pub fn lerp(Self, Self, T) -> Self where T: One + Sub<Output = T> + Mul<Output\n= T> + Add<Output = T>","parent":null,"children":[],"decl_id":null,"docs":" Linearly interpolate between this point and another point.","sig":null,"attributes":[{"value":"/ Linearly interpolate between this point and another point.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":103089,"byte_end":103151,"line_start":359,"line_end":359,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":103156,"byte_end":103159,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":103164,"byte_end":103177,"line_start":361,"line_end":361,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":103182,"byte_end":103185,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":103190,"byte_end":103201,"line_start":363,"line_end":363,"column_start":5,"column_end":16}},{"value":"/ use euclid::point2;","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":103206,"byte_end":103229,"line_start":364,"line_end":364,"column_start":5,"column_end":28}},{"value":"/ use euclid::default::Point2D;","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":103234,"byte_end":103267,"line_start":365,"line_end":365,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":103272,"byte_end":103275,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ let from: Point2D<_> = point2(0.0, 10.0);","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":103280,"byte_end":103325,"line_start":367,"line_end":367,"column_start":5,"column_end":50}},{"value":"/ let to:  Point2D<_> = point2(8.0, -4.0);","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":103330,"byte_end":103374,"line_start":368,"line_end":368,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":103379,"byte_end":103382,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(from.lerp(to, -1.0), point2(-8.0,  24.0));","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":103387,"byte_end":103444,"line_start":370,"line_end":370,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(from.lerp(to,  0.0), point2( 0.0,  10.0));","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":103449,"byte_end":103506,"line_start":371,"line_end":371,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(from.lerp(to,  0.5), point2( 4.0,   3.0));","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":103511,"byte_end":103568,"line_start":372,"line_end":372,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(from.lerp(to,  1.0), point2( 8.0,  -4.0));","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":103573,"byte_end":103630,"line_start":373,"line_end":373,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(from.lerp(to,  2.0), point2(16.0, -18.0));","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":103635,"byte_end":103692,"line_start":374,"line_end":374,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":103697,"byte_end":103704,"line_start":375,"line_end":375,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":103709,"byte_end":103718,"line_start":376,"line_end":376,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1288},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":104036,"byte_end":104039,"line_start":388,"line_end":388,"column_start":12,"column_end":15},"name":"min","qualname":"<Point2D<T, U>>::min","value":"pub fn min(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":104015,"byte_end":104024,"line_start":387,"line_end":387,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1289},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":104160,"byte_end":104163,"line_start":393,"line_end":393,"column_start":12,"column_end":15},"name":"max","qualname":"<Point2D<T, U>>::max","value":"pub fn max(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":104139,"byte_end":104148,"line_start":392,"line_end":392,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1290},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":104457,"byte_end":104462,"line_start":402,"line_end":402,"column_start":12,"column_end":17},"name":"clamp","qualname":"<Point2D<T, U>>::clamp","value":"pub fn clamp(Self, Self, Self) -> Self where T: Copy","parent":null,"children":[],"decl_id":null,"docs":" Returns the point each component of which clamped by corresponding\n components of `start` and `end`.","sig":null,"attributes":[{"value":"/ Returns the point each component of which clamped by corresponding","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":104263,"byte_end":104333,"line_start":397,"line_end":397,"column_start":5,"column_end":75}},{"value":"/ components of `start` and `end`.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":104338,"byte_end":104374,"line_start":398,"line_end":398,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":104379,"byte_end":104382,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ Shortcut for `self.max(start).min(end)`.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":104387,"byte_end":104431,"line_start":400,"line_end":400,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":104436,"byte_end":104445,"line_start":401,"line_end":401,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1294},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":105003,"byte_end":105007,"line_start":417,"line_end":417,"column_start":12,"column_end":16},"name":"cast","qualname":"<Point2D<T, U>>::cast","value":"pub fn cast<NewT: NumCast>(Self) -> Point2D<NewT, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast from one numeric representation to another, preserving the units.","sig":null,"attributes":[{"value":"/ Cast from one numeric representation to another, preserving the units.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":104623,"byte_end":104697,"line_start":411,"line_end":411,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":104702,"byte_end":104705,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point to integer coordinates, the decimals are truncated","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":104710,"byte_end":104797,"line_start":413,"line_end":413,"column_start":5,"column_end":92}},{"value":"/ as one would expect from a simple cast, but this behavior does not always make sense","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":104802,"byte_end":104890,"line_start":414,"line_end":414,"column_start":5,"column_end":93}},{"value":"/ geometrically. Consider using `round()`, `ceil()` or `floor()` before casting.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":104895,"byte_end":104977,"line_start":415,"line_end":415,"column_start":5,"column_end":87}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":104982,"byte_end":104991,"line_start":416,"line_end":416,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1296},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":105470,"byte_end":105478,"line_start":426,"line_end":426,"column_start":12,"column_end":20},"name":"try_cast","qualname":"<Point2D<T, U>>::try_cast","value":"pub fn try_cast<NewT: NumCast>(Self) -> Option<Point2D<NewT, U>>","parent":null,"children":[],"decl_id":null,"docs":" Fallible cast from one numeric representation to another, preserving the units.","sig":null,"attributes":[{"value":"/ Fallible cast from one numeric representation to another, preserving the units.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":105095,"byte_end":105178,"line_start":421,"line_end":421,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":105183,"byte_end":105186,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point to integer coordinates, the decimals are truncated","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":105191,"byte_end":105278,"line_start":423,"line_end":423,"column_start":5,"column_end":92}},{"value":"/ as one would expect from a simple cast, but this behavior does not always make sense","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":105283,"byte_end":105371,"line_start":424,"line_end":424,"column_start":5,"column_end":93}},{"value":"/ geometrically. Consider using `round()`, `ceil()` or `floor()` before casting.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":105376,"byte_end":105458,"line_start":425,"line_end":425,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":1298},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":105793,"byte_end":105799,"line_start":437,"line_end":437,"column_start":12,"column_end":18},"name":"to_f32","qualname":"<Point2D<T, U>>::to_f32","value":"pub fn to_f32(Self) -> Point2D<f32, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `f32` point.\n","sig":null,"attributes":[{"value":"/ Cast into an `f32` point.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":105738,"byte_end":105767,"line_start":435,"line_end":435,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":105772,"byte_end":105781,"line_start":436,"line_end":436,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1299},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":105913,"byte_end":105919,"line_start":443,"line_end":443,"column_start":12,"column_end":18},"name":"to_f64","qualname":"<Point2D<T, U>>::to_f64","value":"pub fn to_f64(Self) -> Point2D<f64, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `f64` point.\n","sig":null,"attributes":[{"value":"/ Cast into an `f64` point.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":105858,"byte_end":105887,"line_start":441,"line_end":441,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":105892,"byte_end":105901,"line_start":442,"line_end":442,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1300},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":106272,"byte_end":106280,"line_start":453,"line_end":453,"column_start":12,"column_end":20},"name":"to_usize","qualname":"<Point2D<T, U>>::to_usize","value":"pub fn to_usize(Self) -> Point2D<usize, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `usize` point, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `usize` point, truncating decimals if any.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":105978,"byte_end":106037,"line_start":447,"line_end":447,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":106042,"byte_end":106045,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point points, it is worth considering whether","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":106050,"byte_end":106126,"line_start":449,"line_end":449,"column_start":5,"column_end":81}},{"value":"/ to `round()`, `ceil()` or `floor()` before the cast in order to obtain","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":106131,"byte_end":106205,"line_start":450,"line_end":450,"column_start":5,"column_end":79}},{"value":"/ the desired conversion behavior.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":106210,"byte_end":106246,"line_start":451,"line_end":451,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":106251,"byte_end":106260,"line_start":452,"line_end":452,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1301},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":106633,"byte_end":106639,"line_start":463,"line_end":463,"column_start":12,"column_end":18},"name":"to_u32","qualname":"<Point2D<T, U>>::to_u32","value":"pub fn to_u32(Self) -> Point2D<u32, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `u32` point, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `u32` point, truncating decimals if any.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":106341,"byte_end":106398,"line_start":457,"line_end":457,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":106403,"byte_end":106406,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point points, it is worth considering whether","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":106411,"byte_end":106487,"line_start":459,"line_end":459,"column_start":5,"column_end":81}},{"value":"/ to `round()`, `ceil()` or `floor()` before the cast in order to obtain","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":106492,"byte_end":106566,"line_start":460,"line_end":460,"column_start":5,"column_end":79}},{"value":"/ the desired conversion behavior.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":106571,"byte_end":106607,"line_start":461,"line_end":461,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":106612,"byte_end":106621,"line_start":462,"line_end":462,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1302},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":106988,"byte_end":106994,"line_start":473,"line_end":473,"column_start":12,"column_end":18},"name":"to_i32","qualname":"<Point2D<T, U>>::to_i32","value":"pub fn to_i32(Self) -> Point2D<i32, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an i32 point, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an i32 point, truncating decimals if any.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":106698,"byte_end":106753,"line_start":467,"line_end":467,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":106758,"byte_end":106761,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point points, it is worth considering whether","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":106766,"byte_end":106842,"line_start":469,"line_end":469,"column_start":5,"column_end":81}},{"value":"/ to `round()`, `ceil()` or `floor()` before the cast in order to obtain","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":106847,"byte_end":106921,"line_start":470,"line_end":470,"column_start":5,"column_end":79}},{"value":"/ the desired conversion behavior.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":106926,"byte_end":106962,"line_start":471,"line_end":471,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":106967,"byte_end":106976,"line_start":472,"line_end":472,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1303},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":107343,"byte_end":107349,"line_start":483,"line_end":483,"column_start":12,"column_end":18},"name":"to_i64","qualname":"<Point2D<T, U>>::to_i64","value":"pub fn to_i64(Self) -> Point2D<i64, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an i64 point, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an i64 point, truncating decimals if any.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":107053,"byte_end":107108,"line_start":477,"line_end":477,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":107113,"byte_end":107116,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point points, it is worth considering whether","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":107121,"byte_end":107197,"line_start":479,"line_end":479,"column_start":5,"column_end":81}},{"value":"/ to `round()`, `ceil()` or `floor()` before the cast in order to obtain","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":107202,"byte_end":107276,"line_start":480,"line_end":480,"column_start":5,"column_end":79}},{"value":"/ the desired conversion behavior.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":107281,"byte_end":107317,"line_start":481,"line_end":481,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":107322,"byte_end":107331,"line_start":482,"line_end":482,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1307},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":107513,"byte_end":107522,"line_start":491,"line_end":491,"column_start":12,"column_end":21},"name":"is_finite","qualname":"<Point2D<T, U>>::is_finite","value":"pub fn is_finite(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if all members are finite.\n","sig":null,"attributes":[{"value":"/ Returns true if all members are finite.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":107444,"byte_end":107487,"line_start":489,"line_end":489,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":107492,"byte_end":107501,"line_start":490,"line_end":490,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1311},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":107676,"byte_end":107684,"line_start":498,"line_end":498,"column_start":12,"column_end":20},"name":"add_size","qualname":"<Point2D<T, U>>::add_size","value":"pub fn add_size(Self, &Size2D<T, U>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":107655,"byte_end":107664,"line_start":497,"line_end":497,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1315},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":107872,"byte_end":107883,"line_start":505,"line_end":505,"column_start":12,"column_end":23},"name":"distance_to","qualname":"<Point2D<T, U>>::distance_to","value":"pub fn distance_to(Self, Self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":107851,"byte_end":107860,"line_start":504,"line_end":504,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1441},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":113158,"byte_end":113165,"line_start":729,"line_end":729,"column_start":12,"column_end":19},"name":"Point3D","qualname":"::point::Point3D","value":"Point3D { x, y, z, _unit }","parent":null,"children":[{"krate":0,"index":1444},{"krate":0,"index":1445},{"krate":0,"index":1446},{"krate":0,"index":1447}],"decl_id":null,"docs":" A 3d Point tagged with a unit.\n","sig":null,"attributes":[{"value":"/ A 3d Point tagged with a unit.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":113101,"byte_end":113135,"line_start":727,"line_end":727,"column_start":1,"column_end":35}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":113136,"byte_end":113146,"line_start":728,"line_end":728,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":1444},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":113182,"byte_end":113183,"line_start":730,"line_end":730,"column_start":9,"column_end":10},"name":"x","qualname":"::point::Point3D::x","value":"T","parent":{"krate":0,"index":1441},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1445},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":113196,"byte_end":113197,"line_start":731,"line_end":731,"column_start":9,"column_end":10},"name":"y","qualname":"::point::Point3D::y","value":"T","parent":{"krate":0,"index":1441},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1446},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":113210,"byte_end":113211,"line_start":732,"line_end":732,"column_start":9,"column_end":10},"name":"z","qualname":"::point::Point3D::z","value":"T","parent":{"krate":0,"index":1441},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1447},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":113243,"byte_end":113248,"line_start":734,"line_end":734,"column_start":9,"column_end":14},"name":"_unit","qualname":"::point::Point3D::_unit","value":"core::marker::PhantomData<U>","parent":{"krate":0,"index":1441},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1478},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":115253,"byte_end":115259,"line_start":825,"line_end":825,"column_start":12,"column_end":18},"name":"origin","qualname":"<Point3D<T, U>>::origin","value":"pub fn origin() -> Self where T: Zero","parent":null,"children":[],"decl_id":null,"docs":" Constructor, setting all components to zero.\n","sig":null,"attributes":[{"value":"/ Constructor, setting all components to zero.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":115179,"byte_end":115227,"line_start":823,"line_end":823,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":115232,"byte_end":115241,"line_start":824,"line_end":824,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1479},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":115442,"byte_end":115446,"line_start":834,"line_end":834,"column_start":12,"column_end":16},"name":"zero","qualname":"<Point3D<T, U>>::zero","value":"pub fn zero() -> Self where T: Zero","parent":null,"children":[],"decl_id":null,"docs":" The same as [`origin()`](#method.origin).\n","sig":null,"attributes":[{"value":"/ The same as [`origin()`](#method.origin).","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":115371,"byte_end":115416,"line_start":832,"line_end":832,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":115421,"byte_end":115430,"line_start":833,"line_end":833,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1480},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":115602,"byte_end":115605,"line_start":843,"line_end":843,"column_start":18,"column_end":21},"name":"new","qualname":"<Point3D<T, U>>::new","value":"pub const fn new(T, T, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructor taking scalar values directly.\n","sig":null,"attributes":[{"value":"/ Constructor taking scalar values directly.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":115524,"byte_end":115570,"line_start":841,"line_end":841,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":115575,"byte_end":115584,"line_start":842,"line_end":842,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1481},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":115841,"byte_end":115853,"line_start":854,"line_end":854,"column_start":12,"column_end":24},"name":"from_lengths","qualname":"<Point3D<T, U>>::from_lengths","value":"pub fn from_lengths(Length<T, U>, Length<T, U>, Length<T, U>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructor taking properly Lengths instead of scalar values.\n","sig":null,"attributes":[{"value":"/ Constructor taking properly Lengths instead of scalar values.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":115750,"byte_end":115815,"line_start":852,"line_end":852,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":115820,"byte_end":115829,"line_start":853,"line_end":853,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1482},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":116039,"byte_end":116044,"line_start":860,"line_end":860,"column_start":12,"column_end":17},"name":"splat","qualname":"<Point3D<T, U>>::splat","value":"pub fn splat(T) -> Self where T: Clone","parent":null,"children":[],"decl_id":null,"docs":" Constructor setting all components to the same value.\n","sig":null,"attributes":[{"value":"/ Constructor setting all components to the same value.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":115956,"byte_end":116013,"line_start":858,"line_end":858,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":116018,"byte_end":116027,"line_start":859,"line_end":859,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1483},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":116296,"byte_end":116308,"line_start":874,"line_end":874,"column_start":12,"column_end":24},"name":"from_untyped","qualname":"<Point3D<T, U>>::from_untyped","value":"pub fn from_untyped(Point3D<T, UnknownUnit>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Tag a unitless value with units.\n","sig":null,"attributes":[{"value":"/ Tag a unitless value with units.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":116234,"byte_end":116270,"line_start":872,"line_end":872,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":116275,"byte_end":116284,"line_start":873,"line_end":873,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1487},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":116551,"byte_end":116560,"line_start":884,"line_end":884,"column_start":12,"column_end":21},"name":"to_vector","qualname":"<Point3D<T, U>>::to_vector","value":"pub fn to_vector(Self) -> Vector3D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast this point into a vector.","sig":null,"attributes":[{"value":"/ Cast this point into a vector.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":116423,"byte_end":116457,"line_start":880,"line_end":880,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":116462,"byte_end":116465,"line_start":881,"line_end":881,"column_start":5,"column_end":8}},{"value":"/ Equivalent to subtracting the origin to this point.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":116470,"byte_end":116525,"line_start":882,"line_end":882,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":116530,"byte_end":116539,"line_start":883,"line_end":883,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1488},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":116815,"byte_end":116817,"line_start":895,"line_end":895,"column_start":12,"column_end":14},"name":"xy","qualname":"<Point3D<T, U>>::xy","value":"pub fn xy(Self) -> Point2D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Returns a 2d point using this point's x and y coordinates\n","sig":null,"attributes":[{"value":"/ Returns a 2d point using this point's x and y coordinates","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":116728,"byte_end":116789,"line_start":893,"line_end":893,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":116794,"byte_end":116803,"line_start":894,"line_end":894,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1489},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":116972,"byte_end":116974,"line_start":901,"line_end":901,"column_start":12,"column_end":14},"name":"xz","qualname":"<Point3D<T, U>>::xz","value":"pub fn xz(Self) -> Point2D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Returns a 2d point using this point's x and z coordinates\n","sig":null,"attributes":[{"value":"/ Returns a 2d point using this point's x and z coordinates","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":116885,"byte_end":116946,"line_start":899,"line_end":899,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":116951,"byte_end":116960,"line_start":900,"line_end":900,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1490},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":117129,"byte_end":117131,"line_start":907,"line_end":907,"column_start":12,"column_end":14},"name":"yz","qualname":"<Point3D<T, U>>::yz","value":"pub fn yz(Self) -> Point2D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Returns a 2d point using this point's x and z coordinates\n","sig":null,"attributes":[{"value":"/ Returns a 2d point using this point's x and z coordinates","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":117042,"byte_end":117103,"line_start":905,"line_end":905,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":117108,"byte_end":117117,"line_start":906,"line_end":906,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1491},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":117506,"byte_end":117514,"line_start":924,"line_end":924,"column_start":12,"column_end":20},"name":"to_array","qualname":"<Point3D<T, U>>::to_array","value":"pub fn to_array(Self) -> [T; ]","parent":null,"children":[],"decl_id":null,"docs":" Cast into an array with x, y and z.","sig":null,"attributes":[{"value":"/ Cast into an array with x, y and z.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":117199,"byte_end":117238,"line_start":911,"line_end":911,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":117243,"byte_end":117246,"line_start":912,"line_end":912,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":117251,"byte_end":117264,"line_start":913,"line_end":913,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":117269,"byte_end":117272,"line_start":914,"line_end":914,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":117277,"byte_end":117288,"line_start":915,"line_end":915,"column_start":5,"column_end":16}},{"value":"/ # use euclid::{Point3D, point3};","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":117293,"byte_end":117329,"line_start":916,"line_end":916,"column_start":5,"column_end":41}},{"value":"/ enum Mm {}","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":117334,"byte_end":117348,"line_start":917,"line_end":917,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":117353,"byte_end":117356,"line_start":918,"line_end":918,"column_start":5,"column_end":8}},{"value":"/ let point: Point3D<_, Mm> = point3(1, -8, 0);","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":117361,"byte_end":117410,"line_start":919,"line_end":919,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":117415,"byte_end":117418,"line_start":920,"line_end":920,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(point.to_array(), [1, -8, 0]);","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":117423,"byte_end":117468,"line_start":921,"line_end":921,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":117473,"byte_end":117480,"line_start":922,"line_end":922,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":117485,"byte_end":117494,"line_start":923,"line_end":923,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1493},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":117598,"byte_end":117609,"line_start":929,"line_end":929,"column_start":12,"column_end":23},"name":"to_array_4d","qualname":"<Point3D<T, U>>::to_array_4d","value":"pub fn to_array_4d(Self) -> [T; ] where T: One","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":117577,"byte_end":117586,"line_start":928,"line_end":928,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1495},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":118020,"byte_end":118028,"line_start":949,"line_end":949,"column_start":12,"column_end":20},"name":"to_tuple","qualname":"<Point3D<T, U>>::to_tuple","value":"pub fn to_tuple(Self) -> (T, T, T)","parent":null,"children":[],"decl_id":null,"docs":" Cast into a tuple with x, y and z.","sig":null,"attributes":[{"value":"/ Cast into a tuple with x, y and z.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":117714,"byte_end":117752,"line_start":936,"line_end":936,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":117757,"byte_end":117760,"line_start":937,"line_end":937,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":117765,"byte_end":117778,"line_start":938,"line_end":938,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":117783,"byte_end":117786,"line_start":939,"line_end":939,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":117791,"byte_end":117802,"line_start":940,"line_end":940,"column_start":5,"column_end":16}},{"value":"/ # use euclid::{Point3D, point3};","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":117807,"byte_end":117843,"line_start":941,"line_end":941,"column_start":5,"column_end":41}},{"value":"/ enum Mm {}","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":117848,"byte_end":117862,"line_start":942,"line_end":942,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":117867,"byte_end":117870,"line_start":943,"line_end":943,"column_start":5,"column_end":8}},{"value":"/ let point: Point3D<_, Mm> = point3(1, -8, 0);","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":117875,"byte_end":117924,"line_start":944,"line_end":944,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":117929,"byte_end":117932,"line_start":945,"line_end":945,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(point.to_tuple(), (1, -8, 0));","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":117937,"byte_end":117982,"line_start":946,"line_end":946,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":117987,"byte_end":117994,"line_start":947,"line_end":947,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":117999,"byte_end":118008,"line_start":948,"line_end":948,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1496},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":118115,"byte_end":118126,"line_start":954,"line_end":954,"column_start":12,"column_end":23},"name":"to_tuple_4d","qualname":"<Point3D<T, U>>::to_tuple_4d","value":"pub fn to_tuple_4d(Self) -> (T, T, T, T) where T: One","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":118094,"byte_end":118103,"line_start":953,"line_end":953,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1497},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":118662,"byte_end":118672,"line_start":976,"line_end":976,"column_start":12,"column_end":22},"name":"to_untyped","qualname":"<Point3D<T, U>>::to_untyped","value":"pub fn to_untyped(Self) -> Point3D<T, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":" Drop the units, preserving only the numeric value.","sig":null,"attributes":[{"value":"/ Drop the units, preserving only the numeric value.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":118237,"byte_end":118291,"line_start":961,"line_end":961,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":118296,"byte_end":118299,"line_start":962,"line_end":962,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":118304,"byte_end":118317,"line_start":963,"line_end":963,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":118322,"byte_end":118325,"line_start":964,"line_end":964,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":118330,"byte_end":118341,"line_start":965,"line_end":965,"column_start":5,"column_end":16}},{"value":"/ # use euclid::{Point3D, point3};","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":118346,"byte_end":118382,"line_start":966,"line_end":966,"column_start":5,"column_end":41}},{"value":"/ enum Mm {}","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":118387,"byte_end":118401,"line_start":967,"line_end":967,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":118406,"byte_end":118409,"line_start":968,"line_end":968,"column_start":5,"column_end":8}},{"value":"/ let point: Point3D<_, Mm> = point3(1, -8, 0);","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":118414,"byte_end":118463,"line_start":969,"line_end":969,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":118468,"byte_end":118471,"line_start":970,"line_end":970,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(point.x, point.to_untyped().x);","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":118476,"byte_end":118522,"line_start":971,"line_end":971,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(point.y, point.to_untyped().y);","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":118527,"byte_end":118573,"line_start":972,"line_end":972,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(point.z, point.to_untyped().z);","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":118578,"byte_end":118624,"line_start":973,"line_end":973,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":118629,"byte_end":118636,"line_start":974,"line_end":974,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":118641,"byte_end":118650,"line_start":975,"line_end":975,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1498},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":119211,"byte_end":119220,"line_start":996,"line_end":996,"column_start":12,"column_end":21},"name":"cast_unit","qualname":"<Point3D<T, U>>::cast_unit","value":"pub fn cast_unit<V>(Self) -> Point3D<T, V>","parent":null,"children":[],"decl_id":null,"docs":" Cast the unit, preserving the numeric value.","sig":null,"attributes":[{"value":"/ Cast the unit, preserving the numeric value.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":118758,"byte_end":118806,"line_start":980,"line_end":980,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":118811,"byte_end":118814,"line_start":981,"line_end":981,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":118819,"byte_end":118832,"line_start":982,"line_end":982,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":118837,"byte_end":118840,"line_start":983,"line_end":983,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":118845,"byte_end":118856,"line_start":984,"line_end":984,"column_start":5,"column_end":16}},{"value":"/ # use euclid::{Point3D, point3};","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":118861,"byte_end":118897,"line_start":985,"line_end":985,"column_start":5,"column_end":41}},{"value":"/ enum Mm {}","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":118902,"byte_end":118916,"line_start":986,"line_end":986,"column_start":5,"column_end":19}},{"value":"/ enum Cm {}","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":118921,"byte_end":118935,"line_start":987,"line_end":987,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":118940,"byte_end":118943,"line_start":988,"line_end":988,"column_start":5,"column_end":8}},{"value":"/ let point: Point3D<_, Mm> = point3(1, -8, 0);","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":118948,"byte_end":118997,"line_start":989,"line_end":989,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":119002,"byte_end":119005,"line_start":990,"line_end":990,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(point.x, point.cast_unit::<Cm>().x);","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":119010,"byte_end":119061,"line_start":991,"line_end":991,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(point.y, point.cast_unit::<Cm>().y);","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":119066,"byte_end":119117,"line_start":992,"line_end":992,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(point.z, point.cast_unit::<Cm>().z);","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":119122,"byte_end":119173,"line_start":993,"line_end":993,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":119178,"byte_end":119185,"line_start":994,"line_end":994,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":119190,"byte_end":119199,"line_start":995,"line_end":995,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1500},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":119353,"byte_end":119358,"line_start":1002,"line_end":1002,"column_start":12,"column_end":17},"name":"to_2d","qualname":"<Point3D<T, U>>::to_2d","value":"pub fn to_2d(Self) -> Point2D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Convert into a 2d point.\n","sig":null,"attributes":[{"value":"/ Convert into a 2d point.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":119299,"byte_end":119327,"line_start":1000,"line_end":1000,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":119332,"byte_end":119341,"line_start":1001,"line_end":1001,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1501},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":119785,"byte_end":119790,"line_start":1018,"line_end":1018,"column_start":12,"column_end":17},"name":"round","qualname":"<Point3D<T, U>>::round","value":"pub fn round(Self) -> Self where T: Round","parent":null,"children":[],"decl_id":null,"docs":" Rounds each component to the nearest integer value.","sig":null,"attributes":[{"value":"/ Rounds each component to the nearest integer value.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":119413,"byte_end":119468,"line_start":1006,"line_end":1006,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":119473,"byte_end":119476,"line_start":1007,"line_end":1007,"column_start":5,"column_end":8}},{"value":"/ This behavior is preserved for negative values (unlike the basic cast).","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":119481,"byte_end":119556,"line_start":1008,"line_end":1008,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":119561,"byte_end":119564,"line_start":1009,"line_end":1009,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":119569,"byte_end":119580,"line_start":1010,"line_end":1010,"column_start":5,"column_end":16}},{"value":"/ # use euclid::point3;","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":119585,"byte_end":119610,"line_start":1011,"line_end":1011,"column_start":5,"column_end":30}},{"value":"/ enum Mm {}","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":119615,"byte_end":119629,"line_start":1012,"line_end":1012,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":119634,"byte_end":119637,"line_start":1013,"line_end":1013,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(point3::<_, Mm>(-0.1, -0.8, 0.4).round(), point3::<_, Mm>(0.0, -1.0, 0.0))","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":119642,"byte_end":119731,"line_start":1014,"line_end":1014,"column_start":5,"column_end":94}},{"value":"/ ```","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":119736,"byte_end":119743,"line_start":1015,"line_end":1015,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":119748,"byte_end":119757,"line_start":1016,"line_end":1016,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":119762,"byte_end":119773,"line_start":1017,"line_end":1017,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1502},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":120319,"byte_end":120323,"line_start":1037,"line_end":1037,"column_start":12,"column_end":16},"name":"ceil","qualname":"<Point3D<T, U>>::ceil","value":"pub fn ceil(Self) -> Self where T: Ceil","parent":null,"children":[],"decl_id":null,"docs":" Rounds each component to the smallest integer equal or greater than the original value.","sig":null,"attributes":[{"value":"/ Rounds each component to the smallest integer equal or greater than the original value.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":119913,"byte_end":120004,"line_start":1025,"line_end":1025,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":120009,"byte_end":120012,"line_start":1026,"line_end":1026,"column_start":5,"column_end":8}},{"value":"/ This behavior is preserved for negative values (unlike the basic cast).","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":120017,"byte_end":120092,"line_start":1027,"line_end":1027,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":120097,"byte_end":120100,"line_start":1028,"line_end":1028,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":120105,"byte_end":120116,"line_start":1029,"line_end":1029,"column_start":5,"column_end":16}},{"value":"/ # use euclid::point3;","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":120121,"byte_end":120146,"line_start":1030,"line_end":1030,"column_start":5,"column_end":30}},{"value":"/ enum Mm {}","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":120151,"byte_end":120165,"line_start":1031,"line_end":1031,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":120170,"byte_end":120173,"line_start":1032,"line_end":1032,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(point3::<_, Mm>(-0.1, -0.8, 0.4).ceil(), point3::<_, Mm>(0.0, 0.0, 1.0))","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":120178,"byte_end":120265,"line_start":1033,"line_end":1033,"column_start":5,"column_end":92}},{"value":"/ ```","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":120270,"byte_end":120277,"line_start":1034,"line_end":1034,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":120282,"byte_end":120291,"line_start":1035,"line_end":1035,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":120296,"byte_end":120307,"line_start":1036,"line_end":1036,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1503},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":120848,"byte_end":120853,"line_start":1056,"line_end":1056,"column_start":12,"column_end":17},"name":"floor","qualname":"<Point3D<T, U>>::floor","value":"pub fn floor(Self) -> Self where T: Floor","parent":null,"children":[],"decl_id":null,"docs":" Rounds each component to the biggest integer equal or lower than the original value.","sig":null,"attributes":[{"value":"/ Rounds each component to the biggest integer equal or lower than the original value.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":120442,"byte_end":120530,"line_start":1044,"line_end":1044,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":120535,"byte_end":120538,"line_start":1045,"line_end":1045,"column_start":5,"column_end":8}},{"value":"/ This behavior is preserved for negative values (unlike the basic cast).","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":120543,"byte_end":120618,"line_start":1046,"line_end":1046,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":120623,"byte_end":120626,"line_start":1047,"line_end":1047,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":120631,"byte_end":120642,"line_start":1048,"line_end":1048,"column_start":5,"column_end":16}},{"value":"/ # use euclid::point3;","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":120647,"byte_end":120672,"line_start":1049,"line_end":1049,"column_start":5,"column_end":30}},{"value":"/ enum Mm {}","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":120677,"byte_end":120691,"line_start":1050,"line_end":1050,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":120696,"byte_end":120699,"line_start":1051,"line_end":1051,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(point3::<_, Mm>(-0.1, -0.8, 0.4).floor(), point3::<_, Mm>(-1.0, -1.0, 0.0))","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":120704,"byte_end":120794,"line_start":1052,"line_end":1052,"column_start":5,"column_end":95}},{"value":"/ ```","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":120799,"byte_end":120806,"line_start":1053,"line_end":1053,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":120811,"byte_end":120820,"line_start":1054,"line_end":1054,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":120825,"byte_end":120836,"line_start":1055,"line_end":1055,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1504},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":121659,"byte_end":121663,"line_start":1081,"line_end":1081,"column_start":12,"column_end":16},"name":"lerp","qualname":"<Point3D<T, U>>::lerp","value":"pub fn lerp(Self, Self, T) -> Self where T: One + Sub<Output = T> + Mul<Output\n= T> + Add<Output = T>","parent":null,"children":[],"decl_id":null,"docs":" Linearly interpolate between this point and another point.","sig":null,"attributes":[{"value":"/ Linearly interpolate between this point and another point.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":120976,"byte_end":121038,"line_start":1063,"line_end":1063,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":121043,"byte_end":121046,"line_start":1064,"line_end":1064,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":121051,"byte_end":121064,"line_start":1065,"line_end":1065,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":121069,"byte_end":121072,"line_start":1066,"line_end":1066,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":121077,"byte_end":121088,"line_start":1067,"line_end":1067,"column_start":5,"column_end":16}},{"value":"/ use euclid::point3;","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":121093,"byte_end":121116,"line_start":1068,"line_end":1068,"column_start":5,"column_end":28}},{"value":"/ use euclid::default::Point3D;","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":121121,"byte_end":121154,"line_start":1069,"line_end":1069,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":121159,"byte_end":121162,"line_start":1070,"line_end":1070,"column_start":5,"column_end":8}},{"value":"/ let from: Point3D<_> = point3(0.0, 10.0, -1.0);","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":121167,"byte_end":121218,"line_start":1071,"line_end":1071,"column_start":5,"column_end":56}},{"value":"/ let to:  Point3D<_> = point3(8.0, -4.0,  0.0);","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":121223,"byte_end":121273,"line_start":1072,"line_end":1072,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":121278,"byte_end":121281,"line_start":1073,"line_end":1073,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(from.lerp(to, -1.0), point3(-8.0,  24.0, -2.0));","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":121286,"byte_end":121349,"line_start":1074,"line_end":1074,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(from.lerp(to,  0.0), point3( 0.0,  10.0, -1.0));","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":121354,"byte_end":121417,"line_start":1075,"line_end":1075,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(from.lerp(to,  0.5), point3( 4.0,   3.0, -0.5));","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":121422,"byte_end":121485,"line_start":1076,"line_end":1076,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(from.lerp(to,  1.0), point3( 8.0,  -4.0,  0.0));","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":121490,"byte_end":121553,"line_start":1077,"line_end":1077,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(from.lerp(to,  2.0), point3(16.0, -18.0,  1.0));","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":121558,"byte_end":121621,"line_start":1078,"line_end":1078,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":121626,"byte_end":121633,"line_start":1079,"line_end":1079,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":121638,"byte_end":121647,"line_start":1080,"line_end":1080,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1508},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":122042,"byte_end":122045,"line_start":1096,"line_end":1096,"column_start":12,"column_end":15},"name":"min","qualname":"<Point3D<T, U>>::min","value":"pub fn min(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":122021,"byte_end":122030,"line_start":1095,"line_end":1095,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1509},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":122235,"byte_end":122238,"line_start":1105,"line_end":1105,"column_start":12,"column_end":15},"name":"max","qualname":"<Point3D<T, U>>::max","value":"pub fn max(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":122214,"byte_end":122223,"line_start":1104,"line_end":1104,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1510},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":122601,"byte_end":122606,"line_start":1118,"line_end":1118,"column_start":12,"column_end":17},"name":"clamp","qualname":"<Point3D<T, U>>::clamp","value":"pub fn clamp(Self, Self, Self) -> Self where T: Copy","parent":null,"children":[],"decl_id":null,"docs":" Returns the point each component of which clamped by corresponding\n components of `start` and `end`.","sig":null,"attributes":[{"value":"/ Returns the point each component of which clamped by corresponding","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":122407,"byte_end":122477,"line_start":1113,"line_end":1113,"column_start":5,"column_end":75}},{"value":"/ components of `start` and `end`.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":122482,"byte_end":122518,"line_start":1114,"line_end":1114,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":122523,"byte_end":122526,"line_start":1115,"line_end":1115,"column_start":5,"column_end":8}},{"value":"/ Shortcut for `self.max(start).min(end)`.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":122531,"byte_end":122575,"line_start":1116,"line_end":1116,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":122580,"byte_end":122589,"line_start":1117,"line_end":1117,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1514},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":123147,"byte_end":123151,"line_start":1133,"line_end":1133,"column_start":12,"column_end":16},"name":"cast","qualname":"<Point3D<T, U>>::cast","value":"pub fn cast<NewT: NumCast>(Self) -> Point3D<NewT, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast from one numeric representation to another, preserving the units.","sig":null,"attributes":[{"value":"/ Cast from one numeric representation to another, preserving the units.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":122767,"byte_end":122841,"line_start":1127,"line_end":1127,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":122846,"byte_end":122849,"line_start":1128,"line_end":1128,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point to integer coordinates, the decimals are truncated","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":122854,"byte_end":122941,"line_start":1129,"line_end":1129,"column_start":5,"column_end":92}},{"value":"/ as one would expect from a simple cast, but this behavior does not always make sense","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":122946,"byte_end":123034,"line_start":1130,"line_end":1130,"column_start":5,"column_end":93}},{"value":"/ geometrically. Consider using `round()`, `ceil()` or `floor()` before casting.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":123039,"byte_end":123121,"line_start":1131,"line_end":1131,"column_start":5,"column_end":87}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":123126,"byte_end":123135,"line_start":1132,"line_end":1132,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1516},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":123614,"byte_end":123622,"line_start":1142,"line_end":1142,"column_start":12,"column_end":20},"name":"try_cast","qualname":"<Point3D<T, U>>::try_cast","value":"pub fn try_cast<NewT: NumCast>(Self) -> Option<Point3D<NewT, U>>","parent":null,"children":[],"decl_id":null,"docs":" Fallible cast from one numeric representation to another, preserving the units.","sig":null,"attributes":[{"value":"/ Fallible cast from one numeric representation to another, preserving the units.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":123239,"byte_end":123322,"line_start":1137,"line_end":1137,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":123327,"byte_end":123330,"line_start":1138,"line_end":1138,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point to integer coordinates, the decimals are truncated","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":123335,"byte_end":123422,"line_start":1139,"line_end":1139,"column_start":5,"column_end":92}},{"value":"/ as one would expect from a simple cast, but this behavior does not always make sense","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":123427,"byte_end":123515,"line_start":1140,"line_end":1140,"column_start":5,"column_end":93}},{"value":"/ geometrically. Consider using `round()`, `ceil()` or `floor()` before casting.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":123520,"byte_end":123602,"line_start":1141,"line_end":1141,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":1518},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":124019,"byte_end":124025,"line_start":1157,"line_end":1157,"column_start":12,"column_end":18},"name":"to_f32","qualname":"<Point3D<T, U>>::to_f32","value":"pub fn to_f32(Self) -> Point3D<f32, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `f32` point.\n","sig":null,"attributes":[{"value":"/ Cast into an `f32` point.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":123964,"byte_end":123993,"line_start":1155,"line_end":1155,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":123998,"byte_end":124007,"line_start":1156,"line_end":1156,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1519},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":124139,"byte_end":124145,"line_start":1163,"line_end":1163,"column_start":12,"column_end":18},"name":"to_f64","qualname":"<Point3D<T, U>>::to_f64","value":"pub fn to_f64(Self) -> Point3D<f64, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `f64` point.\n","sig":null,"attributes":[{"value":"/ Cast into an `f64` point.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":124084,"byte_end":124113,"line_start":1161,"line_end":1161,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":124118,"byte_end":124127,"line_start":1162,"line_end":1162,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1520},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":124498,"byte_end":124506,"line_start":1173,"line_end":1173,"column_start":12,"column_end":20},"name":"to_usize","qualname":"<Point3D<T, U>>::to_usize","value":"pub fn to_usize(Self) -> Point3D<usize, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `usize` point, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `usize` point, truncating decimals if any.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":124204,"byte_end":124263,"line_start":1167,"line_end":1167,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":124268,"byte_end":124271,"line_start":1168,"line_end":1168,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point points, it is worth considering whether","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":124276,"byte_end":124352,"line_start":1169,"line_end":1169,"column_start":5,"column_end":81}},{"value":"/ to `round()`, `ceil()` or `floor()` before the cast in order to obtain","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":124357,"byte_end":124431,"line_start":1170,"line_end":1170,"column_start":5,"column_end":79}},{"value":"/ the desired conversion behavior.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":124436,"byte_end":124472,"line_start":1171,"line_end":1171,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":124477,"byte_end":124486,"line_start":1172,"line_end":1172,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1521},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":124859,"byte_end":124865,"line_start":1183,"line_end":1183,"column_start":12,"column_end":18},"name":"to_u32","qualname":"<Point3D<T, U>>::to_u32","value":"pub fn to_u32(Self) -> Point3D<u32, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `u32` point, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `u32` point, truncating decimals if any.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":124567,"byte_end":124624,"line_start":1177,"line_end":1177,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":124629,"byte_end":124632,"line_start":1178,"line_end":1178,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point points, it is worth considering whether","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":124637,"byte_end":124713,"line_start":1179,"line_end":1179,"column_start":5,"column_end":81}},{"value":"/ to `round()`, `ceil()` or `floor()` before the cast in order to obtain","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":124718,"byte_end":124792,"line_start":1180,"line_end":1180,"column_start":5,"column_end":79}},{"value":"/ the desired conversion behavior.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":124797,"byte_end":124833,"line_start":1181,"line_end":1181,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":124838,"byte_end":124847,"line_start":1182,"line_end":1182,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1522},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":125216,"byte_end":125222,"line_start":1193,"line_end":1193,"column_start":12,"column_end":18},"name":"to_i32","qualname":"<Point3D<T, U>>::to_i32","value":"pub fn to_i32(Self) -> Point3D<i32, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `i32` point, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `i32` point, truncating decimals if any.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":124924,"byte_end":124981,"line_start":1187,"line_end":1187,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":124986,"byte_end":124989,"line_start":1188,"line_end":1188,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point points, it is worth considering whether","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":124994,"byte_end":125070,"line_start":1189,"line_end":1189,"column_start":5,"column_end":81}},{"value":"/ to `round()`, `ceil()` or `floor()` before the cast in order to obtain","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":125075,"byte_end":125149,"line_start":1190,"line_end":1190,"column_start":5,"column_end":79}},{"value":"/ the desired conversion behavior.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":125154,"byte_end":125190,"line_start":1191,"line_end":1191,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":125195,"byte_end":125204,"line_start":1192,"line_end":1192,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1523},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":125573,"byte_end":125579,"line_start":1203,"line_end":1203,"column_start":12,"column_end":18},"name":"to_i64","qualname":"<Point3D<T, U>>::to_i64","value":"pub fn to_i64(Self) -> Point3D<i64, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `i64` point, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `i64` point, truncating decimals if any.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":125281,"byte_end":125338,"line_start":1197,"line_end":1197,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":125343,"byte_end":125346,"line_start":1198,"line_end":1198,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point points, it is worth considering whether","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":125351,"byte_end":125427,"line_start":1199,"line_end":1199,"column_start":5,"column_end":81}},{"value":"/ to `round()`, `ceil()` or `floor()` before the cast in order to obtain","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":125432,"byte_end":125506,"line_start":1200,"line_end":1200,"column_start":5,"column_end":79}},{"value":"/ the desired conversion behavior.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":125511,"byte_end":125547,"line_start":1201,"line_end":1201,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":125552,"byte_end":125561,"line_start":1202,"line_end":1202,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1527},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":125743,"byte_end":125752,"line_start":1211,"line_end":1211,"column_start":12,"column_end":21},"name":"is_finite","qualname":"<Point3D<T, U>>::is_finite","value":"pub fn is_finite(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if all members are finite.\n","sig":null,"attributes":[{"value":"/ Returns true if all members are finite.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":125674,"byte_end":125717,"line_start":1209,"line_end":1209,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":125722,"byte_end":125731,"line_start":1210,"line_end":1210,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1531},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":125928,"byte_end":125936,"line_start":1218,"line_end":1218,"column_start":12,"column_end":20},"name":"add_size","qualname":"<Point3D<T, U>>::add_size","value":"pub fn add_size(Self, Size3D<T, U>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":125907,"byte_end":125916,"line_start":1217,"line_end":1217,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1535},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":126192,"byte_end":126203,"line_start":1229,"line_end":1229,"column_start":12,"column_end":23},"name":"distance_to","qualname":"<Point3D<T, U>>::distance_to","value":"pub fn distance_to(Self, Self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":126171,"byte_end":126180,"line_start":1228,"line_end":1228,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":1661},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":132196,"byte_end":132202,"line_start":1487,"line_end":1487,"column_start":14,"column_end":20},"name":"point2","qualname":"::point::point2","value":"pub const fn point2<T, U>(T, T) -> Point2D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Shorthand for `Point2D::new(x, y)`.\n","sig":null,"attributes":[{"value":"/ Shorthand for `Point2D::new(x, y)`.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":132133,"byte_end":132172,"line_start":1485,"line_end":1485,"column_start":1,"column_end":40}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":132173,"byte_end":132182,"line_start":1486,"line_end":1486,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1664},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":132376,"byte_end":132382,"line_start":1497,"line_end":1497,"column_start":14,"column_end":20},"name":"point3","qualname":"::point::point3","value":"pub const fn point3<T, U>(T, T, T) -> Point3D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Shorthand for `Point3D::new(x, y)`.\n","sig":null,"attributes":[{"value":"/ Shorthand for `Point3D::new(x, y)`.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":132313,"byte_end":132352,"line_start":1495,"line_end":1495,"column_start":1,"column_end":40}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":132353,"byte_end":132362,"line_start":1496,"line_end":1496,"column_start":1,"column_end":10}}]},{"kind":"Struct","id":{"krate":0,"index":1735},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":147279,"byte_end":147283,"line_start":52,"line_end":52,"column_start":12,"column_end":16},"name":"Rect","qualname":"::rect::Rect","value":"Rect { origin, size }","parent":null,"children":[{"krate":0,"index":1738},{"krate":0,"index":1739}],"decl_id":null,"docs":" A 2d Rectangle optionally tagged with a unit.","sig":null,"attributes":[{"value":"/ A 2d Rectangle optionally tagged with a unit.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":146570,"byte_end":146619,"line_start":29,"line_end":29,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":146620,"byte_end":146623,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Representation","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":146624,"byte_end":146644,"line_start":31,"line_end":31,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":146645,"byte_end":146648,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ `Rect` is represented by an origin point and a size.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":146649,"byte_end":146705,"line_start":33,"line_end":33,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":146706,"byte_end":146709,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ See [`Box2D`] for a rectangle represented by two endpoints.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":146710,"byte_end":146773,"line_start":35,"line_end":35,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":146774,"byte_end":146777,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ # Empty rectangle","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":146778,"byte_end":146799,"line_start":37,"line_end":37,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":146800,"byte_end":146803,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ A rectangle is considered empty (see [`is_empty`]) if any of the following is true:","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":146804,"byte_end":146891,"line_start":39,"line_end":39,"column_start":1,"column_end":88}},{"value":"/ - it's area is empty,","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":146892,"byte_end":146917,"line_start":40,"line_end":40,"column_start":1,"column_end":26}},{"value":"/ - it's area is negative (`size.x < 0` or `size.y < 0`),","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":146918,"byte_end":146977,"line_start":41,"line_end":41,"column_start":1,"column_end":60}},{"value":"/ - it contains NaNs.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":146978,"byte_end":147001,"line_start":42,"line_end":42,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":147002,"byte_end":147005,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ [`is_empty`]: #method.is_empty","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":147006,"byte_end":147040,"line_start":44,"line_end":44,"column_start":1,"column_end":35}},{"value":"/ [`Box2D`]: struct.Box2D.html","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":147041,"byte_end":147073,"line_start":45,"line_end":45,"column_start":1,"column_end":33}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":147074,"byte_end":147084,"line_start":46,"line_end":46,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":1738},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":147300,"byte_end":147306,"line_start":53,"line_end":53,"column_start":9,"column_end":15},"name":"origin","qualname":"::rect::Rect::origin","value":"point::Point2D<T, U>","parent":{"krate":0,"index":1735},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1739},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":147331,"byte_end":147335,"line_start":54,"line_end":54,"column_start":9,"column_end":13},"name":"size","qualname":"::rect::Rect::size","value":"size::Size2D<T, U>","parent":{"krate":0,"index":1735},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1770},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":148736,"byte_end":148739,"line_start":114,"line_end":114,"column_start":18,"column_end":21},"name":"new","qualname":"<Rect<T, U>>::new","value":"pub const fn new(Point2D<T, U>, Size2D<T, U>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructor.\n","sig":null,"attributes":[{"value":"/ Constructor.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":148688,"byte_end":148704,"line_start":112,"line_end":112,"column_start":5,"column_end":21}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":148709,"byte_end":148718,"line_start":113,"line_end":113,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1774},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":148948,"byte_end":148952,"line_start":125,"line_end":125,"column_start":12,"column_end":16},"name":"zero","qualname":"<Rect<T, U>>::zero","value":"pub fn zero() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructor, setting all sides to zero.\n","sig":null,"attributes":[{"value":"/ Constructor, setting all sides to zero.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":148879,"byte_end":148922,"line_start":123,"line_end":123,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":148927,"byte_end":148936,"line_start":124,"line_end":124,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1775},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":149108,"byte_end":149117,"line_start":131,"line_end":131,"column_start":12,"column_end":21},"name":"from_size","qualname":"<Rect<T, U>>::from_size","value":"pub fn from_size(Size2D<T, U>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a rect of the given size, at offset zero.\n","sig":null,"attributes":[{"value":"/ Creates a rect of the given size, at offset zero.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":149029,"byte_end":149082,"line_start":129,"line_end":129,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":149087,"byte_end":149096,"line_start":130,"line_end":130,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1779},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":149326,"byte_end":149329,"line_start":144,"line_end":144,"column_start":12,"column_end":15},"name":"min","qualname":"<Rect<T, U>>::min","value":"pub fn min(&Self) -> Point2D<T, U>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":149305,"byte_end":149314,"line_start":143,"line_end":143,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1780},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":149408,"byte_end":149411,"line_start":149,"line_end":149,"column_start":12,"column_end":15},"name":"max","qualname":"<Rect<T, U>>::max","value":"pub fn max(&Self) -> Point2D<T, U>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":149387,"byte_end":149396,"line_start":148,"line_end":148,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1781},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":149502,"byte_end":149507,"line_start":154,"line_end":154,"column_start":12,"column_end":17},"name":"max_x","qualname":"<Rect<T, U>>::max_x","value":"pub fn max_x(&Self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":149481,"byte_end":149490,"line_start":153,"line_end":153,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1782},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":149594,"byte_end":149599,"line_start":159,"line_end":159,"column_start":12,"column_end":17},"name":"min_x","qualname":"<Rect<T, U>>::min_x","value":"pub fn min_x(&Self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":149573,"byte_end":149582,"line_start":158,"line_end":158,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1783},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":149668,"byte_end":149673,"line_start":164,"line_end":164,"column_start":12,"column_end":17},"name":"max_y","qualname":"<Rect<T, U>>::max_y","value":"pub fn max_y(&Self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":149647,"byte_end":149656,"line_start":163,"line_end":163,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1784},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":149761,"byte_end":149766,"line_start":169,"line_end":169,"column_start":12,"column_end":17},"name":"min_y","qualname":"<Rect<T, U>>::min_y","value":"pub fn min_y(&Self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":149740,"byte_end":149749,"line_start":168,"line_end":168,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1785},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":149835,"byte_end":149840,"line_start":174,"line_end":174,"column_start":12,"column_end":17},"name":"width","qualname":"<Rect<T, U>>::width","value":"pub fn width(&Self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":149814,"byte_end":149823,"line_start":173,"line_end":173,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1786},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":149911,"byte_end":149917,"line_start":179,"line_end":179,"column_start":12,"column_end":18},"name":"height","qualname":"<Rect<T, U>>::height","value":"pub fn height(&Self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":149890,"byte_end":149899,"line_start":178,"line_end":178,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1787},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":149989,"byte_end":149996,"line_start":184,"line_end":184,"column_start":12,"column_end":19},"name":"x_range","qualname":"<Rect<T, U>>::x_range","value":"pub fn x_range(&Self) -> Range<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":149968,"byte_end":149977,"line_start":183,"line_end":183,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1788},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":150085,"byte_end":150092,"line_start":189,"line_end":189,"column_start":12,"column_end":19},"name":"y_range","qualname":"<Rect<T, U>>::y_range","value":"pub fn y_range(&Self) -> Range<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":150064,"byte_end":150073,"line_start":188,"line_end":188,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1789},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":150257,"byte_end":150266,"line_start":196,"line_end":196,"column_start":12,"column_end":21},"name":"translate","qualname":"<Rect<T, U>>::translate","value":"pub fn translate(&Self, Vector2D<T, U>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the same rectangle, translated by a vector.\n","sig":null,"attributes":[{"value":"/ Returns the same rectangle, translated by a vector.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":150160,"byte_end":150215,"line_start":193,"line_end":193,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":150220,"byte_end":150229,"line_start":194,"line_end":194,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":150234,"byte_end":150245,"line_start":195,"line_end":195,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1790},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":150383,"byte_end":150391,"line_start":201,"line_end":201,"column_start":12,"column_end":20},"name":"to_box2d","qualname":"<Rect<T, U>>::to_box2d","value":"pub fn to_box2d(&Self) -> Box2D<T, U>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":150362,"byte_end":150371,"line_start":200,"line_end":200,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1794},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":150815,"byte_end":150823,"line_start":217,"line_end":217,"column_start":12,"column_end":20},"name":"contains","qualname":"<Rect<T, U>>::contains","value":"pub fn contains(&Self, Point2D<T, U>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this rectangle contains the point. Points are considered\n in the rectangle if they are on the left or top edge, but outside if they\n are on the right or bottom edge.\n","sig":null,"attributes":[{"value":"/ Returns true if this rectangle contains the point. Points are considered","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":150590,"byte_end":150666,"line_start":213,"line_end":213,"column_start":5,"column_end":81}},{"value":"/ in the rectangle if they are on the left or top edge, but outside if they","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":150671,"byte_end":150748,"line_start":214,"line_end":214,"column_start":5,"column_end":82}},{"value":"/ are on the right or bottom edge.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":150753,"byte_end":150789,"line_start":215,"line_end":215,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":150794,"byte_end":150803,"line_start":216,"line_end":216,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1795},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":150927,"byte_end":150937,"line_start":222,"line_end":222,"column_start":12,"column_end":22},"name":"intersects","qualname":"<Rect<T, U>>::intersects","value":"pub fn intersects(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":150906,"byte_end":150915,"line_start":221,"line_end":221,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1799},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":151155,"byte_end":151167,"line_start":232,"line_end":232,"column_start":12,"column_end":24},"name":"intersection","qualname":"<Rect<T, U>>::intersection","value":"pub fn intersection(&Self, &Self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":151134,"byte_end":151143,"line_start":231,"line_end":231,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1803},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":151518,"byte_end":151525,"line_start":249,"line_end":249,"column_start":12,"column_end":19},"name":"inflate","qualname":"<Rect<T, U>>::inflate","value":"pub fn inflate(&Self, T, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":151481,"byte_end":151490,"line_start":247,"line_end":247,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":151495,"byte_end":151506,"line_start":248,"line_end":248,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1807},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":152123,"byte_end":152136,"line_start":268,"line_end":268,"column_start":12,"column_end":25},"name":"contains_rect","qualname":"<Rect<T, U>>::contains_rect","value":"pub fn contains_rect(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this rectangle contains the interior of rect. Always\n returns true if rect is empty, and always returns false if rect is\n nonempty but this rectangle is empty.\n","sig":null,"attributes":[{"value":"/ Returns true if this rectangle contains the interior of rect. Always","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":151904,"byte_end":151976,"line_start":264,"line_end":264,"column_start":5,"column_end":77}},{"value":"/ returns true if rect is empty, and always returns false if rect is","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":151981,"byte_end":152051,"line_start":265,"line_end":265,"column_start":5,"column_end":75}},{"value":"/ nonempty but this rectangle is empty.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":152056,"byte_end":152097,"line_start":266,"line_end":266,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":152102,"byte_end":152111,"line_start":267,"line_end":267,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1811},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":152771,"byte_end":152781,"line_start":286,"line_end":286,"column_start":12,"column_end":22},"name":"inner_rect","qualname":"<Rect<T, U>>::inner_rect","value":"pub fn inner_rect(&Self, SideOffsets2D<T, U>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculate the size and position of an inner rectangle.","sig":null,"attributes":[{"value":"/ Calculate the size and position of an inner rectangle.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":152499,"byte_end":152557,"line_start":281,"line_end":281,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":152562,"byte_end":152565,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ Subtracts the side offsets from all sides. The horizontal and vertical","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":152570,"byte_end":152644,"line_start":283,"line_end":283,"column_start":5,"column_end":79}},{"value":"/ offsets must not be larger than the original side length.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":152649,"byte_end":152710,"line_start":284,"line_end":284,"column_start":5,"column_end":66}},{"value":"/ This method assumes y oriented downward.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":152715,"byte_end":152759,"line_start":285,"line_end":285,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1815},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":153531,"byte_end":153541,"line_start":308,"line_end":308,"column_start":12,"column_end":22},"name":"outer_rect","qualname":"<Rect<T, U>>::outer_rect","value":"pub fn outer_rect(&Self, SideOffsets2D<T, U>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculate the size and position of an outer rectangle.","sig":null,"attributes":[{"value":"/ Calculate the size and position of an outer rectangle.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":153330,"byte_end":153388,"line_start":304,"line_end":304,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":153393,"byte_end":153396,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ Add the offsets to all sides. The expanded rectangle is returned.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":153401,"byte_end":153470,"line_start":306,"line_end":306,"column_start":5,"column_end":74}},{"value":"/ This method assumes y oriented downward.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":153475,"byte_end":153519,"line_start":307,"line_end":307,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1819},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":154511,"byte_end":154522,"line_start":332,"line_end":332,"column_start":12,"column_end":23},"name":"from_points","qualname":"<Rect<T, U>>::from_points","value":"pub fn from_points<I>(I) -> Self where I: IntoIterator,\nI::Item: Borrow<Point2D<T, U>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the smallest rectangle defined by the top/bottom/left/right-most\n points provided as parameter.","sig":null,"attributes":[{"value":"/ Returns the smallest rectangle defined by the top/bottom/left/right-most","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":153951,"byte_end":154027,"line_start":323,"line_end":323,"column_start":5,"column_end":81}},{"value":"/ points provided as parameter.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":154032,"byte_end":154065,"line_start":324,"line_end":324,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":154070,"byte_end":154073,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ Note: This function has a behavior that can be surprising because","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":154078,"byte_end":154147,"line_start":326,"line_end":326,"column_start":5,"column_end":74}},{"value":"/ the right-most and bottom-most points are exactly on the edge","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":154152,"byte_end":154217,"line_start":327,"line_end":327,"column_start":5,"column_end":70}},{"value":"/ of the rectangle while the `contains` function is has exclusive","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":154222,"byte_end":154289,"line_start":328,"line_end":328,"column_start":5,"column_end":72}},{"value":"/ semantic on these edges. This means that the right-most and bottom-most","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":154294,"byte_end":154369,"line_start":329,"line_end":329,"column_start":5,"column_end":80}},{"value":"/ points provided to `from_points` will count as not contained by the rect.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":154374,"byte_end":154451,"line_start":330,"line_end":330,"column_start":5,"column_end":82}},{"value":"/ This behavior may change in the future.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":154456,"byte_end":154499,"line_start":331,"line_end":331,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1824},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":154883,"byte_end":154887,"line_start":347,"line_end":347,"column_start":12,"column_end":16},"name":"lerp","qualname":"<Rect<T, U>>::lerp","value":"pub fn lerp(&Self, Self, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Linearly interpolate between this rectangle and another rectangle.\n","sig":null,"attributes":[{"value":"/ Linearly interpolate between this rectangle and another rectangle.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":154787,"byte_end":154857,"line_start":345,"line_end":345,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":154862,"byte_end":154871,"line_start":346,"line_end":346,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1828},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":155148,"byte_end":155154,"line_start":359,"line_end":359,"column_start":12,"column_end":18},"name":"center","qualname":"<Rect<T, U>>::center","value":"pub fn center(&Self) -> Point2D<T, U>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1832},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":155409,"byte_end":155414,"line_start":370,"line_end":370,"column_start":12,"column_end":17},"name":"union","qualname":"<Rect<T, U>>::union","value":"pub fn union(&Self, &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":155388,"byte_end":155397,"line_start":369,"line_end":369,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1836},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":155716,"byte_end":155721,"line_start":384,"line_end":384,"column_start":12,"column_end":17},"name":"scale","qualname":"<Rect<T, U>>::scale","value":"pub fn scale<S: Copy>(&Self, S, S) -> Self where T: Copy + Mul<S, Output = T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":155695,"byte_end":155704,"line_start":383,"line_end":383,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1841},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":156058,"byte_end":156062,"line_start":397,"line_end":397,"column_start":12,"column_end":16},"name":"area","qualname":"<Rect<T, U>>::area","value":"pub fn area(&Self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":156037,"byte_end":156046,"line_start":396,"line_end":396,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1845},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":156186,"byte_end":156194,"line_start":404,"line_end":404,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Rect<T, U>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":156165,"byte_end":156174,"line_start":403,"line_end":403,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1849},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":156325,"byte_end":156337,"line_start":411,"line_end":411,"column_start":12,"column_end":24},"name":"to_non_empty","qualname":"<Rect<T, U>>::to_non_empty","value":"pub fn to_non_empty(&Self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":156304,"byte_end":156313,"line_start":410,"line_end":410,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1891},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":158265,"byte_end":158275,"line_start":489,"line_end":489,"column_start":12,"column_end":22},"name":"to_untyped","qualname":"<Rect<T, U>>::to_untyped","value":"pub fn to_untyped(&Self) -> Rect<T, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":" Drop the units, preserving only the numeric value.\n","sig":null,"attributes":[{"value":"/ Drop the units, preserving only the numeric value.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":158185,"byte_end":158239,"line_start":487,"line_end":487,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":158244,"byte_end":158253,"line_start":488,"line_end":488,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1892},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":158450,"byte_end":158462,"line_start":495,"line_end":495,"column_start":12,"column_end":24},"name":"from_untyped","qualname":"<Rect<T, U>>::from_untyped","value":"pub fn from_untyped(&Rect<T, UnknownUnit>) -> Rect<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Tag a unitless value with units.\n","sig":null,"attributes":[{"value":"/ Tag a unitless value with units.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":158388,"byte_end":158424,"line_start":493,"line_end":493,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":158429,"byte_end":158438,"line_start":494,"line_end":494,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1893},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":158675,"byte_end":158684,"line_start":504,"line_end":504,"column_start":12,"column_end":21},"name":"cast_unit","qualname":"<Rect<T, U>>::cast_unit","value":"pub fn cast_unit<V>(&Self) -> Rect<T, V>","parent":null,"children":[],"decl_id":null,"docs":" Cast the unit\n","sig":null,"attributes":[{"value":"/ Cast the unit","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":158632,"byte_end":158649,"line_start":502,"line_end":502,"column_start":5,"column_end":22}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":158654,"byte_end":158663,"line_start":503,"line_end":503,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1898},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":159210,"byte_end":159214,"line_start":516,"line_end":516,"column_start":12,"column_end":16},"name":"cast","qualname":"<Rect<T, U>>::cast","value":"pub fn cast<NewT: NumCast>(&Self) -> Rect<NewT, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast from one numeric representation to another, preserving the units.","sig":null,"attributes":[{"value":"/ Cast from one numeric representation to another, preserving the units.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":158830,"byte_end":158904,"line_start":510,"line_end":510,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":158909,"byte_end":158912,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point to integer coordinates, the decimals are truncated","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":158917,"byte_end":159004,"line_start":512,"line_end":512,"column_start":5,"column_end":92}},{"value":"/ as one would expect from a simple cast, but this behavior does not always make sense","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":159009,"byte_end":159097,"line_start":513,"line_end":513,"column_start":5,"column_end":93}},{"value":"/ geometrically. Consider using round(), round_in or round_out() before casting.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":159102,"byte_end":159184,"line_start":514,"line_end":514,"column_start":5,"column_end":87}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":159189,"byte_end":159198,"line_start":515,"line_end":515,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1900},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":159698,"byte_end":159706,"line_start":525,"line_end":525,"column_start":12,"column_end":20},"name":"try_cast","qualname":"<Rect<T, U>>::try_cast","value":"pub fn try_cast<NewT: NumCast>(&Self) -> Option<Rect<NewT, U>>","parent":null,"children":[],"decl_id":null,"docs":" Fallible cast from one numeric representation to another, preserving the units.","sig":null,"attributes":[{"value":"/ Fallible cast from one numeric representation to another, preserving the units.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":159323,"byte_end":159406,"line_start":520,"line_end":520,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":159411,"byte_end":159414,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point to integer coordinates, the decimals are truncated","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":159419,"byte_end":159506,"line_start":522,"line_end":522,"column_start":5,"column_end":92}},{"value":"/ as one would expect from a simple cast, but this behavior does not always make sense","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":159511,"byte_end":159599,"line_start":523,"line_end":523,"column_start":5,"column_end":93}},{"value":"/ geometrically. Consider using round(), round_in or round_out() before casting.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":159604,"byte_end":159686,"line_start":524,"line_end":524,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":1902},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":160042,"byte_end":160048,"line_start":536,"line_end":536,"column_start":12,"column_end":18},"name":"to_f32","qualname":"<Rect<T, U>>::to_f32","value":"pub fn to_f32(&Self) -> Rect<f32, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `f32` rectangle.\n","sig":null,"attributes":[{"value":"/ Cast into an `f32` rectangle.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":159983,"byte_end":160016,"line_start":534,"line_end":534,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":160021,"byte_end":160030,"line_start":535,"line_end":535,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1903},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":160164,"byte_end":160170,"line_start":542,"line_end":542,"column_start":12,"column_end":18},"name":"to_f64","qualname":"<Rect<T, U>>::to_f64","value":"pub fn to_f64(&Self) -> Rect<f64, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `f64` rectangle.\n","sig":null,"attributes":[{"value":"/ Cast into an `f64` rectangle.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":160105,"byte_end":160138,"line_start":540,"line_end":540,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":160143,"byte_end":160152,"line_start":541,"line_end":541,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1904},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":160537,"byte_end":160545,"line_start":552,"line_end":552,"column_start":12,"column_end":20},"name":"to_usize","qualname":"<Rect<T, U>>::to_usize","value":"pub fn to_usize(&Self) -> Rect<usize, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `usize` rectangle, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `usize` rectangle, truncating decimals if any.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":160227,"byte_end":160290,"line_start":546,"line_end":546,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":160295,"byte_end":160298,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point rectangles, it is worth considering whether","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":160303,"byte_end":160383,"line_start":548,"line_end":548,"column_start":5,"column_end":85}},{"value":"/ to `round()`, `round_in()` or `round_out()` before the cast in order to","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":160388,"byte_end":160463,"line_start":549,"line_end":549,"column_start":5,"column_end":80}},{"value":"/ obtain the desired conversion behavior.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":160468,"byte_end":160511,"line_start":550,"line_end":550,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":160516,"byte_end":160525,"line_start":551,"line_end":551,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1905},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":160912,"byte_end":160918,"line_start":562,"line_end":562,"column_start":12,"column_end":18},"name":"to_u32","qualname":"<Rect<T, U>>::to_u32","value":"pub fn to_u32(&Self) -> Rect<u32, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `u32` rectangle, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `u32` rectangle, truncating decimals if any.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":160604,"byte_end":160665,"line_start":556,"line_end":556,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":160670,"byte_end":160673,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point rectangles, it is worth considering whether","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":160678,"byte_end":160758,"line_start":558,"line_end":558,"column_start":5,"column_end":85}},{"value":"/ to `round()`, `round_in()` or `round_out()` before the cast in order to","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":160763,"byte_end":160838,"line_start":559,"line_end":559,"column_start":5,"column_end":80}},{"value":"/ obtain the desired conversion behavior.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":160843,"byte_end":160886,"line_start":560,"line_end":560,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":160891,"byte_end":160900,"line_start":561,"line_end":561,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1906},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":161283,"byte_end":161289,"line_start":572,"line_end":572,"column_start":12,"column_end":18},"name":"to_u64","qualname":"<Rect<T, U>>::to_u64","value":"pub fn to_u64(&Self) -> Rect<u64, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `u64` rectangle, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `u64` rectangle, truncating decimals if any.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":160975,"byte_end":161036,"line_start":566,"line_end":566,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":161041,"byte_end":161044,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point rectangles, it is worth considering whether","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":161049,"byte_end":161129,"line_start":568,"line_end":568,"column_start":5,"column_end":85}},{"value":"/ to `round()`, `round_in()` or `round_out()` before the cast in order to","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":161134,"byte_end":161209,"line_start":569,"line_end":569,"column_start":5,"column_end":80}},{"value":"/ obtain the desired conversion behavior.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":161214,"byte_end":161257,"line_start":570,"line_end":570,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":161262,"byte_end":161271,"line_start":571,"line_end":571,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1907},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":161654,"byte_end":161660,"line_start":582,"line_end":582,"column_start":12,"column_end":18},"name":"to_i32","qualname":"<Rect<T, U>>::to_i32","value":"pub fn to_i32(&Self) -> Rect<i32, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `i32` rectangle, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `i32` rectangle, truncating decimals if any.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":161346,"byte_end":161407,"line_start":576,"line_end":576,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":161412,"byte_end":161415,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point rectangles, it is worth considering whether","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":161420,"byte_end":161500,"line_start":578,"line_end":578,"column_start":5,"column_end":85}},{"value":"/ to `round()`, `round_in()` or `round_out()` before the cast in order to","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":161505,"byte_end":161580,"line_start":579,"line_end":579,"column_start":5,"column_end":80}},{"value":"/ obtain the desired conversion behavior.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":161585,"byte_end":161628,"line_start":580,"line_end":580,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":161633,"byte_end":161642,"line_start":581,"line_end":581,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1908},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":162025,"byte_end":162031,"line_start":592,"line_end":592,"column_start":12,"column_end":18},"name":"to_i64","qualname":"<Rect<T, U>>::to_i64","value":"pub fn to_i64(&Self) -> Rect<i64, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `i64` rectangle, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `i64` rectangle, truncating decimals if any.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":161717,"byte_end":161778,"line_start":586,"line_end":586,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":161783,"byte_end":161786,"line_start":587,"line_end":587,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point rectangles, it is worth considering whether","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":161791,"byte_end":161871,"line_start":588,"line_end":588,"column_start":5,"column_end":85}},{"value":"/ to `round()`, `round_in()` or `round_out()` before the cast in order to","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":161876,"byte_end":161951,"line_start":589,"line_end":589,"column_start":5,"column_end":80}},{"value":"/ obtain the desired conversion behavior.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":161956,"byte_end":161999,"line_start":590,"line_end":590,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":162004,"byte_end":162013,"line_start":591,"line_end":591,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1912},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":162190,"byte_end":162199,"line_start":600,"line_end":600,"column_start":12,"column_end":21},"name":"is_finite","qualname":"<Rect<T, U>>::is_finite","value":"pub fn is_finite(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if all members are finite.\n","sig":null,"attributes":[{"value":"/ Returns true if all members are finite.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":162121,"byte_end":162164,"line_start":598,"line_end":598,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":162169,"byte_end":162178,"line_start":599,"line_end":599,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1916},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":163222,"byte_end":163227,"line_start":623,"line_end":623,"column_start":12,"column_end":17},"name":"round","qualname":"<Rect<T, U>>::round","value":"pub fn round(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a rectangle with edges rounded to integer coordinates, such that\n the returned rectangle has the same set of pixel centers as the original\n one.\n Edges at offset 0.5 round up.\n Suitable for most places where integral device coordinates\n are needed, but note that any translation should be applied first to\n avoid pixel rounding errors.\n Note that this is *not* rounding to nearest integer if the values are negative.\n They are always rounding as floor(n + 0.5).","sig":null,"attributes":[{"value":"/ Return a rectangle with edges rounded to integer coordinates, such that","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":162374,"byte_end":162449,"line_start":606,"line_end":606,"column_start":5,"column_end":80}},{"value":"/ the returned rectangle has the same set of pixel centers as the original","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":162454,"byte_end":162530,"line_start":607,"line_end":607,"column_start":5,"column_end":81}},{"value":"/ one.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":162535,"byte_end":162543,"line_start":608,"line_end":608,"column_start":5,"column_end":13}},{"value":"/ Edges at offset 0.5 round up.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":162548,"byte_end":162581,"line_start":609,"line_end":609,"column_start":5,"column_end":38}},{"value":"/ Suitable for most places where integral device coordinates","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":162586,"byte_end":162648,"line_start":610,"line_end":610,"column_start":5,"column_end":67}},{"value":"/ are needed, but note that any translation should be applied first to","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":162653,"byte_end":162725,"line_start":611,"line_end":611,"column_start":5,"column_end":77}},{"value":"/ avoid pixel rounding errors.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":162730,"byte_end":162762,"line_start":612,"line_end":612,"column_start":5,"column_end":37}},{"value":"/ Note that this is *not* rounding to nearest integer if the values are negative.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":162767,"byte_end":162850,"line_start":613,"line_end":613,"column_start":5,"column_end":88}},{"value":"/ They are always rounding as floor(n + 0.5).","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":162855,"byte_end":162902,"line_start":614,"line_end":614,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":162907,"byte_end":162910,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ # Usage notes","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":162915,"byte_end":162932,"line_start":616,"line_end":616,"column_start":5,"column_end":22}},{"value":"/ Note, that when using with floating-point `T` types that method can significantly","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":162937,"byte_end":163022,"line_start":617,"line_end":617,"column_start":5,"column_end":90}},{"value":"/ loose precision for large values, so if you need to call this method very often it","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":163027,"byte_end":163113,"line_start":618,"line_end":618,"column_start":5,"column_end":91}},{"value":"/ is better to use [`Box2D`].","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":163118,"byte_end":163149,"line_start":619,"line_end":619,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":163154,"byte_end":163157,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ [`Box2D`]: struct.Box2D.html","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":163162,"byte_end":163194,"line_start":621,"line_end":621,"column_start":5,"column_end":37}},{"value":"must_use","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":163199,"byte_end":163210,"line_start":622,"line_end":622,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1917},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":163758,"byte_end":163766,"line_start":637,"line_end":637,"column_start":12,"column_end":20},"name":"round_in","qualname":"<Rect<T, U>>::round_in","value":"pub fn round_in(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a rectangle with edges rounded to integer coordinates, such that\n the original rectangle contains the resulting rectangle.","sig":null,"attributes":[{"value":"/ Return a rectangle with edges rounded to integer coordinates, such that","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":163298,"byte_end":163373,"line_start":627,"line_end":627,"column_start":5,"column_end":80}},{"value":"/ the original rectangle contains the resulting rectangle.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":163378,"byte_end":163438,"line_start":628,"line_end":628,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":163443,"byte_end":163446,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/ # Usage notes","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":163451,"byte_end":163468,"line_start":630,"line_end":630,"column_start":5,"column_end":22}},{"value":"/ Note, that when using with floating-point `T` types that method can significantly","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":163473,"byte_end":163558,"line_start":631,"line_end":631,"column_start":5,"column_end":90}},{"value":"/ loose precision for large values, so if you need to call this method very often it","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":163563,"byte_end":163649,"line_start":632,"line_end":632,"column_start":5,"column_end":91}},{"value":"/ is better to use [`Box2D`].","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":163654,"byte_end":163685,"line_start":633,"line_end":633,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":163690,"byte_end":163693,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ [`Box2D`]: struct.Box2D.html","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":163698,"byte_end":163730,"line_start":635,"line_end":635,"column_start":5,"column_end":37}},{"value":"must_use","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":163735,"byte_end":163746,"line_start":636,"line_end":636,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1918},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":164307,"byte_end":164316,"line_start":651,"line_end":651,"column_start":12,"column_end":21},"name":"round_out","qualname":"<Rect<T, U>>::round_out","value":"pub fn round_out(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a rectangle with edges rounded to integer coordinates, such that\n the original rectangle is contained in the resulting rectangle.","sig":null,"attributes":[{"value":"/ Return a rectangle with edges rounded to integer coordinates, such that","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":163840,"byte_end":163915,"line_start":641,"line_end":641,"column_start":5,"column_end":80}},{"value":"/ the original rectangle is contained in the resulting rectangle.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":163920,"byte_end":163987,"line_start":642,"line_end":642,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":163992,"byte_end":163995,"line_start":643,"line_end":643,"column_start":5,"column_end":8}},{"value":"/ # Usage notes","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":164000,"byte_end":164017,"line_start":644,"line_end":644,"column_start":5,"column_end":22}},{"value":"/ Note, that when using with floating-point `T` types that method can significantly","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":164022,"byte_end":164107,"line_start":645,"line_end":645,"column_start":5,"column_end":90}},{"value":"/ loose precision for large values, so if you need to call this method very often it","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":164112,"byte_end":164198,"line_start":646,"line_end":646,"column_start":5,"column_end":91}},{"value":"/ is better to use [`Box2D`].","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":164203,"byte_end":164234,"line_start":647,"line_end":647,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":164239,"byte_end":164242,"line_start":648,"line_end":648,"column_start":5,"column_end":8}},{"value":"/ [`Box2D`]: struct.Box2D.html","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":164247,"byte_end":164279,"line_start":649,"line_end":649,"column_start":5,"column_end":37}},{"value":"must_use","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":164284,"byte_end":164295,"line_start":650,"line_end":650,"column_start":5,"column_end":16}}]},{"kind":"Function","id":{"krate":0,"index":1923},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":164619,"byte_end":164623,"line_start":666,"line_end":666,"column_start":14,"column_end":18},"name":"rect","qualname":"::rect::rect","value":"pub const fn rect<T, U>(T, T, T, T) -> Rect<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Shorthand for `Rect::new(Point2D::new(x, y), Size2D::new(w, h))`.\n","sig":null,"attributes":[{"value":"/ Shorthand for `Rect::new(Point2D::new(x, y), Size2D::new(w, h))`.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":164536,"byte_end":164605,"line_start":665,"line_end":665,"column_start":1,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":4617},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rigid.rs","byte_start":174815,"byte_end":174831,"line_start":23,"line_end":23,"column_start":12,"column_end":28},"name":"RigidTransform3D","qualname":"::rigid::RigidTransform3D","value":"RigidTransform3D { rotation, translation }","parent":null,"children":[{"krate":0,"index":4621},{"krate":0,"index":4622}],"decl_id":null,"docs":" A rigid transformation. All lengths are preserved under such a transformation.","sig":null,"attributes":[{"value":"/ A rigid transformation. All lengths are preserved under such a transformation.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rigid.rs","byte_start":174307,"byte_end":174389,"line_start":12,"line_end":12,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rigid.rs","byte_start":174390,"byte_end":174393,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rigid.rs","byte_start":174394,"byte_end":174397,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Internally, this is a rotation and a translation, with the rotation","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rigid.rs","byte_start":174398,"byte_end":174469,"line_start":15,"line_end":15,"column_start":1,"column_end":72}},{"value":"/ applied first (i.e. `Rotation * Translation`, in row-vector notation)","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rigid.rs","byte_start":174470,"byte_end":174543,"line_start":16,"line_end":16,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rigid.rs","byte_start":174544,"byte_end":174547,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This can be more efficient to use over full matrices, especially if you","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rigid.rs","byte_start":174548,"byte_end":174623,"line_start":18,"line_end":18,"column_start":1,"column_end":76}},{"value":"/ have to deal with the decomposed quantities often.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rigid.rs","byte_start":174624,"byte_end":174678,"line_start":19,"line_end":19,"column_start":1,"column_end":55}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rigid.rs","byte_start":174793,"byte_end":174803,"line_start":22,"line_end":22,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":4621},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rigid.rs","byte_start":174855,"byte_end":174863,"line_start":24,"line_end":24,"column_start":9,"column_end":17},"name":"rotation","qualname":"::rigid::RigidTransform3D::rotation","value":"rotation::Rotation3D<T, Src, Dst>","parent":{"krate":0,"index":4617},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4622},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rigid.rs","byte_start":174898,"byte_end":174909,"line_start":25,"line_end":25,"column_start":9,"column_end":20},"name":"translation","qualname":"::rigid::RigidTransform3D::translation","value":"vector::Vector3D<T, Dst>","parent":{"krate":0,"index":4617},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1953},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rigid.rs","byte_start":175094,"byte_end":175097,"line_start":31,"line_end":31,"column_start":18,"column_end":21},"name":"new","qualname":"<RigidTransform3D<T, Src, Dst>>::new","value":"pub const fn new(Rotation3D<T, Src, Dst>, Vector3D<T, Dst>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new rigid transformation, where the `rotation` applies first\n","sig":null,"attributes":[{"value":"/ Construct a new rigid transformation, where the `rotation` applies first","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rigid.rs","byte_start":174986,"byte_end":175062,"line_start":29,"line_end":29,"column_start":5,"column_end":81}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rigid.rs","byte_start":175067,"byte_end":175076,"line_start":30,"line_end":30,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1958},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rigid.rs","byte_start":175322,"byte_end":175331,"line_start":40,"line_end":40,"column_start":12,"column_end":21},"name":"cast_unit","qualname":"<RigidTransform3D<T, Src, Dst>>::cast_unit","value":"pub fn cast_unit<Src2, Dst2>(&Self) -> RigidTransform3D<T, Src2, Dst2>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1965},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rigid.rs","byte_start":175674,"byte_end":175682,"line_start":51,"line_end":51,"column_start":12,"column_end":20},"name":"identity","qualname":"<RigidTransform3D<T, Src, Dst>>::identity","value":"pub fn identity() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct an identity transform\n","sig":null,"attributes":[{"value":"/ Construct an identity transform","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rigid.rs","byte_start":175613,"byte_end":175648,"line_start":49,"line_end":49,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rigid.rs","byte_start":175653,"byte_end":175662,"line_start":50,"line_end":50,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1966},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rigid.rs","byte_start":175925,"byte_end":175942,"line_start":60,"line_end":60,"column_start":12,"column_end":29},"name":"new_from_reversed","qualname":"<RigidTransform3D<T, Src, Dst>>::new_from_reversed","value":"pub fn new_from_reversed(Vector3D<T, Src>, Rotation3D<T, Src, Dst>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new rigid transformation, where the `translation` applies first\n","sig":null,"attributes":[{"value":"/ Construct a new rigid transformation, where the `translation` applies first","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rigid.rs","byte_start":175820,"byte_end":175899,"line_start":58,"line_end":58,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rigid.rs","byte_start":175904,"byte_end":175913,"line_start":59,"line_end":59,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1967},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rigid.rs","byte_start":176500,"byte_end":176513,"line_start":81,"line_end":81,"column_start":12,"column_end":25},"name":"from_rotation","qualname":"<RigidTransform3D<T, Src, Dst>>::from_rotation","value":"pub fn from_rotation(Rotation3D<T, Src, Dst>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rigid.rs","byte_start":176479,"byte_end":176488,"line_start":80,"line_end":80,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1968},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rigid.rs","byte_start":176681,"byte_end":176697,"line_start":89,"line_end":89,"column_start":12,"column_end":28},"name":"from_translation","qualname":"<RigidTransform3D<T, Src, Dst>>::from_translation","value":"pub fn from_translation(Vector3D<T, Dst>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rigid.rs","byte_start":176660,"byte_end":176669,"line_start":88,"line_end":88,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1969},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rigid.rs","byte_start":177018,"byte_end":177036,"line_start":100,"line_end":100,"column_start":12,"column_end":30},"name":"decompose_reversed","qualname":"<RigidTransform3D<T, Src, Dst>>::decompose_reversed","value":"pub fn decompose_reversed(&Self)\n-> (Vector3D<T, Src>, Rotation3D<T, Src, Dst>)","parent":null,"children":[],"decl_id":null,"docs":" Decompose this into a translation and an rotation to be applied in the opposite order","sig":null,"attributes":[{"value":"/ Decompose this into a translation and an rotation to be applied in the opposite order","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rigid.rs","byte_start":176846,"byte_end":176935,"line_start":96,"line_end":96,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rigid.rs","byte_start":176940,"byte_end":176943,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ i.e., the translation is applied _first_","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rigid.rs","byte_start":176948,"byte_end":176992,"line_start":98,"line_end":98,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rigid.rs","byte_start":176997,"byte_end":177006,"line_start":99,"line_end":99,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1970},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rigid.rs","byte_start":177648,"byte_end":177652,"line_start":117,"line_end":117,"column_start":12,"column_end":16},"name":"then","qualname":"<RigidTransform3D<T, Src, Dst>>::then","value":"pub fn then<Dst2>(&Self, &RigidTransform3D<T, Dst, Dst2>)\n-> RigidTransform3D<T, Src, Dst2>","parent":null,"children":[],"decl_id":null,"docs":" Returns the multiplication of the two transforms such that\n other's transformation applies after self's transformation.","sig":null,"attributes":[{"value":"/ Returns the multiplication of the two transforms such that","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rigid.rs","byte_start":177418,"byte_end":177480,"line_start":112,"line_end":112,"column_start":5,"column_end":67}},{"value":"/ other's transformation applies after self's transformation.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rigid.rs","byte_start":177485,"byte_end":177548,"line_start":113,"line_end":113,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rigid.rs","byte_start":177553,"byte_end":177556,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ i.e., this produces `self * other` in row-vector notation","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rigid.rs","byte_start":177561,"byte_end":177622,"line_start":115,"line_end":115,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rigid.rs","byte_start":177627,"byte_end":177636,"line_start":116,"line_end":116,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1972},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rigid.rs","byte_start":178542,"byte_end":178549,"line_start":144,"line_end":144,"column_start":12,"column_end":19},"name":"inverse","qualname":"<RigidTransform3D<T, Src, Dst>>::inverse","value":"pub fn inverse(&Self) -> RigidTransform3D<T, Dst, Src>","parent":null,"children":[],"decl_id":null,"docs":" Inverts the transformation\n","sig":null,"attributes":[{"value":"/ Inverts the transformation","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rigid.rs","byte_start":178486,"byte_end":178516,"line_start":142,"line_end":142,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rigid.rs","byte_start":178521,"byte_end":178530,"line_start":143,"line_end":143,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1973},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rigid.rs","byte_start":179100,"byte_end":179112,"line_start":160,"line_end":160,"column_start":12,"column_end":24},"name":"to_transform","qualname":"<RigidTransform3D<T, Src, Dst>>::to_transform","value":"pub fn to_transform(&Self) -> Transform3D<T, Src, Dst> where T: Trig","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1974},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rigid.rs","byte_start":179348,"byte_end":179358,"line_start":169,"line_end":169,"column_start":12,"column_end":22},"name":"to_untyped","qualname":"<RigidTransform3D<T, Src, Dst>>::to_untyped","value":"pub fn to_untyped(&Self) -> RigidTransform3D<T, UnknownUnit, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":" Drop the units, preserving only the numeric value.\n","sig":null,"attributes":[{"value":"/ Drop the units, preserving only the numeric value.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rigid.rs","byte_start":179268,"byte_end":179322,"line_start":167,"line_end":167,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rigid.rs","byte_start":179327,"byte_end":179336,"line_start":168,"line_end":168,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1975},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rigid.rs","byte_start":179633,"byte_end":179645,"line_start":178,"line_end":178,"column_start":12,"column_end":24},"name":"from_untyped","qualname":"<RigidTransform3D<T, Src, Dst>>::from_untyped","value":"pub fn from_untyped(&RigidTransform3D<T, UnknownUnit, UnknownUnit>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Tag a unitless value with units.\n","sig":null,"attributes":[{"value":"/ Tag a unitless value with units.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rigid.rs","byte_start":179571,"byte_end":179607,"line_start":176,"line_end":176,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rigid.rs","byte_start":179612,"byte_end":179621,"line_start":177,"line_end":177,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":2070},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":183912,"byte_end":183922,"line_start":33,"line_end":33,"column_start":12,"column_end":22},"name":"Rotation2D","qualname":"::rotation::Rotation2D","value":"Rotation2D { angle, _unit }","parent":null,"children":[{"krate":0,"index":2074},{"krate":0,"index":2075}],"decl_id":null,"docs":" A transform that can represent rotations in 2d, represented as an angle in radians.\n","sig":null,"attributes":[{"value":"/ A transform that can represent rotations in 2d, represented as an angle in radians.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":183583,"byte_end":183670,"line_start":23,"line_end":23,"column_start":1,"column_end":88}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":183671,"byte_end":183681,"line_start":24,"line_end":24,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":2074},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":183971,"byte_end":183976,"line_start":35,"line_end":35,"column_start":9,"column_end":14},"name":"angle","qualname":"::rotation::Rotation2D::angle","value":"T","parent":{"krate":0,"index":2070},"children":[],"decl_id":null,"docs":" Angle in radians\n","sig":null,"attributes":[{"value":"/ Angle in radians","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":183942,"byte_end":183962,"line_start":34,"line_end":34,"column_start":5,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":2075},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":184008,"byte_end":184013,"line_start":37,"line_end":37,"column_start":9,"column_end":14},"name":"_unit","qualname":"::rotation::Rotation2D::_unit","value":"core::marker::PhantomData<(Src, Dst)>","parent":{"krate":0,"index":2070},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2104},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":184823,"byte_end":184826,"line_start":74,"line_end":74,"column_start":12,"column_end":15},"name":"new","qualname":"<Rotation2D<T, Src, Dst>>::new","value":"pub fn new(Angle<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a rotation from an angle in radians.\n","sig":null,"attributes":[{"value":"/ Creates a rotation from an angle in radians.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":184749,"byte_end":184797,"line_start":72,"line_end":72,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":184802,"byte_end":184811,"line_start":73,"line_end":73,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2105},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":185022,"byte_end":185029,"line_start":82,"line_end":82,"column_start":12,"column_end":19},"name":"radians","qualname":"<Rotation2D<T, Src, Dst>>::radians","value":"pub fn radians(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a rotation from an angle in radians.\n","sig":null,"attributes":[{"value":"/ Creates a rotation from an angle in radians.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":184962,"byte_end":185010,"line_start":81,"line_end":81,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2106},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":185162,"byte_end":185170,"line_start":88,"line_end":88,"column_start":12,"column_end":20},"name":"identity","qualname":"<Rotation2D<T, Src, Dst>>::identity","value":"pub fn identity() -> Self where T: Zero","parent":null,"children":[],"decl_id":null,"docs":" Creates the identity rotation.\n","sig":null,"attributes":[{"value":"/ Creates the identity rotation.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":185102,"byte_end":185136,"line_start":86,"line_end":86,"column_start":5,"column_end":39}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":185141,"byte_end":185150,"line_start":87,"line_end":87,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2111},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":185753,"byte_end":185762,"line_start":114,"line_end":114,"column_start":12,"column_end":21},"name":"cast_unit","qualname":"<Rotation2D<T, Src, Dst>>::cast_unit","value":"pub fn cast_unit<Src2, Dst2>(&Self) -> Rotation2D<T, Src2, Dst2>","parent":null,"children":[],"decl_id":null,"docs":" Cast the unit, preserving the numeric value.","sig":null,"attributes":[{"value":"/ Cast the unit, preserving the numeric value.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":185310,"byte_end":185358,"line_start":97,"line_end":97,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":185363,"byte_end":185366,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":185371,"byte_end":185384,"line_start":99,"line_end":99,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":185389,"byte_end":185392,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":185397,"byte_end":185408,"line_start":101,"line_end":101,"column_start":5,"column_end":16}},{"value":"/ # use euclid::Rotation2D;","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":185413,"byte_end":185442,"line_start":102,"line_end":102,"column_start":5,"column_end":34}},{"value":"/ enum Local {}","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":185447,"byte_end":185464,"line_start":103,"line_end":103,"column_start":5,"column_end":22}},{"value":"/ enum World {}","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":185469,"byte_end":185486,"line_start":104,"line_end":104,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":185491,"byte_end":185494,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ enum Local2 {}","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":185499,"byte_end":185517,"line_start":106,"line_end":106,"column_start":5,"column_end":23}},{"value":"/ enum World2 {}","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":185522,"byte_end":185540,"line_start":107,"line_end":107,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":185545,"byte_end":185548,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ let to_world: Rotation2D<_, Local, World> = Rotation2D::radians(42);","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":185553,"byte_end":185625,"line_start":109,"line_end":109,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":185630,"byte_end":185633,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(to_world.angle, to_world.cast_unit::<Local2, World2>().angle);","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":185638,"byte_end":185715,"line_start":111,"line_end":111,"column_start":5,"column_end":82}},{"value":"/ ```","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":185720,"byte_end":185727,"line_start":112,"line_end":112,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":185732,"byte_end":185741,"line_start":113,"line_end":113,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2114},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":186296,"byte_end":186306,"line_start":135,"line_end":135,"column_start":12,"column_end":22},"name":"to_untyped","qualname":"<Rotation2D<T, Src, Dst>>::to_untyped","value":"pub fn to_untyped(&Self) -> Rotation2D<T, UnknownUnit, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":" Drop the units, preserving only the numeric value.","sig":null,"attributes":[{"value":"/ Drop the units, preserving only the numeric value.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":185918,"byte_end":185972,"line_start":121,"line_end":121,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":185977,"byte_end":185980,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":185985,"byte_end":185998,"line_start":123,"line_end":123,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":186003,"byte_end":186006,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":186011,"byte_end":186022,"line_start":125,"line_end":125,"column_start":5,"column_end":16}},{"value":"/ # use euclid::Rotation2D;","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":186027,"byte_end":186056,"line_start":126,"line_end":126,"column_start":5,"column_end":34}},{"value":"/ enum Local {}","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":186061,"byte_end":186078,"line_start":127,"line_end":127,"column_start":5,"column_end":22}},{"value":"/ enum World {}","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":186083,"byte_end":186100,"line_start":128,"line_end":128,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":186105,"byte_end":186108,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ let to_world: Rotation2D<_, Local, World> = Rotation2D::radians(42);","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":186113,"byte_end":186185,"line_start":130,"line_end":130,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":186190,"byte_end":186193,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(to_world.angle, to_world.to_untyped().angle);","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":186198,"byte_end":186258,"line_start":132,"line_end":132,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":186263,"byte_end":186270,"line_start":133,"line_end":133,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":186275,"byte_end":186284,"line_start":134,"line_end":134,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2115},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":186818,"byte_end":186830,"line_start":154,"line_end":154,"column_start":12,"column_end":24},"name":"from_untyped","qualname":"<Rotation2D<T, Src, Dst>>::from_untyped","value":"pub fn from_untyped(&Rotation2D<T, UnknownUnit, UnknownUnit>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Tag a unitless value with units.","sig":null,"attributes":[{"value":"/ Tag a unitless value with units.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":186395,"byte_end":186431,"line_start":139,"line_end":139,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":186436,"byte_end":186439,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":186444,"byte_end":186457,"line_start":141,"line_end":141,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":186462,"byte_end":186465,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":186470,"byte_end":186481,"line_start":143,"line_end":143,"column_start":5,"column_end":16}},{"value":"/ # use euclid::Rotation2D;","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":186486,"byte_end":186515,"line_start":144,"line_end":144,"column_start":5,"column_end":34}},{"value":"/ use euclid::UnknownUnit;","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":186520,"byte_end":186548,"line_start":145,"line_end":145,"column_start":5,"column_end":33}},{"value":"/ enum Local {}","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":186553,"byte_end":186570,"line_start":146,"line_end":146,"column_start":5,"column_end":22}},{"value":"/ enum World {}","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":186575,"byte_end":186592,"line_start":147,"line_end":147,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":186597,"byte_end":186600,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ let rot: Rotation2D<_, UnknownUnit, UnknownUnit> = Rotation2D::radians(42);","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":186605,"byte_end":186684,"line_start":149,"line_end":149,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":186689,"byte_end":186692,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(rot.angle, Rotation2D::<_, Local, World>::from_untyped(&rot).angle);","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":186697,"byte_end":186780,"line_start":151,"line_end":151,"column_start":5,"column_end":88}},{"value":"/ ```","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":186785,"byte_end":186792,"line_start":152,"line_end":152,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":186797,"byte_end":186806,"line_start":153,"line_end":153,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2120},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":187050,"byte_end":187059,"line_start":164,"line_end":164,"column_start":12,"column_end":21},"name":"get_angle","qualname":"<Rotation2D<T, Src, Dst>>::get_angle","value":"pub fn get_angle(&Self) -> Angle<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns self.angle as a strongly typed `Angle<T>`.\n","sig":null,"attributes":[{"value":"/ Returns self.angle as a strongly typed `Angle<T>`.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":186984,"byte_end":187038,"line_start":163,"line_end":163,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":2125},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":187274,"byte_end":187279,"line_start":172,"line_end":172,"column_start":12,"column_end":17},"name":"to_3d","qualname":"<Rotation2D<T, Src, Dst>>::to_3d","value":"pub fn to_3d(&Self) -> Rotation3D<T, Src, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Creates a 3d rotation (around the z axis) from this 2d rotation.\n","sig":null,"attributes":[{"value":"/ Creates a 3d rotation (around the z axis) from this 2d rotation.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":187180,"byte_end":187248,"line_start":170,"line_end":170,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":187253,"byte_end":187262,"line_start":171,"line_end":171,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2126},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":187441,"byte_end":187448,"line_start":178,"line_end":178,"column_start":12,"column_end":19},"name":"inverse","qualname":"<Rotation2D<T, Src, Dst>>::inverse","value":"pub fn inverse(&Self) -> Rotation2D<T, Dst, Src>","parent":null,"children":[],"decl_id":null,"docs":" Returns the inverse of this rotation.\n","sig":null,"attributes":[{"value":"/ Returns the inverse of this rotation.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":187374,"byte_end":187415,"line_start":176,"line_end":176,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":187420,"byte_end":187429,"line_start":177,"line_end":177,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2127},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":187644,"byte_end":187648,"line_start":184,"line_end":184,"column_start":12,"column_end":16},"name":"then","qualname":"<Rotation2D<T, Src, Dst>>::then","value":"pub fn then<NewSrc>(&Self, &Rotation2D<T, NewSrc, Src>)\n-> Rotation2D<T, NewSrc, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Returns a rotation representing the other rotation followed by this rotation.\n","sig":null,"attributes":[{"value":"/ Returns a rotation representing the other rotation followed by this rotation.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":187537,"byte_end":187618,"line_start":182,"line_end":182,"column_start":5,"column_end":86}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":187623,"byte_end":187632,"line_start":183,"line_end":183,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2129},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":188005,"byte_end":188020,"line_start":195,"line_end":195,"column_start":12,"column_end":27},"name":"transform_point","qualname":"<Rotation2D<T, Src, Dst>>::transform_point","value":"pub fn transform_point(&Self, Point2D<T, Src>) -> Point2D<T, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Returns the given 2d point transformed by this rotation.","sig":null,"attributes":[{"value":"/ Returns the given 2d point transformed by this rotation.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":187820,"byte_end":187880,"line_start":191,"line_end":191,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":187885,"byte_end":187888,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ The input point must be use the unit Src, and the returned point has the unit Dst.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":187893,"byte_end":187979,"line_start":193,"line_end":193,"column_start":5,"column_end":91}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":187984,"byte_end":187993,"line_start":194,"line_end":194,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2130},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":188400,"byte_end":188416,"line_start":204,"line_end":204,"column_start":12,"column_end":28},"name":"transform_vector","qualname":"<Rotation2D<T, Src, Dst>>::transform_vector","value":"pub fn transform_vector(&Self, Vector2D<T, Src>) -> Vector2D<T, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Returns the given 2d vector transformed by this rotation.","sig":null,"attributes":[{"value":"/ Returns the given 2d vector transformed by this rotation.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":188214,"byte_end":188275,"line_start":200,"line_end":200,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":188280,"byte_end":188283,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ The input point must be use the unit Src, and the returned point has the unit Dst.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":188288,"byte_end":188374,"line_start":202,"line_end":202,"column_start":5,"column_end":91}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":188379,"byte_end":188388,"line_start":203,"line_end":203,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2135},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":188757,"byte_end":188769,"line_start":215,"line_end":215,"column_start":12,"column_end":24},"name":"to_transform","qualname":"<Rotation2D<T, Src, Dst>>::to_transform","value":"pub fn to_transform(&Self) -> Transform2D<T, Src, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Returns the matrix representation of this rotation.\n","sig":null,"attributes":[{"value":"/ Returns the matrix representation of this rotation.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":188676,"byte_end":188731,"line_start":213,"line_end":213,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":188736,"byte_end":188745,"line_start":214,"line_end":214,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":2136},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":189615,"byte_end":189625,"line_start":238,"line_end":238,"column_start":12,"column_end":22},"name":"Rotation3D","qualname":"::rotation::Rotation3D","value":"Rotation3D { i, j, k, r, _unit }","parent":null,"children":[{"krate":0,"index":2140},{"krate":0,"index":2141},{"krate":0,"index":2142},{"krate":0,"index":2143},{"krate":0,"index":2144}],"decl_id":null,"docs":" A transform that can represent rotations in 3d, represented as a quaternion.","sig":null,"attributes":[{"value":"/ A transform that can represent rotations in 3d, represented as a quaternion.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":188864,"byte_end":188944,"line_start":220,"line_end":220,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":188945,"byte_end":188948,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/ Most methods expect the quaternion to be normalized.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":188949,"byte_end":189005,"line_start":222,"line_end":222,"column_start":1,"column_end":57}},{"value":"/ When in doubt, use `unit_quaternion` instead of `quaternion` to create","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":189006,"byte_end":189080,"line_start":223,"line_end":223,"column_start":1,"column_end":75}},{"value":"/ a rotation as the former will ensure that its result is normalized.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":189081,"byte_end":189152,"line_start":224,"line_end":224,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":189153,"byte_end":189156,"line_start":225,"line_end":225,"column_start":1,"column_end":4}},{"value":"/ Some people use the `x, y, z, w` (or `w, x, y, z`) notations. The equivalence is","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":189157,"byte_end":189241,"line_start":226,"line_end":226,"column_start":1,"column_end":85}},{"value":"/ as follows: `x -> i`, `y -> j`, `z -> k`, `w -> r`.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":189242,"byte_end":189297,"line_start":227,"line_end":227,"column_start":1,"column_end":56}},{"value":"/ The memory layout of this type corresponds to the `x, y, z, w` notation","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":189298,"byte_end":189373,"line_start":228,"line_end":228,"column_start":1,"column_end":76}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":189374,"byte_end":189384,"line_start":229,"line_end":229,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":2140},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":189707,"byte_end":189708,"line_start":240,"line_end":240,"column_start":9,"column_end":10},"name":"i","qualname":"::rotation::Rotation3D::i","value":"T","parent":{"krate":0,"index":2136},"children":[],"decl_id":null,"docs":" Component multiplied by the imaginary number `i`.\n","sig":null,"attributes":[{"value":"/ Component multiplied by the imaginary number `i`.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":189645,"byte_end":189698,"line_start":239,"line_end":239,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":2141},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":189779,"byte_end":189780,"line_start":242,"line_end":242,"column_start":9,"column_end":10},"name":"j","qualname":"::rotation::Rotation3D::j","value":"T","parent":{"krate":0,"index":2136},"children":[],"decl_id":null,"docs":" Component multiplied by the imaginary number `j`.\n","sig":null,"attributes":[{"value":"/ Component multiplied by the imaginary number `j`.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":189717,"byte_end":189770,"line_start":241,"line_end":241,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":2142},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":189851,"byte_end":189852,"line_start":244,"line_end":244,"column_start":9,"column_end":10},"name":"k","qualname":"::rotation::Rotation3D::k","value":"T","parent":{"krate":0,"index":2136},"children":[],"decl_id":null,"docs":" Component multiplied by the imaginary number `k`.\n","sig":null,"attributes":[{"value":"/ Component multiplied by the imaginary number `k`.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":189789,"byte_end":189842,"line_start":243,"line_end":243,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":2143},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":189888,"byte_end":189889,"line_start":246,"line_end":246,"column_start":9,"column_end":10},"name":"r","qualname":"::rotation::Rotation3D::r","value":"T","parent":{"krate":0,"index":2136},"children":[],"decl_id":null,"docs":" The real part.\n","sig":null,"attributes":[{"value":"/ The real part.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":189861,"byte_end":189879,"line_start":245,"line_end":245,"column_start":5,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":2144},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":189921,"byte_end":189926,"line_start":248,"line_end":248,"column_start":9,"column_end":14},"name":"_unit","qualname":"::rotation::Rotation3D::_unit","value":"core::marker::PhantomData<(Src, Dst)>","parent":{"krate":0,"index":2136},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2173},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":191320,"byte_end":191330,"line_start":299,"line_end":299,"column_start":12,"column_end":22},"name":"quaternion","qualname":"<Rotation3D<T, Src, Dst>>::quaternion","value":"pub fn quaternion(T, T, T, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a rotation around from a quaternion representation.","sig":null,"attributes":[{"value":"/ Creates a rotation around from a quaternion representation.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":190870,"byte_end":190933,"line_start":289,"line_end":289,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":190938,"byte_end":190941,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ The parameters are a, b, c and r compose the quaternion `a*i + b*j + c*k + r`","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":190946,"byte_end":191027,"line_start":291,"line_end":291,"column_start":5,"column_end":86}},{"value":"/ where `a`, `b` and `c` describe the vector part and the last parameter `r` is","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":191032,"byte_end":191113,"line_start":292,"line_end":292,"column_start":5,"column_end":86}},{"value":"/ the real part.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":191118,"byte_end":191136,"line_start":293,"line_end":293,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":191141,"byte_end":191144,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ The resulting quaternion is not necessarily normalized. See [`unit_quaternion`].","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":191149,"byte_end":191233,"line_start":295,"line_end":295,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":191238,"byte_end":191241,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ [`unit_quaternion`]: #method.unit_quaternion","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":191246,"byte_end":191294,"line_start":297,"line_end":297,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":191299,"byte_end":191308,"line_start":298,"line_end":298,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2174},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":191568,"byte_end":191576,"line_start":311,"line_end":311,"column_start":12,"column_end":20},"name":"identity","qualname":"<Rotation3D<T, Src, Dst>>::identity","value":"pub fn identity() -> Self where T: Zero + One","parent":null,"children":[],"decl_id":null,"docs":" Creates the identity rotation.\n","sig":null,"attributes":[{"value":"/ Creates the identity rotation.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":191508,"byte_end":191542,"line_start":309,"line_end":309,"column_start":5,"column_end":39}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":191547,"byte_end":191556,"line_start":310,"line_end":310,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2179},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":191853,"byte_end":191864,"line_start":325,"line_end":325,"column_start":12,"column_end":23},"name":"vector_part","qualname":"<Rotation3D<T, Src, Dst>>::vector_part","value":"pub fn vector_part(&Self) -> Vector3D<T, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":" Returns the vector part (i, j, k) of this quaternion.\n","sig":null,"attributes":[{"value":"/ Returns the vector part (i, j, k) of this quaternion.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":191770,"byte_end":191827,"line_start":323,"line_end":323,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":191832,"byte_end":191841,"line_start":324,"line_end":324,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2180},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":192618,"byte_end":192627,"line_start":349,"line_end":349,"column_start":12,"column_end":21},"name":"cast_unit","qualname":"<Rotation3D<T, Src, Dst>>::cast_unit","value":"pub fn cast_unit<Src2, Dst2>(&Self) -> Rotation3D<T, Src2, Dst2>","parent":null,"children":[],"decl_id":null,"docs":" Cast the unit, preserving the numeric value.","sig":null,"attributes":[{"value":"/ Cast the unit, preserving the numeric value.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":191950,"byte_end":191998,"line_start":329,"line_end":329,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":192003,"byte_end":192006,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":192011,"byte_end":192024,"line_start":331,"line_end":331,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":192029,"byte_end":192032,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":192037,"byte_end":192048,"line_start":333,"line_end":333,"column_start":5,"column_end":16}},{"value":"/ # use euclid::Rotation3D;","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":192053,"byte_end":192082,"line_start":334,"line_end":334,"column_start":5,"column_end":34}},{"value":"/ enum Local {}","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":192087,"byte_end":192104,"line_start":335,"line_end":335,"column_start":5,"column_end":22}},{"value":"/ enum World {}","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":192109,"byte_end":192126,"line_start":336,"line_end":336,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":192131,"byte_end":192134,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ enum Local2 {}","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":192139,"byte_end":192157,"line_start":338,"line_end":338,"column_start":5,"column_end":23}},{"value":"/ enum World2 {}","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":192162,"byte_end":192180,"line_start":339,"line_end":339,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":192185,"byte_end":192188,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ let to_world: Rotation3D<_, Local, World> = Rotation3D::quaternion(1, 2, 3, 4);","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":192193,"byte_end":192276,"line_start":341,"line_end":341,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":192281,"byte_end":192284,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(to_world.i, to_world.cast_unit::<Local2, World2>().i);","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":192289,"byte_end":192358,"line_start":343,"line_end":343,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(to_world.j, to_world.cast_unit::<Local2, World2>().j);","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":192363,"byte_end":192432,"line_start":344,"line_end":344,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(to_world.k, to_world.cast_unit::<Local2, World2>().k);","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":192437,"byte_end":192506,"line_start":345,"line_end":345,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(to_world.r, to_world.cast_unit::<Local2, World2>().r);","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":192511,"byte_end":192580,"line_start":346,"line_end":346,"column_start":5,"column_end":74}},{"value":"/ ```","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":192585,"byte_end":192592,"line_start":347,"line_end":347,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":192597,"byte_end":192606,"line_start":348,"line_end":348,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2183},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":193396,"byte_end":193406,"line_start":376,"line_end":376,"column_start":12,"column_end":22},"name":"to_untyped","qualname":"<Rotation3D<T, Src, Dst>>::to_untyped","value":"pub fn to_untyped(&Self) -> Rotation3D<T, UnknownUnit, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":" Drop the units, preserving only the numeric value.","sig":null,"attributes":[{"value":"/ Drop the units, preserving only the numeric value.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":192844,"byte_end":192898,"line_start":359,"line_end":359,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":192903,"byte_end":192906,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":192911,"byte_end":192924,"line_start":361,"line_end":361,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":192929,"byte_end":192932,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":192937,"byte_end":192948,"line_start":363,"line_end":363,"column_start":5,"column_end":16}},{"value":"/ # use euclid::Rotation3D;","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":192953,"byte_end":192982,"line_start":364,"line_end":364,"column_start":5,"column_end":34}},{"value":"/ enum Local {}","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":192987,"byte_end":193004,"line_start":365,"line_end":365,"column_start":5,"column_end":22}},{"value":"/ enum World {}","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":193009,"byte_end":193026,"line_start":366,"line_end":366,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":193031,"byte_end":193034,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ let to_world: Rotation3D<_, Local, World> = Rotation3D::quaternion(1, 2, 3, 4);","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":193039,"byte_end":193122,"line_start":368,"line_end":368,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":193127,"byte_end":193130,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(to_world.i, to_world.to_untyped().i);","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":193135,"byte_end":193187,"line_start":370,"line_end":370,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(to_world.j, to_world.to_untyped().j);","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":193192,"byte_end":193244,"line_start":371,"line_end":371,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(to_world.k, to_world.to_untyped().k);","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":193249,"byte_end":193301,"line_start":372,"line_end":372,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(to_world.r, to_world.to_untyped().r);","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":193306,"byte_end":193358,"line_start":373,"line_end":373,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":193363,"byte_end":193370,"line_start":374,"line_end":374,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":193375,"byte_end":193384,"line_start":375,"line_end":375,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2184},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":194161,"byte_end":194173,"line_start":398,"line_end":398,"column_start":12,"column_end":24},"name":"from_untyped","qualname":"<Rotation3D<T, Src, Dst>>::from_untyped","value":"pub fn from_untyped(&Rotation3D<T, UnknownUnit, UnknownUnit>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Tag a unitless value with units.","sig":null,"attributes":[{"value":"/ Tag a unitless value with units.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":193495,"byte_end":193531,"line_start":380,"line_end":380,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":193536,"byte_end":193539,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":193544,"byte_end":193557,"line_start":382,"line_end":382,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":193562,"byte_end":193565,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":193570,"byte_end":193581,"line_start":384,"line_end":384,"column_start":5,"column_end":16}},{"value":"/ # use euclid::Rotation3D;","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":193586,"byte_end":193615,"line_start":385,"line_end":385,"column_start":5,"column_end":34}},{"value":"/ use euclid::UnknownUnit;","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":193620,"byte_end":193648,"line_start":386,"line_end":386,"column_start":5,"column_end":33}},{"value":"/ enum Local {}","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":193653,"byte_end":193670,"line_start":387,"line_end":387,"column_start":5,"column_end":22}},{"value":"/ enum World {}","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":193675,"byte_end":193692,"line_start":388,"line_end":388,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":193697,"byte_end":193700,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ let rot: Rotation3D<_, UnknownUnit, UnknownUnit> = Rotation3D::quaternion(1, 2, 3, 4);","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":193705,"byte_end":193795,"line_start":390,"line_end":390,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":193800,"byte_end":193803,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(rot.i, Rotation3D::<_, Local, World>::from_untyped(&rot).i);","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":193808,"byte_end":193883,"line_start":392,"line_end":392,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(rot.j, Rotation3D::<_, Local, World>::from_untyped(&rot).j);","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":193888,"byte_end":193963,"line_start":393,"line_end":393,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(rot.k, Rotation3D::<_, Local, World>::from_untyped(&rot).k);","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":193968,"byte_end":194043,"line_start":394,"line_end":394,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(rot.r, Rotation3D::<_, Local, World>::from_untyped(&rot).r);","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":194048,"byte_end":194123,"line_start":395,"line_end":395,"column_start":5,"column_end":80}},{"value":"/ ```","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":194128,"byte_end":194135,"line_start":396,"line_end":396,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":194140,"byte_end":194149,"line_start":397,"line_end":397,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2189},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":194660,"byte_end":194675,"line_start":413,"line_end":413,"column_start":12,"column_end":27},"name":"unit_quaternion","qualname":"<Rotation3D<T, Src, Dst>>::unit_quaternion","value":"pub fn unit_quaternion(T, T, T, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a rotation around from a quaternion representation and normalizes it.","sig":null,"attributes":[{"value":"/ Creates a rotation around from a quaternion representation and normalizes it.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":194328,"byte_end":194409,"line_start":407,"line_end":407,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":194414,"byte_end":194417,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ The parameters are a, b, c and r compose the quaternion `a*i + b*j + c*k + r`","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":194422,"byte_end":194503,"line_start":409,"line_end":409,"column_start":5,"column_end":86}},{"value":"/ before normalization, where `a`, `b` and `c` describe the vector part and the","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":194508,"byte_end":194589,"line_start":410,"line_end":410,"column_start":5,"column_end":86}},{"value":"/ last parameter `r` is the real part.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":194594,"byte_end":194634,"line_start":411,"line_end":411,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":194639,"byte_end":194648,"line_start":412,"line_end":412,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2190},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":194825,"byte_end":194836,"line_start":418,"line_end":418,"column_start":12,"column_end":23},"name":"around_axis","qualname":"<Rotation3D<T, Src, Dst>>::around_axis","value":"pub fn around_axis(Vector3D<T, Src>, Angle<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a rotation around a given axis.\n","sig":null,"attributes":[{"value":"/ Creates a rotation around a given axis.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":194770,"byte_end":194813,"line_start":417,"line_end":417,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2191},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":195154,"byte_end":195162,"line_start":426,"line_end":426,"column_start":12,"column_end":20},"name":"around_x","qualname":"<Rotation3D<T, Src, Dst>>::around_x","value":"pub fn around_x(Angle<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a rotation around the x axis.\n","sig":null,"attributes":[{"value":"/ Creates a rotation around the x axis.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":195101,"byte_end":195142,"line_start":425,"line_end":425,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":2192},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":195427,"byte_end":195435,"line_start":434,"line_end":434,"column_start":12,"column_end":20},"name":"around_y","qualname":"<Rotation3D<T, Src, Dst>>::around_y","value":"pub fn around_y(Angle<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a rotation around the y axis.\n","sig":null,"attributes":[{"value":"/ Creates a rotation around the y axis.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":195374,"byte_end":195415,"line_start":433,"line_end":433,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":2193},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":195700,"byte_end":195708,"line_start":442,"line_end":442,"column_start":12,"column_end":20},"name":"around_z","qualname":"<Rotation3D<T, Src, Dst>>::around_z","value":"pub fn around_z(Angle<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a rotation around the z axis.\n","sig":null,"attributes":[{"value":"/ Creates a rotation around the z axis.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":195647,"byte_end":195688,"line_start":441,"line_end":441,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":2194},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":196268,"byte_end":196273,"line_start":456,"line_end":456,"column_start":12,"column_end":17},"name":"euler","qualname":"<Rotation3D<T, Src, Dst>>::euler","value":"pub fn euler(Angle<T>, Angle<T>, Angle<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a rotation from Euler angles.","sig":null,"attributes":[{"value":"/ Creates a rotation from Euler angles.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":195920,"byte_end":195961,"line_start":449,"line_end":449,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":195966,"byte_end":195969,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ The rotations are applied in roll then pitch then yaw order.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":195974,"byte_end":196038,"line_start":451,"line_end":451,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":196043,"byte_end":196046,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/  - Roll (also called bank) is a rotation around the x axis.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":196051,"byte_end":196114,"line_start":453,"line_end":453,"column_start":5,"column_end":68}},{"value":"/  - Pitch (also called bearing) is a rotation around the y axis.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":196119,"byte_end":196186,"line_start":454,"line_end":454,"column_start":5,"column_end":72}},{"value":"/  - Yaw (also called heading) is a rotation around the z axis.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":196191,"byte_end":196256,"line_start":455,"line_end":455,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2195},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":196839,"byte_end":196846,"line_start":473,"line_end":473,"column_start":12,"column_end":19},"name":"inverse","qualname":"<Rotation3D<T, Src, Dst>>::inverse","value":"pub fn inverse(&Self) -> Rotation3D<T, Dst, Src>","parent":null,"children":[],"decl_id":null,"docs":" Returns the inverse of this rotation.\n","sig":null,"attributes":[{"value":"/ Returns the inverse of this rotation.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":196772,"byte_end":196813,"line_start":471,"line_end":471,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":196818,"byte_end":196827,"line_start":472,"line_end":472,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2196},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":197027,"byte_end":197031,"line_start":479,"line_end":479,"column_start":12,"column_end":16},"name":"norm","qualname":"<Rotation3D<T, Src, Dst>>::norm","value":"pub fn norm(&Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Computes the norm of this quaternion.\n","sig":null,"attributes":[{"value":"/ Computes the norm of this quaternion.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":196960,"byte_end":197001,"line_start":477,"line_end":477,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":197006,"byte_end":197015,"line_start":478,"line_end":478,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2197},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":197166,"byte_end":197177,"line_start":485,"line_end":485,"column_start":12,"column_end":23},"name":"square_norm","qualname":"<Rotation3D<T, Src, Dst>>::square_norm","value":"pub fn square_norm(&Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Computes the squared norm of this quaternion.\n","sig":null,"attributes":[{"value":"/ Computes the squared norm of this quaternion.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":197091,"byte_end":197140,"line_start":483,"line_end":483,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":197145,"byte_end":197154,"line_start":484,"line_end":484,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2198},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":197445,"byte_end":197454,"line_start":493,"line_end":493,"column_start":12,"column_end":21},"name":"normalize","qualname":"<Rotation3D<T, Src, Dst>>::normalize","value":"pub fn normalize(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a [unit quaternion] from this one.","sig":null,"attributes":[{"value":"/ Returns a [unit quaternion] from this one.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":197281,"byte_end":197327,"line_start":489,"line_end":489,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":197332,"byte_end":197335,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ [unit quaternion]: https://en.wikipedia.org/wiki/Quaternion#Unit_quaternion","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":197340,"byte_end":197419,"line_start":491,"line_end":491,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":197424,"byte_end":197433,"line_start":492,"line_end":492,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2199},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":197658,"byte_end":197671,"line_start":501,"line_end":501,"column_start":12,"column_end":25},"name":"is_normalized","qualname":"<Rotation3D<T, Src, Dst>>::is_normalized","value":"pub fn is_normalized(&Self) -> bool where T: ApproxEq<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if [norm] of this quaternion is (approximately) one.","sig":null,"attributes":[{"value":"/ Returns `true` if [norm] of this quaternion is (approximately) one.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":197524,"byte_end":197595,"line_start":497,"line_end":497,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":197600,"byte_end":197603,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ [norm]: #method.norm","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":197608,"byte_end":197632,"line_start":499,"line_end":499,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":197637,"byte_end":197646,"line_start":500,"line_end":500,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2200},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":197996,"byte_end":198001,"line_start":512,"line_end":512,"column_start":12,"column_end":17},"name":"slerp","qualname":"<Rotation3D<T, Src, Dst>>::slerp","value":"pub fn slerp(&Self, &Self, T) -> Self where T: ApproxEq<T>","parent":null,"children":[],"decl_id":null,"docs":" Spherical linear interpolation between this rotation and another rotation.","sig":null,"attributes":[{"value":"/ Spherical linear interpolation between this rotation and another rotation.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":197846,"byte_end":197924,"line_start":509,"line_end":509,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":197929,"byte_end":197932,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ `t` is expected to be between zero and one.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":197937,"byte_end":197984,"line_start":511,"line_end":511,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2201},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":199263,"byte_end":199267,"line_start":553,"line_end":553,"column_start":12,"column_end":16},"name":"lerp","qualname":"<Rotation3D<T, Src, Dst>>::lerp","value":"pub fn lerp(&Self, &Self, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Basic Linear interpolation between this rotation and another rotation.\n","sig":null,"attributes":[{"value":"/ Basic Linear interpolation between this rotation and another rotation.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":199163,"byte_end":199237,"line_start":551,"line_end":551,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":199242,"byte_end":199251,"line_start":552,"line_end":552,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2202},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":199575,"byte_end":199592,"line_start":561,"line_end":561,"column_start":12,"column_end":29},"name":"transform_point3d","qualname":"<Rotation3D<T, Src, Dst>>::transform_point3d","value":"pub fn transform_point3d(&Self, Point3D<T, Src>) -> Point3D<T, Dst> where\nT: ApproxEq<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the given 3d point transformed by this rotation.","sig":null,"attributes":[{"value":"/ Returns the given 3d point transformed by this rotation.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":199404,"byte_end":199464,"line_start":558,"line_end":558,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":199469,"byte_end":199472,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ The input point must be use the unit Src, and the returned point has the unit Dst.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":199477,"byte_end":199563,"line_start":560,"line_end":560,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":2203},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":200340,"byte_end":200357,"line_start":581,"line_end":581,"column_start":12,"column_end":29},"name":"transform_point2d","qualname":"<Rotation3D<T, Src, Dst>>::transform_point2d","value":"pub fn transform_point2d(&Self, Point2D<T, Src>) -> Point2D<T, Dst> where\nT: ApproxEq<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the given 2d point transformed by this rotation then projected on the xy plane.","sig":null,"attributes":[{"value":"/ Returns the given 2d point transformed by this rotation then projected on the xy plane.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":200124,"byte_end":200215,"line_start":577,"line_end":577,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":200220,"byte_end":200223,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ The input point must be use the unit Src, and the returned point has the unit Dst.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":200228,"byte_end":200314,"line_start":579,"line_end":579,"column_start":5,"column_end":91}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":200319,"byte_end":200328,"line_start":580,"line_end":580,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2204},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":200697,"byte_end":200715,"line_start":592,"line_end":592,"column_start":12,"column_end":30},"name":"transform_vector3d","qualname":"<Rotation3D<T, Src, Dst>>::transform_vector3d","value":"pub fn transform_vector3d(&Self, Vector3D<T, Src>) -> Vector3D<T, Dst> where\nT: ApproxEq<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the given 3d vector transformed by this rotation.","sig":null,"attributes":[{"value":"/ Returns the given 3d vector transformed by this rotation.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":200510,"byte_end":200571,"line_start":588,"line_end":588,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":200576,"byte_end":200579,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ The input vector must be use the unit Src, and the returned point has the unit Dst.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":200584,"byte_end":200671,"line_start":590,"line_end":590,"column_start":5,"column_end":92}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":200676,"byte_end":200685,"line_start":591,"line_end":591,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2205},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":201100,"byte_end":201118,"line_start":603,"line_end":603,"column_start":12,"column_end":30},"name":"transform_vector2d","qualname":"<Rotation3D<T, Src, Dst>>::transform_vector2d","value":"pub fn transform_vector2d(&Self, Vector2D<T, Src>) -> Vector2D<T, Dst> where\nT: ApproxEq<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the given 2d vector transformed by this rotation then projected on the xy plane.","sig":null,"attributes":[{"value":"/ Returns the given 2d vector transformed by this rotation then projected on the xy plane.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":200882,"byte_end":200974,"line_start":599,"line_end":599,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":200979,"byte_end":200982,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ The input vector must be use the unit Src, and the returned point has the unit Dst.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":200987,"byte_end":201074,"line_start":601,"line_end":601,"column_start":5,"column_end":92}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":201079,"byte_end":201088,"line_start":602,"line_end":602,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2206},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":201357,"byte_end":201369,"line_start":612,"line_end":612,"column_start":12,"column_end":24},"name":"to_transform","qualname":"<Rotation3D<T, Src, Dst>>::to_transform","value":"pub fn to_transform(&Self) -> Transform3D<T, Src, Dst> where T: ApproxEq<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the matrix representation of this rotation.\n","sig":null,"attributes":[{"value":"/ Returns the matrix representation of this rotation.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":201276,"byte_end":201331,"line_start":610,"line_end":610,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":201336,"byte_end":201345,"line_start":611,"line_end":611,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2207},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":202481,"byte_end":202485,"line_start":656,"line_end":656,"column_start":12,"column_end":16},"name":"then","qualname":"<Rotation3D<T, Src, Dst>>::then","value":"pub fn then<NewDst>(&Self, &Rotation3D<T, Dst, NewDst>)\n-> Rotation3D<T, Src, NewDst> where T: ApproxEq<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a rotation representing this rotation followed by the other rotation.\n","sig":null,"attributes":[{"value":"/ Returns a rotation representing this rotation followed by the other rotation.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":202374,"byte_end":202455,"line_start":654,"line_end":654,"column_start":5,"column_end":86}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":202460,"byte_end":202469,"line_start":655,"line_end":655,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":2281},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":214711,"byte_end":214716,"line_start":51,"line_end":51,"column_start":12,"column_end":17},"name":"Scale","qualname":"::scale::Scale","value":"","parent":null,"children":[],"decl_id":null,"docs":" A scaling factor between two different units of measurement.","sig":null,"attributes":[{"value":"/ A scaling factor between two different units of measurement.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":213744,"byte_end":213808,"line_start":23,"line_end":23,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":213809,"byte_end":213812,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ This is effectively a type-safe float, intended to be used in combination with other types like","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":213813,"byte_end":213912,"line_start":25,"line_end":25,"column_start":1,"column_end":100}},{"value":"/ `length::Length` to enforce conversion between systems of measurement at compile time.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":213913,"byte_end":214003,"line_start":26,"line_end":26,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":214004,"byte_end":214007,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ `Src` and `Dst` represent the units before and after multiplying a value by a `Scale`. They","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":214008,"byte_end":214103,"line_start":28,"line_end":28,"column_start":1,"column_end":96}},{"value":"/ may be types without values, such as empty enums.  For example:","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":214104,"byte_end":214171,"line_start":29,"line_end":29,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":214172,"byte_end":214175,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":214176,"byte_end":214187,"line_start":31,"line_end":31,"column_start":1,"column_end":12}},{"value":"/ use euclid::Scale;","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":214188,"byte_end":214210,"line_start":32,"line_end":32,"column_start":1,"column_end":23}},{"value":"/ use euclid::Length;","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":214211,"byte_end":214234,"line_start":33,"line_end":33,"column_start":1,"column_end":24}},{"value":"/ enum Mm {};","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":214235,"byte_end":214250,"line_start":34,"line_end":34,"column_start":1,"column_end":16}},{"value":"/ enum Inch {};","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":214251,"byte_end":214268,"line_start":35,"line_end":35,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":214269,"byte_end":214272,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ let mm_per_inch: Scale<f32, Inch, Mm> = Scale::new(25.4);","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":214273,"byte_end":214334,"line_start":37,"line_end":37,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":214335,"byte_end":214338,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ let one_foot: Length<f32, Inch> = Length::new(12.0);","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":214339,"byte_end":214395,"line_start":39,"line_end":39,"column_start":1,"column_end":57}},{"value":"/ let one_foot_in_mm: Length<f32, Mm> = one_foot * mm_per_inch;","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":214396,"byte_end":214461,"line_start":40,"line_end":40,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":214462,"byte_end":214469,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":214470,"byte_end":214480,"line_start":42,"line_end":42,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":2286},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":214730,"byte_end":214735,"line_start":51,"line_end":51,"column_start":31,"column_end":36},"name":"0","qualname":"::scale::Scale::0","value":"T","parent":{"krate":0,"index":2281},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2287},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":214752,"byte_end":214779,"line_start":51,"line_end":51,"column_start":53,"column_end":80},"name":"1","qualname":"::scale::Scale::1","value":"core::marker::PhantomData<(Src, Dst)>","parent":{"krate":0,"index":2281},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2292},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":214853,"byte_end":214856,"line_start":55,"line_end":55,"column_start":18,"column_end":21},"name":"new","qualname":"<Scale<T, Src, Dst>>::new","value":"pub const fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":214826,"byte_end":214835,"line_start":54,"line_end":54,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2293},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":214976,"byte_end":214984,"line_start":61,"line_end":61,"column_start":12,"column_end":20},"name":"identity","qualname":"<Scale<T, Src, Dst>>::identity","value":"pub fn identity() -> Self where T: One","parent":null,"children":[],"decl_id":null,"docs":" Creates an identity scale (1.0).\n","sig":null,"attributes":[{"value":"/ Creates an identity scale (1.0).","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":214914,"byte_end":214950,"line_start":59,"line_end":59,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":214955,"byte_end":214964,"line_start":60,"line_end":60,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2294},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":215436,"byte_end":215451,"line_start":82,"line_end":82,"column_start":12,"column_end":27},"name":"transform_point","qualname":"<Scale<T, Src, Dst>>::transform_point","value":"pub fn transform_point(Self, Point2D<T, Src>) -> Point2D<T::Output, Dst> where\nT: Copy + Mul","parent":null,"children":[],"decl_id":null,"docs":" Returns the given point transformed by this scale.","sig":null,"attributes":[{"value":"/ Returns the given point transformed by this scale.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":215066,"byte_end":215120,"line_start":68,"line_end":68,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":215125,"byte_end":215128,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":215133,"byte_end":215146,"line_start":70,"line_end":70,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":215151,"byte_end":215154,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":215159,"byte_end":215170,"line_start":72,"line_end":72,"column_start":5,"column_end":16}},{"value":"/ use euclid::{Scale, point2};","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":215175,"byte_end":215207,"line_start":73,"line_end":73,"column_start":5,"column_end":37}},{"value":"/ enum Mm {};","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":215212,"byte_end":215227,"line_start":74,"line_end":74,"column_start":5,"column_end":20}},{"value":"/ enum Cm {};","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":215232,"byte_end":215247,"line_start":75,"line_end":75,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":215252,"byte_end":215255,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ let to_mm: Scale<i32, Cm, Mm> = Scale::new(10);","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":215260,"byte_end":215311,"line_start":77,"line_end":77,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":215316,"byte_end":215319,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(to_mm.transform_point(point2(42, -42)), point2(420, -420));","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":215324,"byte_end":215398,"line_start":79,"line_end":79,"column_start":5,"column_end":79}},{"value":"/ ```","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":215403,"byte_end":215410,"line_start":80,"line_end":80,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":215415,"byte_end":215424,"line_start":81,"line_end":81,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2295},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":215696,"byte_end":215713,"line_start":91,"line_end":91,"column_start":12,"column_end":29},"name":"transform_point3d","qualname":"<Scale<T, Src, Dst>>::transform_point3d","value":"pub fn transform_point3d(Self, Point3D<T, Src>) -> Point3D<T::Output, Dst>\nwhere T: Copy + Mul","parent":null,"children":[],"decl_id":null,"docs":" Returns the given point transformed by this scale.\n","sig":null,"attributes":[{"value":"/ Returns the given point transformed by this scale.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":215616,"byte_end":215670,"line_start":89,"line_end":89,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":215675,"byte_end":215684,"line_start":90,"line_end":90,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2296},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":216262,"byte_end":216278,"line_start":112,"line_end":112,"column_start":12,"column_end":28},"name":"transform_vector","qualname":"<Scale<T, Src, Dst>>::transform_vector","value":"pub fn transform_vector(Self, Vector2D<T, Src>) -> Vector2D<T::Output, Dst>\nwhere T: Copy + Mul","parent":null,"children":[],"decl_id":null,"docs":" Returns the given vector transformed by this scale.","sig":null,"attributes":[{"value":"/ Returns the given vector transformed by this scale.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":215896,"byte_end":215951,"line_start":98,"line_end":98,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":215956,"byte_end":215959,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":215964,"byte_end":215977,"line_start":100,"line_end":100,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":215982,"byte_end":215985,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":215990,"byte_end":216001,"line_start":102,"line_end":102,"column_start":5,"column_end":16}},{"value":"/ use euclid::{Scale, vec2};","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":216006,"byte_end":216036,"line_start":103,"line_end":103,"column_start":5,"column_end":35}},{"value":"/ enum Mm {};","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":216041,"byte_end":216056,"line_start":104,"line_end":104,"column_start":5,"column_end":20}},{"value":"/ enum Cm {};","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":216061,"byte_end":216076,"line_start":105,"line_end":105,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":216081,"byte_end":216084,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ let to_mm: Scale<i32, Cm, Mm> = Scale::new(10);","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":216089,"byte_end":216140,"line_start":107,"line_end":107,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":216145,"byte_end":216148,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(to_mm.transform_vector(vec2(42, -42)), vec2(420, -420));","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":216153,"byte_end":216224,"line_start":109,"line_end":109,"column_start":5,"column_end":76}},{"value":"/ ```","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":216229,"byte_end":216236,"line_start":110,"line_end":110,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":216241,"byte_end":216250,"line_start":111,"line_end":111,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2297},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":216807,"byte_end":216821,"line_start":133,"line_end":133,"column_start":12,"column_end":26},"name":"transform_size","qualname":"<Scale<T, Src, Dst>>::transform_size","value":"pub fn transform_size(Self, Size2D<T, Src>) -> Size2D<T::Output, Dst> where\nT: Copy + Mul","parent":null,"children":[],"decl_id":null,"docs":" Returns the given vector transformed by this scale.","sig":null,"attributes":[{"value":"/ Returns the given vector transformed by this scale.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":216440,"byte_end":216495,"line_start":119,"line_end":119,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":216500,"byte_end":216503,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":216508,"byte_end":216521,"line_start":121,"line_end":121,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":216526,"byte_end":216529,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":216534,"byte_end":216545,"line_start":123,"line_end":123,"column_start":5,"column_end":16}},{"value":"/ use euclid::{Scale, size2};","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":216550,"byte_end":216581,"line_start":124,"line_end":124,"column_start":5,"column_end":36}},{"value":"/ enum Mm {};","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":216586,"byte_end":216601,"line_start":125,"line_end":125,"column_start":5,"column_end":20}},{"value":"/ enum Cm {};","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":216606,"byte_end":216621,"line_start":126,"line_end":126,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":216626,"byte_end":216629,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ let to_mm: Scale<i32, Cm, Mm> = Scale::new(10);","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":216634,"byte_end":216685,"line_start":128,"line_end":128,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":216690,"byte_end":216693,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(to_mm.transform_size(size2(42, -42)), size2(420, -420));","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":216698,"byte_end":216769,"line_start":130,"line_end":130,"column_start":5,"column_end":76}},{"value":"/ ```","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":216774,"byte_end":216781,"line_start":131,"line_end":131,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":216786,"byte_end":216795,"line_start":132,"line_end":132,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2298},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":217366,"byte_end":217380,"line_start":154,"line_end":154,"column_start":12,"column_end":26},"name":"transform_rect","qualname":"<Scale<T, Src, Dst>>::transform_rect","value":"pub fn transform_rect(Self, &Rect<T, Src>) -> Rect<T::Output, Dst> where\nT: Copy + Mul","parent":null,"children":[],"decl_id":null,"docs":" Returns the given rect transformed by this scale.","sig":null,"attributes":[{"value":"/ Returns the given rect transformed by this scale.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":216989,"byte_end":217042,"line_start":140,"line_end":140,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":217047,"byte_end":217050,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":217055,"byte_end":217068,"line_start":142,"line_end":142,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":217073,"byte_end":217076,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":217081,"byte_end":217092,"line_start":144,"line_end":144,"column_start":5,"column_end":16}},{"value":"/ use euclid::{Scale, rect};","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":217097,"byte_end":217127,"line_start":145,"line_end":145,"column_start":5,"column_end":35}},{"value":"/ enum Mm {};","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":217132,"byte_end":217147,"line_start":146,"line_end":146,"column_start":5,"column_end":20}},{"value":"/ enum Cm {};","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":217152,"byte_end":217167,"line_start":147,"line_end":147,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":217172,"byte_end":217175,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ let to_mm: Scale<i32, Cm, Mm> = Scale::new(10);","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":217180,"byte_end":217231,"line_start":149,"line_end":149,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":217236,"byte_end":217239,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(to_mm.transform_rect(&rect(1, 2, 42, -42)), rect(10, 20, 420, -420));","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":217244,"byte_end":217328,"line_start":151,"line_end":151,"column_start":5,"column_end":89}},{"value":"/ ```","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":217333,"byte_end":217340,"line_start":152,"line_end":152,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":217345,"byte_end":217354,"line_start":153,"line_end":153,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2299},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":217680,"byte_end":217695,"line_start":166,"line_end":166,"column_start":12,"column_end":27},"name":"transform_box2d","qualname":"<Scale<T, Src, Dst>>::transform_box2d","value":"pub fn transform_box2d(Self, &Box2D<T, Src>) -> Box2D<T::Output, Dst> where\nT: Copy + Mul","parent":null,"children":[],"decl_id":null,"docs":" Returns the given box transformed by this scale.\n","sig":null,"attributes":[{"value":"/ Returns the given box transformed by this scale.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":217602,"byte_end":217654,"line_start":164,"line_end":164,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":217659,"byte_end":217668,"line_start":165,"line_end":165,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2300},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":217992,"byte_end":218007,"line_start":178,"line_end":178,"column_start":12,"column_end":27},"name":"transform_box3d","qualname":"<Scale<T, Src, Dst>>::transform_box3d","value":"pub fn transform_box3d(Self, &Box3D<T, Src>) -> Box3D<T::Output, Dst> where\nT: Copy + Mul","parent":null,"children":[],"decl_id":null,"docs":" Returns the given box transformed by this scale.\n","sig":null,"attributes":[{"value":"/ Returns the given box transformed by this scale.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":217914,"byte_end":217966,"line_start":176,"line_end":176,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":217971,"byte_end":217980,"line_start":177,"line_end":177,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2301},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":218748,"byte_end":218759,"line_start":206,"line_end":206,"column_start":12,"column_end":23},"name":"is_identity","qualname":"<Scale<T, Src, Dst>>::is_identity","value":"pub fn is_identity(Self) -> bool where T: PartialEq + One","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this scale has no effect.","sig":null,"attributes":[{"value":"/ Returns `true` if this scale has no effect.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":218230,"byte_end":218277,"line_start":188,"line_end":188,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":218282,"byte_end":218285,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":218290,"byte_end":218303,"line_start":190,"line_end":190,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":218308,"byte_end":218311,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":218316,"byte_end":218327,"line_start":192,"line_end":192,"column_start":5,"column_end":16}},{"value":"/ use euclid::Scale;","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":218332,"byte_end":218354,"line_start":193,"line_end":193,"column_start":5,"column_end":27}},{"value":"/ use euclid::num::One;","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":218359,"byte_end":218384,"line_start":194,"line_end":194,"column_start":5,"column_end":30}},{"value":"/ enum Mm {};","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":218389,"byte_end":218404,"line_start":195,"line_end":195,"column_start":5,"column_end":20}},{"value":"/ enum Cm {};","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":218409,"byte_end":218424,"line_start":196,"line_end":196,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":218429,"byte_end":218432,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ let cm_per_mm: Scale<f32, Mm, Cm> = Scale::new(0.1);","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":218437,"byte_end":218493,"line_start":198,"line_end":198,"column_start":5,"column_end":61}},{"value":"/ let mm_per_mm: Scale<f32, Mm, Mm> = Scale::new(1.0);","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":218498,"byte_end":218554,"line_start":199,"line_end":199,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":218559,"byte_end":218562,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(cm_per_mm.is_identity(), false);","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":218567,"byte_end":218614,"line_start":201,"line_end":201,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(mm_per_mm.is_identity(), true);","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":218619,"byte_end":218665,"line_start":202,"line_end":202,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(mm_per_mm, Scale::one());","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":218670,"byte_end":218710,"line_start":203,"line_end":203,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":218715,"byte_end":218722,"line_start":204,"line_end":204,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":218727,"byte_end":218736,"line_start":205,"line_end":205,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2302},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":218929,"byte_end":218932,"line_start":215,"line_end":215,"column_start":12,"column_end":15},"name":"get","qualname":"<Scale<T, Src, Dst>>::get","value":"pub fn get(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying scalar scale factor.\n","sig":null,"attributes":[{"value":"/ Returns the underlying scalar scale factor.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":218856,"byte_end":218903,"line_start":213,"line_end":213,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":218908,"byte_end":218917,"line_start":214,"line_end":214,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2303},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":219284,"byte_end":219291,"line_start":232,"line_end":232,"column_start":12,"column_end":19},"name":"inverse","qualname":"<Scale<T, Src, Dst>>::inverse","value":"pub fn inverse(Self) -> Scale<T::Output, Dst, Src> where T: One + Div","parent":null,"children":[],"decl_id":null,"docs":" The inverse Scale (1.0 / self).","sig":null,"attributes":[{"value":"/ The inverse Scale (1.0 / self).","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":218972,"byte_end":219007,"line_start":219,"line_end":219,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":219012,"byte_end":219015,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":219020,"byte_end":219033,"line_start":221,"line_end":221,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":219038,"byte_end":219041,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":219046,"byte_end":219057,"line_start":223,"line_end":223,"column_start":5,"column_end":16}},{"value":"/ use euclid::Scale;","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":219062,"byte_end":219084,"line_start":224,"line_end":224,"column_start":5,"column_end":27}},{"value":"/ enum Mm {};","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":219089,"byte_end":219104,"line_start":225,"line_end":225,"column_start":5,"column_end":20}},{"value":"/ enum Cm {};","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":219109,"byte_end":219124,"line_start":226,"line_end":226,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":219129,"byte_end":219132,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ let cm_per_mm: Scale<f32, Cm, Mm> = Scale::new(0.1);","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":219137,"byte_end":219193,"line_start":228,"line_end":228,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":219198,"byte_end":219201,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(cm_per_mm.inverse(), Scale::new(10.0));","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":219206,"byte_end":219260,"line_start":230,"line_end":230,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":219265,"byte_end":219272,"line_start":231,"line_end":231,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2308},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":220372,"byte_end":220376,"line_start":270,"line_end":270,"column_start":12,"column_end":16},"name":"cast","qualname":"<Scale<T, Src, Dst>>::cast","value":"pub fn cast<NewT: NumCast>(Self) -> Scale<NewT, Src, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Cast from one numeric representation to another, preserving the units.","sig":null,"attributes":[{"value":"/ Cast from one numeric representation to another, preserving the units.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":219493,"byte_end":219567,"line_start":242,"line_end":242,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":219572,"byte_end":219575,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":219580,"byte_end":219592,"line_start":244,"line_end":244,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":219597,"byte_end":219600,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ If the source value cannot be represented by the target type `NewT`, then","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":219605,"byte_end":219682,"line_start":246,"line_end":246,"column_start":5,"column_end":82}},{"value":"/ method panics. Use `try_cast` if that must be case.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":219687,"byte_end":219742,"line_start":247,"line_end":247,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":219747,"byte_end":219750,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":219755,"byte_end":219768,"line_start":249,"line_end":249,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":219773,"byte_end":219776,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":219781,"byte_end":219792,"line_start":251,"line_end":251,"column_start":5,"column_end":16}},{"value":"/ use euclid::Scale;","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":219797,"byte_end":219819,"line_start":252,"line_end":252,"column_start":5,"column_end":27}},{"value":"/ enum Mm {};","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":219824,"byte_end":219839,"line_start":253,"line_end":253,"column_start":5,"column_end":20}},{"value":"/ enum Cm {};","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":219844,"byte_end":219859,"line_start":254,"line_end":254,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":219864,"byte_end":219867,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ let to_mm: Scale<i32, Cm, Mm> = Scale::new(10);","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":219872,"byte_end":219923,"line_start":256,"line_end":256,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":219928,"byte_end":219931,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(to_mm.cast::<f32>(), Scale::new(10.0));","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":219936,"byte_end":219990,"line_start":258,"line_end":258,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":219995,"byte_end":220002,"line_start":259,"line_end":259,"column_start":5,"column_end":12}},{"value":"/ That conversion will panic, because `i32` not enough to store such big numbers:","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":220007,"byte_end":220090,"line_start":260,"line_end":260,"column_start":5,"column_end":88}},{"value":"/ ```rust,should_panic","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":220095,"byte_end":220119,"line_start":261,"line_end":261,"column_start":5,"column_end":29}},{"value":"/ use euclid::Scale;","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":220124,"byte_end":220146,"line_start":262,"line_end":262,"column_start":5,"column_end":27}},{"value":"/ enum Mm {};// millimeter = 10^-2 meters","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":220151,"byte_end":220194,"line_start":263,"line_end":263,"column_start":5,"column_end":48}},{"value":"/ enum Em {};// exameter   = 10^18 meters","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":220199,"byte_end":220242,"line_start":264,"line_end":264,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":220247,"byte_end":220250,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ // Panics","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":220255,"byte_end":220268,"line_start":266,"line_end":266,"column_start":5,"column_end":18}},{"value":"/ let to_em: Scale<i32, Mm, Em> = Scale::new(10e20).cast();","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":220273,"byte_end":220334,"line_start":267,"line_end":267,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":220339,"byte_end":220346,"line_start":268,"line_end":268,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":220351,"byte_end":220360,"line_start":269,"line_end":269,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2310},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":221149,"byte_end":221157,"line_start":293,"line_end":293,"column_start":12,"column_end":20},"name":"try_cast","qualname":"<Scale<T, Src, Dst>>::try_cast","value":"pub fn try_cast<NewT: NumCast>(Self) -> Option<Scale<NewT, Src, Dst>>","parent":null,"children":[],"decl_id":null,"docs":" Fallible cast from one numeric representation to another, preserving the units.\n If the source value cannot be represented by the target type `NewT`, then `None`\n is returned.","sig":null,"attributes":[{"value":"/ Fallible cast from one numeric representation to another, preserving the units.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":220469,"byte_end":220552,"line_start":274,"line_end":274,"column_start":5,"column_end":88}},{"value":"/ If the source value cannot be represented by the target type `NewT`, then `None`","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":220557,"byte_end":220641,"line_start":275,"line_end":275,"column_start":5,"column_end":89}},{"value":"/ is returned.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":220646,"byte_end":220662,"line_start":276,"line_end":276,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":220667,"byte_end":220670,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":220675,"byte_end":220688,"line_start":278,"line_end":278,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":220693,"byte_end":220696,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":220701,"byte_end":220712,"line_start":280,"line_end":280,"column_start":5,"column_end":16}},{"value":"/ use euclid::Scale;","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":220717,"byte_end":220739,"line_start":281,"line_end":281,"column_start":5,"column_end":27}},{"value":"/ enum Mm {};","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":220744,"byte_end":220759,"line_start":282,"line_end":282,"column_start":5,"column_end":20}},{"value":"/ enum Cm {};","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":220764,"byte_end":220779,"line_start":283,"line_end":283,"column_start":5,"column_end":20}},{"value":"/ enum Em {};// Exameter = 10^18 meters","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":220784,"byte_end":220825,"line_start":284,"line_end":284,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":220830,"byte_end":220833,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ let to_mm: Scale<i32, Cm, Mm> = Scale::new(10);","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":220838,"byte_end":220889,"line_start":286,"line_end":286,"column_start":5,"column_end":56}},{"value":"/ let to_em: Scale<f32, Mm, Em> = Scale::new(10e20);","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":220894,"byte_end":220948,"line_start":287,"line_end":287,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":220953,"byte_end":220956,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(to_mm.try_cast::<f32>(), Some(Scale::new(10.0)));","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":220961,"byte_end":221025,"line_start":289,"line_end":289,"column_start":5,"column_end":69}},{"value":"/ // Integer to small to store that number","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":221030,"byte_end":221074,"line_start":290,"line_end":290,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(to_em.try_cast::<i32>(), None);","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":221079,"byte_end":221125,"line_start":291,"line_end":291,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":221130,"byte_end":221137,"line_start":292,"line_end":292,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":2428},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\side_offsets.rs","byte_start":225691,"byte_end":225704,"line_start":33,"line_end":33,"column_start":12,"column_end":25},"name":"SideOffsets2D","qualname":"::side_offsets::SideOffsets2D","value":"SideOffsets2D { top, right, bottom, left, _unit }","parent":null,"children":[{"krate":0,"index":2431},{"krate":0,"index":2432},{"krate":0,"index":2433},{"krate":0,"index":2434},{"krate":0,"index":2435}],"decl_id":null,"docs":" A group of 2D side offsets, which correspond to top/right/bottom/left for borders, padding,\n and margins in CSS, optionally tagged with a unit.\n","sig":null,"attributes":[{"value":"/ A group of 2D side offsets, which correspond to top/right/bottom/left for borders, padding,","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\side_offsets.rs","byte_start":225335,"byte_end":225430,"line_start":25,"line_end":25,"column_start":1,"column_end":96}},{"value":"/ and margins in CSS, optionally tagged with a unit.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\side_offsets.rs","byte_start":225431,"byte_end":225485,"line_start":26,"line_end":26,"column_start":1,"column_end":55}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\side_offsets.rs","byte_start":225486,"byte_end":225496,"line_start":27,"line_end":27,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":2431},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\side_offsets.rs","byte_start":225721,"byte_end":225724,"line_start":34,"line_end":34,"column_start":9,"column_end":12},"name":"top","qualname":"::side_offsets::SideOffsets2D::top","value":"T","parent":{"krate":0,"index":2428},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2432},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\side_offsets.rs","byte_start":225737,"byte_end":225742,"line_start":35,"line_end":35,"column_start":9,"column_end":14},"name":"right","qualname":"::side_offsets::SideOffsets2D::right","value":"T","parent":{"krate":0,"index":2428},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2433},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\side_offsets.rs","byte_start":225755,"byte_end":225761,"line_start":36,"line_end":36,"column_start":9,"column_end":15},"name":"bottom","qualname":"::side_offsets::SideOffsets2D::bottom","value":"T","parent":{"krate":0,"index":2428},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2434},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\side_offsets.rs","byte_start":225774,"byte_end":225778,"line_start":37,"line_end":37,"column_start":9,"column_end":13},"name":"left","qualname":"::side_offsets::SideOffsets2D::left","value":"T","parent":{"krate":0,"index":2428},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2435},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\side_offsets.rs","byte_start":225810,"byte_end":225815,"line_start":39,"line_end":39,"column_start":9,"column_end":14},"name":"_unit","qualname":"::side_offsets::SideOffsets2D::_unit","value":"core::marker::PhantomData<U>","parent":{"krate":0,"index":2428},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2466},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\side_offsets.rs","byte_start":227986,"byte_end":227989,"line_start":127,"line_end":127,"column_start":18,"column_end":21},"name":"new","qualname":"<SideOffsets2D<T, U>>::new","value":"pub const fn new(T, T, T, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructor taking a scalar for each side.","sig":null,"attributes":[{"value":"/ Constructor taking a scalar for each side.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\side_offsets.rs","byte_start":227819,"byte_end":227865,"line_start":123,"line_end":123,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\side_offsets.rs","byte_start":227870,"byte_end":227873,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ Sides are specified in top-right-bottom-left order following","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\side_offsets.rs","byte_start":227878,"byte_end":227942,"line_start":125,"line_end":125,"column_start":5,"column_end":69}},{"value":"/ CSS's convention.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\side_offsets.rs","byte_start":227947,"byte_end":227968,"line_start":126,"line_end":126,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":2467},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\side_offsets.rs","byte_start":228356,"byte_end":228368,"line_start":141,"line_end":141,"column_start":12,"column_end":24},"name":"from_lengths","qualname":"<SideOffsets2D<T, U>>::from_lengths","value":"pub fn from_lengths(Length<T, U>, Length<T, U>, Length<T, U>, Length<T, U>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructor taking a typed Length for each side.","sig":null,"attributes":[{"value":"/ Constructor taking a typed Length for each side.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\side_offsets.rs","byte_start":228189,"byte_end":228241,"line_start":137,"line_end":137,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\side_offsets.rs","byte_start":228246,"byte_end":228249,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ Sides are specified in top-right-bottom-left order following","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\side_offsets.rs","byte_start":228254,"byte_end":228318,"line_start":139,"line_end":139,"column_start":5,"column_end":69}},{"value":"/ CSS's convention.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\side_offsets.rs","byte_start":228323,"byte_end":228344,"line_start":140,"line_end":140,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":2468},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\side_offsets.rs","byte_start":228864,"byte_end":228882,"line_start":155,"line_end":155,"column_start":12,"column_end":30},"name":"from_vectors_outer","qualname":"<SideOffsets2D<T, U>>::from_vectors_outer","value":"pub fn from_vectors_outer(Vector2D<T, U>, Vector2D<T, U>) -> Self where\nT: Neg<Output = T>","parent":null,"children":[],"decl_id":null,"docs":" Construct side offsets from min and a max vector offsets.","sig":null,"attributes":[{"value":"/ Construct side offsets from min and a max vector offsets.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\side_offsets.rs","byte_start":228572,"byte_end":228633,"line_start":150,"line_end":150,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\side_offsets.rs","byte_start":228638,"byte_end":228641,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ The outer rect of the resulting side offsets is equivalent to translating","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\side_offsets.rs","byte_start":228646,"byte_end":228723,"line_start":152,"line_end":152,"column_start":5,"column_end":82}},{"value":"/ a rectangle's upper-left corner with the min vector and translating the","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\side_offsets.rs","byte_start":228728,"byte_end":228803,"line_start":153,"line_end":153,"column_start":5,"column_end":80}},{"value":"/ bottom-right corner with the max vector.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\side_offsets.rs","byte_start":228808,"byte_end":228852,"line_start":154,"line_end":154,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2469},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\side_offsets.rs","byte_start":229450,"byte_end":229468,"line_start":173,"line_end":173,"column_start":12,"column_end":30},"name":"from_vectors_inner","qualname":"<SideOffsets2D<T, U>>::from_vectors_inner","value":"pub fn from_vectors_inner(Vector2D<T, U>, Vector2D<T, U>) -> Self where\nT: Neg<Output = T>","parent":null,"children":[],"decl_id":null,"docs":" Construct side offsets from min and a max vector offsets.","sig":null,"attributes":[{"value":"/ Construct side offsets from min and a max vector offsets.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\side_offsets.rs","byte_start":229158,"byte_end":229219,"line_start":168,"line_end":168,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\side_offsets.rs","byte_start":229224,"byte_end":229227,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ The inner rect of the resulting side offsets is equivalent to translating","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\side_offsets.rs","byte_start":229232,"byte_end":229309,"line_start":170,"line_end":170,"column_start":5,"column_end":82}},{"value":"/ a rectangle's upper-left corner with the min vector and translating the","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\side_offsets.rs","byte_start":229314,"byte_end":229389,"line_start":171,"line_end":171,"column_start":5,"column_end":80}},{"value":"/ bottom-right corner with the max vector.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\side_offsets.rs","byte_start":229394,"byte_end":229438,"line_start":172,"line_end":172,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2470},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\side_offsets.rs","byte_start":229799,"byte_end":229803,"line_start":187,"line_end":187,"column_start":12,"column_end":16},"name":"zero","qualname":"<SideOffsets2D<T, U>>::zero","value":"pub fn zero() -> Self where T: Zero","parent":null,"children":[],"decl_id":null,"docs":" Constructor, setting all sides to zero.\n","sig":null,"attributes":[{"value":"/ Constructor, setting all sides to zero.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\side_offsets.rs","byte_start":229744,"byte_end":229787,"line_start":186,"line_end":186,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2471},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\side_offsets.rs","byte_start":229997,"byte_end":230004,"line_start":194,"line_end":194,"column_start":12,"column_end":19},"name":"is_zero","qualname":"<SideOffsets2D<T, U>>::is_zero","value":"pub fn is_zero(&Self) -> bool where T: Zero + PartialEq","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if all side offsets are zero.\n","sig":null,"attributes":[{"value":"/ Returns `true` if all side offsets are zero.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\side_offsets.rs","byte_start":229937,"byte_end":229985,"line_start":193,"line_end":193,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2472},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\side_offsets.rs","byte_start":230293,"byte_end":230305,"line_start":203,"line_end":203,"column_start":12,"column_end":24},"name":"new_all_same","qualname":"<SideOffsets2D<T, U>>::new_all_same","value":"pub fn new_all_same(T) -> Self where T: Copy","parent":null,"children":[],"decl_id":null,"docs":" Constructor setting the same value to all sides, taking a scalar value directly.\n","sig":null,"attributes":[{"value":"/ Constructor setting the same value to all sides, taking a scalar value directly.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\side_offsets.rs","byte_start":230197,"byte_end":230281,"line_start":202,"line_end":202,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":2473},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\side_offsets.rs","byte_start":230496,"byte_end":230516,"line_start":210,"line_end":210,"column_start":12,"column_end":32},"name":"from_length_all_same","qualname":"<SideOffsets2D<T, U>>::from_length_all_same","value":"pub fn from_length_all_same(Length<T, U>) -> Self where T: Copy","parent":null,"children":[],"decl_id":null,"docs":" Constructor setting the same value to all sides, taking a typed Length.\n","sig":null,"attributes":[{"value":"/ Constructor setting the same value to all sides, taking a typed Length.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\side_offsets.rs","byte_start":230409,"byte_end":230484,"line_start":209,"line_end":209,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":2474},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\side_offsets.rs","byte_start":230634,"byte_end":230644,"line_start":216,"line_end":216,"column_start":12,"column_end":22},"name":"horizontal","qualname":"<SideOffsets2D<T, U>>::horizontal","value":"pub fn horizontal(&Self) -> T where T: Copy + Add<T, Output = T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2475},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\side_offsets.rs","byte_start":230755,"byte_end":230763,"line_start":222,"line_end":222,"column_start":12,"column_end":20},"name":"vertical","qualname":"<SideOffsets2D<T, U>>::vertical","value":"pub fn vertical(&Self) -> T where T: Copy + Add<T, Output = T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2614},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":237516,"byte_end":237522,"line_start":32,"line_end":32,"column_start":12,"column_end":18},"name":"Size2D","qualname":"::size::Size2D","value":"Size2D { width, height, _unit }","parent":null,"children":[{"krate":0,"index":2617},{"krate":0,"index":2618},{"krate":0,"index":2619}],"decl_id":null,"docs":" A 2d size tagged with a unit.\n","sig":null,"attributes":[{"value":"/ A 2d size tagged with a unit.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":237460,"byte_end":237493,"line_start":30,"line_end":30,"column_start":1,"column_end":34}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":237494,"byte_end":237504,"line_start":31,"line_end":31,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":2617},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":237631,"byte_end":237636,"line_start":34,"line_end":34,"column_start":9,"column_end":14},"name":"width","qualname":"::size::Size2D::width","value":"T","parent":{"krate":0,"index":2614},"children":[],"decl_id":null,"docs":" The extent of the element in the `U` units along the `x` axis (usually horizontal).\n","sig":null,"attributes":[{"value":"/ The extent of the element in the `U` units along the `x` axis (usually horizontal).","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":237535,"byte_end":237622,"line_start":33,"line_end":33,"column_start":5,"column_end":92}}]},{"kind":"Field","id":{"krate":0,"index":2618},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":237739,"byte_end":237745,"line_start":36,"line_end":36,"column_start":9,"column_end":15},"name":"height","qualname":"::size::Size2D::height","value":"T","parent":{"krate":0,"index":2614},"children":[],"decl_id":null,"docs":" The extent of the element in the `U` units along the `y` axis (usually vertical).\n","sig":null,"attributes":[{"value":"/ The extent of the element in the `U` units along the `y` axis (usually vertical).","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":237645,"byte_end":237730,"line_start":35,"line_end":35,"column_start":5,"column_end":90}}]},{"kind":"Field","id":{"krate":0,"index":2619},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":237777,"byte_end":237782,"line_start":38,"line_end":38,"column_start":9,"column_end":14},"name":"_unit","qualname":"::size::Size2D::_unit","value":"core::marker::PhantomData<U>","parent":{"krate":0,"index":2614},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2650},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":240264,"byte_end":240268,"line_start":142,"line_end":142,"column_start":12,"column_end":16},"name":"zero","qualname":"<Size2D<T, U>>::zero","value":"pub fn zero() -> Self where T: Zero","parent":null,"children":[],"decl_id":null,"docs":" The same as [`Zero::zero()`] but available without importing trait.","sig":null,"attributes":[{"value":"/ The same as [`Zero::zero()`] but available without importing trait.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":240097,"byte_end":240168,"line_start":138,"line_end":138,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":240173,"byte_end":240176,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ [`Zero::zero()`]: ./num/trait.Zero.html#tymethod.zero","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":240181,"byte_end":240238,"line_start":140,"line_end":140,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":240243,"byte_end":240252,"line_start":141,"line_end":141,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2651},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":240440,"byte_end":240443,"line_start":151,"line_end":151,"column_start":18,"column_end":21},"name":"new","qualname":"<Size2D<T, U>>::new","value":"pub const fn new(T, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructor taking scalar values.\n","sig":null,"attributes":[{"value":"/ Constructor taking scalar values.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":240371,"byte_end":240408,"line_start":149,"line_end":149,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":240413,"byte_end":240422,"line_start":150,"line_end":150,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2652},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":240662,"byte_end":240674,"line_start":160,"line_end":160,"column_start":12,"column_end":24},"name":"from_lengths","qualname":"<Size2D<T, U>>::from_lengths","value":"pub fn from_lengths(Length<T, U>, Length<T, U>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructor taking scalar strongly typed lengths.\n","sig":null,"attributes":[{"value":"/ Constructor taking scalar strongly typed lengths.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":240583,"byte_end":240636,"line_start":158,"line_end":158,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":240641,"byte_end":240650,"line_start":159,"line_end":159,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2653},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":240861,"byte_end":240866,"line_start":166,"line_end":166,"column_start":12,"column_end":17},"name":"splat","qualname":"<Size2D<T, U>>::splat","value":"pub fn splat(T) -> Self where T: Clone","parent":null,"children":[],"decl_id":null,"docs":" Constructor setting all components to the same value.\n","sig":null,"attributes":[{"value":"/ Constructor setting all components to the same value.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":240778,"byte_end":240835,"line_start":164,"line_end":164,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":240840,"byte_end":240849,"line_start":165,"line_end":165,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2654},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":241100,"byte_end":241112,"line_start":179,"line_end":179,"column_start":12,"column_end":24},"name":"from_untyped","qualname":"<Size2D<T, U>>::from_untyped","value":"pub fn from_untyped(Size2D<T, UnknownUnit>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Tag a unitless value with units.\n","sig":null,"attributes":[{"value":"/ Tag a unitless value with units.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":241038,"byte_end":241074,"line_start":177,"line_end":177,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":241079,"byte_end":241088,"line_start":178,"line_end":178,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2658},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":241330,"byte_end":241338,"line_start":187,"line_end":187,"column_start":12,"column_end":20},"name":"to_array","qualname":"<Size2D<T, U>>::to_array","value":"pub fn to_array(Self) -> [T; ]","parent":null,"children":[],"decl_id":null,"docs":" Return this size as an array of two elements (width, then height).\n","sig":null,"attributes":[{"value":"/ Return this size as an array of two elements (width, then height).","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":241234,"byte_end":241304,"line_start":185,"line_end":185,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":241309,"byte_end":241318,"line_start":186,"line_end":186,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2660},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":241497,"byte_end":241505,"line_start":193,"line_end":193,"column_start":12,"column_end":20},"name":"to_tuple","qualname":"<Size2D<T, U>>::to_tuple","value":"pub fn to_tuple(Self) -> (T, T)","parent":null,"children":[],"decl_id":null,"docs":" Return this size as a tuple of two elements (width, then height).\n","sig":null,"attributes":[{"value":"/ Return this size as a tuple of two elements (width, then height).","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":241402,"byte_end":241471,"line_start":191,"line_end":191,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":241476,"byte_end":241485,"line_start":192,"line_end":192,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2661},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":241650,"byte_end":241659,"line_start":199,"line_end":199,"column_start":12,"column_end":21},"name":"to_vector","qualname":"<Size2D<T, U>>::to_vector","value":"pub fn to_vector(Self) -> Vector2D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Return this size as a vector with width and height.\n","sig":null,"attributes":[{"value":"/ Return this size as a vector with width and height.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":241569,"byte_end":241624,"line_start":197,"line_end":197,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":241629,"byte_end":241638,"line_start":198,"line_end":198,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2662},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":241815,"byte_end":241825,"line_start":205,"line_end":205,"column_start":12,"column_end":22},"name":"to_untyped","qualname":"<Size2D<T, U>>::to_untyped","value":"pub fn to_untyped(Self) -> Size2D<T, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":" Drop the units, preserving only the numeric value.\n","sig":null,"attributes":[{"value":"/ Drop the units, preserving only the numeric value.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":241735,"byte_end":241789,"line_start":203,"line_end":203,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":241794,"byte_end":241803,"line_start":204,"line_end":204,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2663},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":241939,"byte_end":241948,"line_start":211,"line_end":211,"column_start":12,"column_end":21},"name":"cast_unit","qualname":"<Size2D<T, U>>::cast_unit","value":"pub fn cast_unit<V>(Self) -> Size2D<T, V>","parent":null,"children":[],"decl_id":null,"docs":" Cast the unit\n","sig":null,"attributes":[{"value":"/ Cast the unit","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":241896,"byte_end":241913,"line_start":209,"line_end":209,"column_start":5,"column_end":22}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":241918,"byte_end":241927,"line_start":210,"line_end":210,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2665},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":242391,"byte_end":242396,"line_start":227,"line_end":227,"column_start":12,"column_end":17},"name":"round","qualname":"<Size2D<T, U>>::round","value":"pub fn round(Self) -> Self where T: Round","parent":null,"children":[],"decl_id":null,"docs":" Rounds each component to the nearest integer value.","sig":null,"attributes":[{"value":"/ Rounds each component to the nearest integer value.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":242032,"byte_end":242087,"line_start":215,"line_end":215,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":242092,"byte_end":242095,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ This behavior is preserved for negative values (unlike the basic cast).","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":242100,"byte_end":242175,"line_start":217,"line_end":217,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":242180,"byte_end":242183,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":242188,"byte_end":242199,"line_start":219,"line_end":219,"column_start":5,"column_end":16}},{"value":"/ # use euclid::size2;","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":242204,"byte_end":242228,"line_start":220,"line_end":220,"column_start":5,"column_end":29}},{"value":"/ enum Mm {}","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":242233,"byte_end":242247,"line_start":221,"line_end":221,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":242252,"byte_end":242255,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(size2::<_, Mm>(-0.1, -0.8).round(), size2::<_, Mm>(0.0, -1.0))","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":242260,"byte_end":242337,"line_start":223,"line_end":223,"column_start":5,"column_end":82}},{"value":"/ ```","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":242342,"byte_end":242349,"line_start":224,"line_end":224,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":242354,"byte_end":242363,"line_start":225,"line_end":225,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":242368,"byte_end":242379,"line_start":226,"line_end":226,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2666},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":242910,"byte_end":242914,"line_start":246,"line_end":246,"column_start":12,"column_end":16},"name":"ceil","qualname":"<Size2D<T, U>>::ceil","value":"pub fn ceil(Self) -> Self where T: Ceil","parent":null,"children":[],"decl_id":null,"docs":" Rounds each component to the smallest integer equal or greater than the original value.","sig":null,"attributes":[{"value":"/ Rounds each component to the smallest integer equal or greater than the original value.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":242517,"byte_end":242608,"line_start":234,"line_end":234,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":242613,"byte_end":242616,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ This behavior is preserved for negative values (unlike the basic cast).","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":242621,"byte_end":242696,"line_start":236,"line_end":236,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":242701,"byte_end":242704,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":242709,"byte_end":242720,"line_start":238,"line_end":238,"column_start":5,"column_end":16}},{"value":"/ # use euclid::size2;","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":242725,"byte_end":242749,"line_start":239,"line_end":239,"column_start":5,"column_end":29}},{"value":"/ enum Mm {}","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":242754,"byte_end":242768,"line_start":240,"line_end":240,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":242773,"byte_end":242776,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(size2::<_, Mm>(-0.1, -0.8).ceil(), size2::<_, Mm>(0.0, 0.0))","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":242781,"byte_end":242856,"line_start":242,"line_end":242,"column_start":5,"column_end":80}},{"value":"/ ```","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":242861,"byte_end":242868,"line_start":243,"line_end":243,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":242873,"byte_end":242882,"line_start":244,"line_end":244,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":242887,"byte_end":242898,"line_start":245,"line_end":245,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2667},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":243425,"byte_end":243430,"line_start":265,"line_end":265,"column_start":12,"column_end":17},"name":"floor","qualname":"<Size2D<T, U>>::floor","value":"pub fn floor(Self) -> Self where T: Floor","parent":null,"children":[],"decl_id":null,"docs":" Rounds each component to the biggest integer equal or lower than the original value.","sig":null,"attributes":[{"value":"/ Rounds each component to the biggest integer equal or lower than the original value.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":243032,"byte_end":243120,"line_start":253,"line_end":253,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":243125,"byte_end":243128,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ This behavior is preserved for negative values (unlike the basic cast).","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":243133,"byte_end":243208,"line_start":255,"line_end":255,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":243213,"byte_end":243216,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":243221,"byte_end":243232,"line_start":257,"line_end":257,"column_start":5,"column_end":16}},{"value":"/ # use euclid::size2;","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":243237,"byte_end":243261,"line_start":258,"line_end":258,"column_start":5,"column_end":29}},{"value":"/ enum Mm {}","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":243266,"byte_end":243280,"line_start":259,"line_end":259,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":243285,"byte_end":243288,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(size2::<_, Mm>(-0.1, -0.8).floor(), size2::<_, Mm>(-1.0, -1.0))","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":243293,"byte_end":243371,"line_start":261,"line_end":261,"column_start":5,"column_end":83}},{"value":"/ ```","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":243376,"byte_end":243383,"line_start":262,"line_end":262,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":243388,"byte_end":243397,"line_start":263,"line_end":263,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":243402,"byte_end":243413,"line_start":264,"line_end":264,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2668},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":243618,"byte_end":243622,"line_start":273,"line_end":273,"column_start":12,"column_end":16},"name":"area","qualname":"<Size2D<T, U>>::area","value":"pub fn area(Self) -> T::Output where T: Mul","parent":null,"children":[],"decl_id":null,"docs":" Returns result of multiplication of both components\n","sig":null,"attributes":[{"value":"/ Returns result of multiplication of both components","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":243551,"byte_end":243606,"line_start":272,"line_end":272,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2669},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":244361,"byte_end":244365,"line_start":298,"line_end":298,"column_start":12,"column_end":16},"name":"lerp","qualname":"<Size2D<T, U>>::lerp","value":"pub fn lerp(Self, Self, T) -> Self where T: One + Sub<Output = T> + Mul<Output\n= T> + Add<Output = T>","parent":null,"children":[],"decl_id":null,"docs":" Linearly interpolate each component between this size and another size.","sig":null,"attributes":[{"value":"/ Linearly interpolate each component between this size and another size.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":243718,"byte_end":243793,"line_start":280,"line_end":280,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":243798,"byte_end":243801,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":243806,"byte_end":243819,"line_start":282,"line_end":282,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":243824,"byte_end":243827,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":243832,"byte_end":243843,"line_start":284,"line_end":284,"column_start":5,"column_end":16}},{"value":"/ use euclid::size2;","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":243848,"byte_end":243870,"line_start":285,"line_end":285,"column_start":5,"column_end":27}},{"value":"/ use euclid::default::Size2D;","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":243875,"byte_end":243907,"line_start":286,"line_end":286,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":243912,"byte_end":243915,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ let from: Size2D<_> = size2(0.0, 10.0);","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":243920,"byte_end":243963,"line_start":288,"line_end":288,"column_start":5,"column_end":48}},{"value":"/ let to:  Size2D<_> = size2(8.0, -4.0);","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":243968,"byte_end":244010,"line_start":289,"line_end":289,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":244015,"byte_end":244018,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(from.lerp(to, -1.0), size2(-8.0,  24.0));","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":244023,"byte_end":244079,"line_start":291,"line_end":291,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(from.lerp(to,  0.0), size2( 0.0,  10.0));","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":244084,"byte_end":244140,"line_start":292,"line_end":292,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(from.lerp(to,  0.5), size2( 4.0,   3.0));","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":244145,"byte_end":244201,"line_start":293,"line_end":293,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(from.lerp(to,  1.0), size2( 8.0,  -4.0));","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":244206,"byte_end":244262,"line_start":294,"line_end":294,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(from.lerp(to,  2.0), size2(16.0, -18.0));","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":244267,"byte_end":244323,"line_start":295,"line_end":295,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":244328,"byte_end":244335,"line_start":296,"line_end":296,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":244340,"byte_end":244349,"line_start":297,"line_end":297,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2673},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":244987,"byte_end":244991,"line_start":314,"line_end":314,"column_start":12,"column_end":16},"name":"cast","qualname":"<Size2D<T, U>>::cast","value":"pub fn cast<NewT: NumCast>(Self) -> Size2D<NewT, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast from one numeric representation to another, preserving the units.","sig":null,"attributes":[{"value":"/ Cast from one numeric representation to another, preserving the units.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":244607,"byte_end":244681,"line_start":308,"line_end":308,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":244686,"byte_end":244689,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point to integer coordinates, the decimals are truncated","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":244694,"byte_end":244781,"line_start":310,"line_end":310,"column_start":5,"column_end":92}},{"value":"/ as one would expect from a simple cast, but this behavior does not always make sense","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":244786,"byte_end":244874,"line_start":311,"line_end":311,"column_start":5,"column_end":93}},{"value":"/ geometrically. Consider using `round()`, `ceil()` or `floor()` before casting.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":244879,"byte_end":244961,"line_start":312,"line_end":312,"column_start":5,"column_end":87}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":244966,"byte_end":244975,"line_start":313,"line_end":313,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2675},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":245453,"byte_end":245461,"line_start":323,"line_end":323,"column_start":12,"column_end":20},"name":"try_cast","qualname":"<Size2D<T, U>>::try_cast","value":"pub fn try_cast<NewT: NumCast>(Self) -> Option<Size2D<NewT, U>>","parent":null,"children":[],"decl_id":null,"docs":" Fallible cast from one numeric representation to another, preserving the units.","sig":null,"attributes":[{"value":"/ Fallible cast from one numeric representation to another, preserving the units.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":245078,"byte_end":245161,"line_start":318,"line_end":318,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":245166,"byte_end":245169,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point to integer coordinates, the decimals are truncated","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":245174,"byte_end":245261,"line_start":320,"line_end":320,"column_start":5,"column_end":92}},{"value":"/ as one would expect from a simple cast, but this behavior does not always make sense","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":245266,"byte_end":245354,"line_start":321,"line_end":321,"column_start":5,"column_end":93}},{"value":"/ geometrically. Consider using `round()`, `ceil()` or `floor()` before casting.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":245359,"byte_end":245441,"line_start":322,"line_end":322,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":2677},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":245788,"byte_end":245794,"line_start":334,"line_end":334,"column_start":12,"column_end":18},"name":"to_f32","qualname":"<Size2D<T, U>>::to_f32","value":"pub fn to_f32(Self) -> Size2D<f32, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `f32` size.\n","sig":null,"attributes":[{"value":"/ Cast into an `f32` size.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":245734,"byte_end":245762,"line_start":332,"line_end":332,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":245767,"byte_end":245776,"line_start":333,"line_end":333,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2678},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":245906,"byte_end":245912,"line_start":340,"line_end":340,"column_start":12,"column_end":18},"name":"to_f64","qualname":"<Size2D<T, U>>::to_f64","value":"pub fn to_f64(Self) -> Size2D<f64, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `f64` size.\n","sig":null,"attributes":[{"value":"/ Cast into an `f64` size.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":245852,"byte_end":245880,"line_start":338,"line_end":338,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":245885,"byte_end":245894,"line_start":339,"line_end":339,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2679},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":246261,"byte_end":246269,"line_start":350,"line_end":350,"column_start":12,"column_end":20},"name":"to_usize","qualname":"<Size2D<T, U>>::to_usize","value":"pub fn to_usize(Self) -> Size2D<usize, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `uint` size, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `uint` size, truncating decimals if any.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":245970,"byte_end":246027,"line_start":344,"line_end":344,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":246032,"byte_end":246035,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point sizes, it is worth considering whether","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":246040,"byte_end":246115,"line_start":346,"line_end":346,"column_start":5,"column_end":80}},{"value":"/ to `round()`, `ceil()` or `floor()` before the cast in order to obtain","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":246120,"byte_end":246194,"line_start":347,"line_end":347,"column_start":5,"column_end":79}},{"value":"/ the desired conversion behavior.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":246199,"byte_end":246235,"line_start":348,"line_end":348,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":246240,"byte_end":246249,"line_start":349,"line_end":349,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2680},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":246619,"byte_end":246625,"line_start":360,"line_end":360,"column_start":12,"column_end":18},"name":"to_u32","qualname":"<Size2D<T, U>>::to_u32","value":"pub fn to_u32(Self) -> Size2D<u32, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `u32` size, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `u32` size, truncating decimals if any.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":246329,"byte_end":246385,"line_start":354,"line_end":354,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":246390,"byte_end":246393,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point sizes, it is worth considering whether","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":246398,"byte_end":246473,"line_start":356,"line_end":356,"column_start":5,"column_end":80}},{"value":"/ to `round()`, `ceil()` or `floor()` before the cast in order to obtain","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":246478,"byte_end":246552,"line_start":357,"line_end":357,"column_start":5,"column_end":79}},{"value":"/ the desired conversion behavior.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":246557,"byte_end":246593,"line_start":358,"line_end":358,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":246598,"byte_end":246607,"line_start":359,"line_end":359,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2681},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":246973,"byte_end":246979,"line_start":370,"line_end":370,"column_start":12,"column_end":18},"name":"to_u64","qualname":"<Size2D<T, U>>::to_u64","value":"pub fn to_u64(Self) -> Size2D<u64, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `u64` size, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `u64` size, truncating decimals if any.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":246683,"byte_end":246739,"line_start":364,"line_end":364,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":246744,"byte_end":246747,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point sizes, it is worth considering whether","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":246752,"byte_end":246827,"line_start":366,"line_end":366,"column_start":5,"column_end":80}},{"value":"/ to `round()`, `ceil()` or `floor()` before the cast in order to obtain","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":246832,"byte_end":246906,"line_start":367,"line_end":367,"column_start":5,"column_end":79}},{"value":"/ the desired conversion behavior.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":246911,"byte_end":246947,"line_start":368,"line_end":368,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":246952,"byte_end":246961,"line_start":369,"line_end":369,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2682},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":247327,"byte_end":247333,"line_start":380,"line_end":380,"column_start":12,"column_end":18},"name":"to_i32","qualname":"<Size2D<T, U>>::to_i32","value":"pub fn to_i32(Self) -> Size2D<i32, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `i32` size, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `i32` size, truncating decimals if any.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":247037,"byte_end":247093,"line_start":374,"line_end":374,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":247098,"byte_end":247101,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point sizes, it is worth considering whether","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":247106,"byte_end":247181,"line_start":376,"line_end":376,"column_start":5,"column_end":80}},{"value":"/ to `round()`, `ceil()` or `floor()` before the cast in order to obtain","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":247186,"byte_end":247260,"line_start":377,"line_end":377,"column_start":5,"column_end":79}},{"value":"/ the desired conversion behavior.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":247265,"byte_end":247301,"line_start":378,"line_end":378,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":247306,"byte_end":247315,"line_start":379,"line_end":379,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2683},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":247681,"byte_end":247687,"line_start":390,"line_end":390,"column_start":12,"column_end":18},"name":"to_i64","qualname":"<Size2D<T, U>>::to_i64","value":"pub fn to_i64(Self) -> Size2D<i64, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `i64` size, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `i64` size, truncating decimals if any.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":247391,"byte_end":247447,"line_start":384,"line_end":384,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":247452,"byte_end":247455,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point sizes, it is worth considering whether","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":247460,"byte_end":247535,"line_start":386,"line_end":386,"column_start":5,"column_end":80}},{"value":"/ to `round()`, `ceil()` or `floor()` before the cast in order to obtain","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":247540,"byte_end":247614,"line_start":387,"line_end":387,"column_start":5,"column_end":79}},{"value":"/ the desired conversion behavior.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":247619,"byte_end":247655,"line_start":388,"line_end":388,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":247660,"byte_end":247669,"line_start":389,"line_end":389,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2687},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":247849,"byte_end":247858,"line_start":398,"line_end":398,"column_start":12,"column_end":21},"name":"is_finite","qualname":"<Size2D<T, U>>::is_finite","value":"pub fn is_finite(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if all members are finite.\n","sig":null,"attributes":[{"value":"/ Returns true if all members are finite.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":247780,"byte_end":247823,"line_start":396,"line_end":396,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":247828,"byte_end":247837,"line_start":397,"line_end":397,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2691},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":248248,"byte_end":248251,"line_start":409,"line_end":409,"column_start":12,"column_end":15},"name":"abs","qualname":"<Size2D<T, U>>::abs","value":"pub fn abs(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the absolute value of each component.","sig":null,"attributes":[{"value":"/ Computes the absolute value of each component.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":247980,"byte_end":248030,"line_start":404,"line_end":404,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":248035,"byte_end":248038,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ For `f32` and `f64`, `NaN` will be returned for component if the component is `NaN`.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":248043,"byte_end":248131,"line_start":406,"line_end":406,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":248136,"byte_end":248139,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ For signed integers, `::MIN` will be returned for component if the component is `::MIN`.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":248144,"byte_end":248236,"line_start":408,"line_end":408,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":2692},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":248438,"byte_end":248449,"line_start":414,"line_end":414,"column_start":12,"column_end":23},"name":"is_positive","qualname":"<Size2D<T, U>>::is_positive","value":"pub fn is_positive(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if both components is positive and `false` any component is zero or negative.\n","sig":null,"attributes":[{"value":"/ Returns `true` if both components is positive and `false` any component is zero or negative.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":248330,"byte_end":248426,"line_start":413,"line_end":413,"column_start":5,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":2696},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":248687,"byte_end":248690,"line_start":422,"line_end":422,"column_start":12,"column_end":15},"name":"min","qualname":"<Size2D<T, U>>::min","value":"pub fn min(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the size each component of which are minimum of this size and another.\n","sig":null,"attributes":[{"value":"/ Returns the size each component of which are minimum of this size and another.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":248579,"byte_end":248661,"line_start":420,"line_end":420,"column_start":5,"column_end":87}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":248666,"byte_end":248675,"line_start":421,"line_end":421,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2697},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":248915,"byte_end":248918,"line_start":428,"line_end":428,"column_start":12,"column_end":15},"name":"max","qualname":"<Size2D<T, U>>::max","value":"pub fn max(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the size each component of which are maximum of this size and another.\n","sig":null,"attributes":[{"value":"/ Returns the size each component of which are maximum of this size and another.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":248807,"byte_end":248889,"line_start":426,"line_end":426,"column_start":5,"column_end":87}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":248894,"byte_end":248903,"line_start":427,"line_end":427,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2698},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":249228,"byte_end":249233,"line_start":437,"line_end":437,"column_start":12,"column_end":17},"name":"clamp","qualname":"<Size2D<T, U>>::clamp","value":"pub fn clamp(Self, Self, Self) -> Self where T: Copy","parent":null,"children":[],"decl_id":null,"docs":" Returns the size each component of which clamped by corresponding\n components of `start` and `end`.","sig":null,"attributes":[{"value":"/ Returns the size each component of which clamped by corresponding","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":249035,"byte_end":249104,"line_start":432,"line_end":432,"column_start":5,"column_end":74}},{"value":"/ components of `start` and `end`.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":249109,"byte_end":249145,"line_start":433,"line_end":433,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":249150,"byte_end":249153,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ Shortcut for `self.max(start).min(end)`.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":249158,"byte_end":249202,"line_start":435,"line_end":435,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":249207,"byte_end":249216,"line_start":436,"line_end":436,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2699},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":249459,"byte_end":249467,"line_start":446,"line_end":446,"column_start":12,"column_end":20},"name":"contains","qualname":"<Size2D<T, U>>::contains","value":"pub fn contains(Self, Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":249438,"byte_end":249447,"line_start":445,"line_end":445,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2700},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":249663,"byte_end":249675,"line_start":451,"line_end":451,"column_start":12,"column_end":24},"name":"greater_than","qualname":"<Size2D<T, U>>::greater_than","value":"pub fn greater_than(Self, Self) -> BoolVector2D","parent":null,"children":[],"decl_id":null,"docs":" Returns vector with results of \"greater then\" operation on each component.\n","sig":null,"attributes":[{"value":"/ Returns vector with results of \"greater then\" operation on each component.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":249573,"byte_end":249651,"line_start":450,"line_end":450,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":2701},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":249929,"byte_end":249939,"line_start":459,"line_end":459,"column_start":12,"column_end":22},"name":"lower_than","qualname":"<Size2D<T, U>>::lower_than","value":"pub fn lower_than(Self, Self) -> BoolVector2D","parent":null,"children":[],"decl_id":null,"docs":" Returns vector with results of \"lower then\" operation on each component.\n","sig":null,"attributes":[{"value":"/ Returns vector with results of \"lower then\" operation on each component.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":249841,"byte_end":249917,"line_start":458,"line_end":458,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":2702},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":250187,"byte_end":250195,"line_start":467,"line_end":467,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Size2D<T, U>>::is_empty","value":"pub fn is_empty(Self) -> bool where T: Zero","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if any component of size is zero, negative, or NaN.\n","sig":null,"attributes":[{"value":"/ Returns `true` if any component of size is zero, negative, or NaN.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":250105,"byte_end":250175,"line_start":466,"line_end":466,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2706},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":250564,"byte_end":250569,"line_start":480,"line_end":480,"column_start":12,"column_end":17},"name":"equal","qualname":"<Size2D<T, U>>::equal","value":"pub fn equal(Self, Self) -> BoolVector2D","parent":null,"children":[],"decl_id":null,"docs":" Returns vector with results of \"equal\" operation on each component.\n","sig":null,"attributes":[{"value":"/ Returns vector with results of \"equal\" operation on each component.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":250481,"byte_end":250552,"line_start":479,"line_end":479,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":2707},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":250824,"byte_end":250833,"line_start":488,"line_end":488,"column_start":12,"column_end":21},"name":"not_equal","qualname":"<Size2D<T, U>>::not_equal","value":"pub fn not_equal(Self, Self) -> BoolVector2D","parent":null,"children":[],"decl_id":null,"docs":" Returns vector with results of \"not equal\" operation on each component.\n","sig":null,"attributes":[{"value":"/ Returns vector with results of \"not equal\" operation on each component.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":250737,"byte_end":250812,"line_start":487,"line_end":487,"column_start":5,"column_end":80}}]},{"kind":"Function","id":{"krate":0,"index":2801},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":254954,"byte_end":254959,"line_start":657,"line_end":657,"column_start":14,"column_end":19},"name":"size2","qualname":"::size::size2","value":"pub const fn size2<T, U>(T, T) -> Size2D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Shorthand for `Size2D::new(w, h)`.\n","sig":null,"attributes":[{"value":"/ Shorthand for `Size2D::new(w, h)`.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":254892,"byte_end":254930,"line_start":655,"line_end":655,"column_start":1,"column_end":39}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":254931,"byte_end":254940,"line_start":656,"line_end":656,"column_start":1,"column_end":10}}]},{"kind":"Struct","id":{"krate":0,"index":2828},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":262454,"byte_end":262460,"line_start":937,"line_end":937,"column_start":12,"column_end":18},"name":"Size3D","qualname":"::size::Size3D","value":"Size3D { width, height, depth, _unit }","parent":null,"children":[{"krate":0,"index":2831},{"krate":0,"index":2832},{"krate":0,"index":2833},{"krate":0,"index":2834}],"decl_id":null,"docs":" A 3d size tagged with a unit.\n","sig":null,"attributes":[{"value":"/ A 3d size tagged with a unit.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":262398,"byte_end":262431,"line_start":935,"line_end":935,"column_start":1,"column_end":34}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":262432,"byte_end":262442,"line_start":936,"line_end":936,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":2831},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":262548,"byte_end":262553,"line_start":939,"line_end":939,"column_start":9,"column_end":14},"name":"width","qualname":"::size::Size3D::width","value":"T","parent":{"krate":0,"index":2828},"children":[],"decl_id":null,"docs":" The extent of the element in the `U` units along the `x` axis.\n","sig":null,"attributes":[{"value":"/ The extent of the element in the `U` units along the `x` axis.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":262473,"byte_end":262539,"line_start":938,"line_end":938,"column_start":5,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":2832},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":262637,"byte_end":262643,"line_start":941,"line_end":941,"column_start":9,"column_end":15},"name":"height","qualname":"::size::Size3D::height","value":"T","parent":{"krate":0,"index":2828},"children":[],"decl_id":null,"docs":" The extent of the element in the `U` units along the `y` axis.\n","sig":null,"attributes":[{"value":"/ The extent of the element in the `U` units along the `y` axis.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":262562,"byte_end":262628,"line_start":940,"line_end":940,"column_start":5,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":2833},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":262727,"byte_end":262732,"line_start":943,"line_end":943,"column_start":9,"column_end":14},"name":"depth","qualname":"::size::Size3D::depth","value":"T","parent":{"krate":0,"index":2828},"children":[],"decl_id":null,"docs":" The extent of the element in the `U` units along the `z` axis.\n","sig":null,"attributes":[{"value":"/ The extent of the element in the `U` units along the `z` axis.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":262652,"byte_end":262718,"line_start":942,"line_end":942,"column_start":5,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":2834},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":262764,"byte_end":262769,"line_start":945,"line_end":945,"column_start":9,"column_end":14},"name":"_unit","qualname":"::size::Size3D::_unit","value":"core::marker::PhantomData<U>","parent":{"krate":0,"index":2828},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2865},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":264948,"byte_end":264952,"line_start":1035,"line_end":1035,"column_start":12,"column_end":16},"name":"zero","qualname":"<Size3D<T, U>>::zero","value":"pub fn zero() -> Self where T: Zero","parent":null,"children":[],"decl_id":null,"docs":" The same as [`Zero::zero()`] but available without importing trait.","sig":null,"attributes":[{"value":"/ The same as [`Zero::zero()`] but available without importing trait.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":264795,"byte_end":264866,"line_start":1032,"line_end":1032,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":264871,"byte_end":264874,"line_start":1033,"line_end":1033,"column_start":5,"column_end":8}},{"value":"/ [`Zero::zero()`]: ./num/trait.Zero.html#tymethod.zero","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":264879,"byte_end":264936,"line_start":1034,"line_end":1034,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2866},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":265138,"byte_end":265141,"line_start":1044,"line_end":1044,"column_start":18,"column_end":21},"name":"new","qualname":"<Size3D<T, U>>::new","value":"pub const fn new(T, T, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructor taking scalar values.\n","sig":null,"attributes":[{"value":"/ Constructor taking scalar values.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":265069,"byte_end":265106,"line_start":1042,"line_end":1042,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":265111,"byte_end":265120,"line_start":1043,"line_end":1043,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2867},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":265389,"byte_end":265401,"line_start":1054,"line_end":1054,"column_start":12,"column_end":24},"name":"from_lengths","qualname":"<Size3D<T, U>>::from_lengths","value":"pub fn from_lengths(Length<T, U>, Length<T, U>, Length<T, U>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructor taking scalar strongly typed lengths.\n","sig":null,"attributes":[{"value":"/ Constructor taking scalar strongly typed lengths.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":265310,"byte_end":265363,"line_start":1052,"line_end":1052,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":265368,"byte_end":265377,"line_start":1053,"line_end":1053,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2868},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":265618,"byte_end":265623,"line_start":1060,"line_end":1060,"column_start":12,"column_end":17},"name":"splat","qualname":"<Size3D<T, U>>::splat","value":"pub fn splat(T) -> Self where T: Clone","parent":null,"children":[],"decl_id":null,"docs":" Constructor setting all components to the same value.\n","sig":null,"attributes":[{"value":"/ Constructor setting all components to the same value.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":265535,"byte_end":265592,"line_start":1058,"line_end":1058,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":265597,"byte_end":265606,"line_start":1059,"line_end":1059,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2869},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":265887,"byte_end":265899,"line_start":1074,"line_end":1074,"column_start":12,"column_end":24},"name":"from_untyped","qualname":"<Size3D<T, U>>::from_untyped","value":"pub fn from_untyped(Size3D<T, UnknownUnit>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Tag a unitless value with units.\n","sig":null,"attributes":[{"value":"/ Tag a unitless value with units.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":265825,"byte_end":265861,"line_start":1072,"line_end":1072,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":265866,"byte_end":265875,"line_start":1073,"line_end":1073,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2873},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":266140,"byte_end":266148,"line_start":1082,"line_end":1082,"column_start":12,"column_end":20},"name":"to_array","qualname":"<Size3D<T, U>>::to_array","value":"pub fn to_array(Self) -> [T; ]","parent":null,"children":[],"decl_id":null,"docs":" Return this size as an array of three elements (width, then height, then depth).\n","sig":null,"attributes":[{"value":"/ Return this size as an array of three elements (width, then height, then depth).","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":266030,"byte_end":266114,"line_start":1080,"line_end":1080,"column_start":5,"column_end":89}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":266119,"byte_end":266128,"line_start":1081,"line_end":1081,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2875},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":266334,"byte_end":266342,"line_start":1088,"line_end":1088,"column_start":12,"column_end":20},"name":"to_tuple","qualname":"<Size3D<T, U>>::to_tuple","value":"pub fn to_tuple(Self) -> (T, T, T)","parent":null,"children":[],"decl_id":null,"docs":" Return this size as an array of three elements (width, then height, then depth).\n","sig":null,"attributes":[{"value":"/ Return this size as an array of three elements (width, then height, then depth).","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":266224,"byte_end":266308,"line_start":1086,"line_end":1086,"column_start":5,"column_end":89}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":266313,"byte_end":266322,"line_start":1087,"line_end":1087,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2876},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":266509,"byte_end":266518,"line_start":1094,"line_end":1094,"column_start":12,"column_end":21},"name":"to_vector","qualname":"<Size3D<T, U>>::to_vector","value":"pub fn to_vector(Self) -> Vector3D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Return this size as a vector with width, height and depth.\n","sig":null,"attributes":[{"value":"/ Return this size as a vector with width, height and depth.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":266421,"byte_end":266483,"line_start":1092,"line_end":1092,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":266488,"byte_end":266497,"line_start":1093,"line_end":1093,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2877},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":266686,"byte_end":266696,"line_start":1100,"line_end":1100,"column_start":12,"column_end":22},"name":"to_untyped","qualname":"<Size3D<T, U>>::to_untyped","value":"pub fn to_untyped(Self) -> Size3D<T, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":" Drop the units, preserving only the numeric value.\n","sig":null,"attributes":[{"value":"/ Drop the units, preserving only the numeric value.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":266606,"byte_end":266660,"line_start":1098,"line_end":1098,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":266665,"byte_end":266674,"line_start":1099,"line_end":1099,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2878},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":266810,"byte_end":266819,"line_start":1106,"line_end":1106,"column_start":12,"column_end":21},"name":"cast_unit","qualname":"<Size3D<T, U>>::cast_unit","value":"pub fn cast_unit<V>(Self) -> Size3D<T, V>","parent":null,"children":[],"decl_id":null,"docs":" Cast the unit\n","sig":null,"attributes":[{"value":"/ Cast the unit","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":266767,"byte_end":266784,"line_start":1104,"line_end":1104,"column_start":5,"column_end":22}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":266789,"byte_end":266798,"line_start":1105,"line_end":1105,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2880},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":267284,"byte_end":267289,"line_start":1122,"line_end":1122,"column_start":12,"column_end":17},"name":"round","qualname":"<Size3D<T, U>>::round","value":"pub fn round(Self) -> Self where T: Round","parent":null,"children":[],"decl_id":null,"docs":" Rounds each component to the nearest integer value.","sig":null,"attributes":[{"value":"/ Rounds each component to the nearest integer value.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":266915,"byte_end":266970,"line_start":1110,"line_end":1110,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":266975,"byte_end":266978,"line_start":1111,"line_end":1111,"column_start":5,"column_end":8}},{"value":"/ This behavior is preserved for negative values (unlike the basic cast).","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":266983,"byte_end":267058,"line_start":1112,"line_end":1112,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":267063,"byte_end":267066,"line_start":1113,"line_end":1113,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":267071,"byte_end":267082,"line_start":1114,"line_end":1114,"column_start":5,"column_end":16}},{"value":"/ # use euclid::size3;","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":267087,"byte_end":267111,"line_start":1115,"line_end":1115,"column_start":5,"column_end":29}},{"value":"/ enum Mm {}","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":267116,"byte_end":267130,"line_start":1116,"line_end":1116,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":267135,"byte_end":267138,"line_start":1117,"line_end":1117,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(size3::<_, Mm>(-0.1, -0.8, 0.4).round(), size3::<_, Mm>(0.0, -1.0, 0.0))","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":267143,"byte_end":267230,"line_start":1118,"line_end":1118,"column_start":5,"column_end":92}},{"value":"/ ```","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":267235,"byte_end":267242,"line_start":1119,"line_end":1119,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":267247,"byte_end":267256,"line_start":1120,"line_end":1120,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":267261,"byte_end":267272,"line_start":1121,"line_end":1121,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2881},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":267833,"byte_end":267837,"line_start":1141,"line_end":1141,"column_start":12,"column_end":16},"name":"ceil","qualname":"<Size3D<T, U>>::ceil","value":"pub fn ceil(Self) -> Self where T: Ceil","parent":null,"children":[],"decl_id":null,"docs":" Rounds each component to the smallest integer equal or greater than the original value.","sig":null,"attributes":[{"value":"/ Rounds each component to the smallest integer equal or greater than the original value.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":267430,"byte_end":267521,"line_start":1129,"line_end":1129,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":267526,"byte_end":267529,"line_start":1130,"line_end":1130,"column_start":5,"column_end":8}},{"value":"/ This behavior is preserved for negative values (unlike the basic cast).","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":267534,"byte_end":267609,"line_start":1131,"line_end":1131,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":267614,"byte_end":267617,"line_start":1132,"line_end":1132,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":267622,"byte_end":267633,"line_start":1133,"line_end":1133,"column_start":5,"column_end":16}},{"value":"/ # use euclid::size3;","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":267638,"byte_end":267662,"line_start":1134,"line_end":1134,"column_start":5,"column_end":29}},{"value":"/ enum Mm {}","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":267667,"byte_end":267681,"line_start":1135,"line_end":1135,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":267686,"byte_end":267689,"line_start":1136,"line_end":1136,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(size3::<_, Mm>(-0.1, -0.8, 0.4).ceil(), size3::<_, Mm>(0.0, 0.0, 1.0))","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":267694,"byte_end":267779,"line_start":1137,"line_end":1137,"column_start":5,"column_end":90}},{"value":"/ ```","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":267784,"byte_end":267791,"line_start":1138,"line_end":1138,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":267796,"byte_end":267805,"line_start":1139,"line_end":1139,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":267810,"byte_end":267821,"line_start":1140,"line_end":1140,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2882},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":268377,"byte_end":268382,"line_start":1160,"line_end":1160,"column_start":12,"column_end":17},"name":"floor","qualname":"<Size3D<T, U>>::floor","value":"pub fn floor(Self) -> Self where T: Floor","parent":null,"children":[],"decl_id":null,"docs":" Rounds each component to the biggest integer equal or lower than the original value.","sig":null,"attributes":[{"value":"/ Rounds each component to the biggest integer equal or lower than the original value.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":267974,"byte_end":268062,"line_start":1148,"line_end":1148,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":268067,"byte_end":268070,"line_start":1149,"line_end":1149,"column_start":5,"column_end":8}},{"value":"/ This behavior is preserved for negative values (unlike the basic cast).","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":268075,"byte_end":268150,"line_start":1150,"line_end":1150,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":268155,"byte_end":268158,"line_start":1151,"line_end":1151,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":268163,"byte_end":268174,"line_start":1152,"line_end":1152,"column_start":5,"column_end":16}},{"value":"/ # use euclid::size3;","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":268179,"byte_end":268203,"line_start":1153,"line_end":1153,"column_start":5,"column_end":29}},{"value":"/ enum Mm {}","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":268208,"byte_end":268222,"line_start":1154,"line_end":1154,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":268227,"byte_end":268230,"line_start":1155,"line_end":1155,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(size3::<_, Mm>(-0.1, -0.8, 0.4).floor(), size3::<_, Mm>(-1.0, -1.0, 0.0))","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":268235,"byte_end":268323,"line_start":1156,"line_end":1156,"column_start":5,"column_end":93}},{"value":"/ ```","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":268328,"byte_end":268335,"line_start":1157,"line_end":1157,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":268340,"byte_end":268349,"line_start":1158,"line_end":1158,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":268354,"byte_end":268365,"line_start":1159,"line_end":1159,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2883},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":268589,"byte_end":268595,"line_start":1168,"line_end":1168,"column_start":12,"column_end":18},"name":"volume","qualname":"<Size3D<T, U>>::volume","value":"pub fn volume(Self) -> T where T: Mul<Output = T>","parent":null,"children":[],"decl_id":null,"docs":" Returns result of multiplication of all components\n","sig":null,"attributes":[{"value":"/ Returns result of multiplication of all components","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":268523,"byte_end":268577,"line_start":1167,"line_end":1167,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":2884},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":269378,"byte_end":269382,"line_start":1193,"line_end":1193,"column_start":12,"column_end":16},"name":"lerp","qualname":"<Size3D<T, U>>::lerp","value":"pub fn lerp(Self, Self, T) -> Self where T: One + Sub<Output = T> + Mul<Output\n= T> + Add<Output = T>","parent":null,"children":[],"decl_id":null,"docs":" Linearly interpolate between this size and another size.","sig":null,"attributes":[{"value":"/ Linearly interpolate between this size and another size.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":268708,"byte_end":268768,"line_start":1175,"line_end":1175,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":268773,"byte_end":268776,"line_start":1176,"line_end":1176,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":268781,"byte_end":268794,"line_start":1177,"line_end":1177,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":268799,"byte_end":268802,"line_start":1178,"line_end":1178,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":268807,"byte_end":268818,"line_start":1179,"line_end":1179,"column_start":5,"column_end":16}},{"value":"/ use euclid::size3;","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":268823,"byte_end":268845,"line_start":1180,"line_end":1180,"column_start":5,"column_end":27}},{"value":"/ use euclid::default::Size3D;","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":268850,"byte_end":268882,"line_start":1181,"line_end":1181,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":268887,"byte_end":268890,"line_start":1182,"line_end":1182,"column_start":5,"column_end":8}},{"value":"/ let from: Size3D<_> = size3(0.0, 10.0, -1.0);","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":268895,"byte_end":268944,"line_start":1183,"line_end":1183,"column_start":5,"column_end":54}},{"value":"/ let to:  Size3D<_> = size3(8.0, -4.0,  0.0);","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":268949,"byte_end":268997,"line_start":1184,"line_end":1184,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":269002,"byte_end":269005,"line_start":1185,"line_end":1185,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(from.lerp(to, -1.0), size3(-8.0,  24.0, -2.0));","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":269010,"byte_end":269072,"line_start":1186,"line_end":1186,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(from.lerp(to,  0.0), size3( 0.0,  10.0, -1.0));","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":269077,"byte_end":269139,"line_start":1187,"line_end":1187,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(from.lerp(to,  0.5), size3( 4.0,   3.0, -0.5));","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":269144,"byte_end":269206,"line_start":1188,"line_end":1188,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(from.lerp(to,  1.0), size3( 8.0,  -4.0,  0.0));","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":269211,"byte_end":269273,"line_start":1189,"line_end":1189,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(from.lerp(to,  2.0), size3(16.0, -18.0,  1.0));","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":269278,"byte_end":269340,"line_start":1190,"line_end":1190,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":269345,"byte_end":269352,"line_start":1191,"line_end":1191,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":269357,"byte_end":269366,"line_start":1192,"line_end":1192,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2888},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":270004,"byte_end":270008,"line_start":1209,"line_end":1209,"column_start":12,"column_end":16},"name":"cast","qualname":"<Size3D<T, U>>::cast","value":"pub fn cast<NewT: NumCast>(Self) -> Size3D<NewT, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast from one numeric representation to another, preserving the units.","sig":null,"attributes":[{"value":"/ Cast from one numeric representation to another, preserving the units.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":269624,"byte_end":269698,"line_start":1203,"line_end":1203,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":269703,"byte_end":269706,"line_start":1204,"line_end":1204,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point to integer coordinates, the decimals are truncated","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":269711,"byte_end":269798,"line_start":1205,"line_end":1205,"column_start":5,"column_end":92}},{"value":"/ as one would expect from a simple cast, but this behavior does not always make sense","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":269803,"byte_end":269891,"line_start":1206,"line_end":1206,"column_start":5,"column_end":93}},{"value":"/ geometrically. Consider using `round()`, `ceil()` or `floor()` before casting.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":269896,"byte_end":269978,"line_start":1207,"line_end":1207,"column_start":5,"column_end":87}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":269983,"byte_end":269992,"line_start":1208,"line_end":1208,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2890},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":270470,"byte_end":270478,"line_start":1218,"line_end":1218,"column_start":12,"column_end":20},"name":"try_cast","qualname":"<Size3D<T, U>>::try_cast","value":"pub fn try_cast<NewT: NumCast>(Self) -> Option<Size3D<NewT, U>>","parent":null,"children":[],"decl_id":null,"docs":" Fallible cast from one numeric representation to another, preserving the units.","sig":null,"attributes":[{"value":"/ Fallible cast from one numeric representation to another, preserving the units.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":270095,"byte_end":270178,"line_start":1213,"line_end":1213,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":270183,"byte_end":270186,"line_start":1214,"line_end":1214,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point to integer coordinates, the decimals are truncated","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":270191,"byte_end":270278,"line_start":1215,"line_end":1215,"column_start":5,"column_end":92}},{"value":"/ as one would expect from a simple cast, but this behavior does not always make sense","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":270283,"byte_end":270371,"line_start":1216,"line_end":1216,"column_start":5,"column_end":93}},{"value":"/ geometrically. Consider using `round()`, `ceil()` or `floor()` before casting.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":270376,"byte_end":270458,"line_start":1217,"line_end":1217,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":2892},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":270891,"byte_end":270897,"line_start":1233,"line_end":1233,"column_start":12,"column_end":18},"name":"to_f32","qualname":"<Size3D<T, U>>::to_f32","value":"pub fn to_f32(Self) -> Size3D<f32, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `f32` size.\n","sig":null,"attributes":[{"value":"/ Cast into an `f32` size.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":270837,"byte_end":270865,"line_start":1231,"line_end":1231,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":270870,"byte_end":270879,"line_start":1232,"line_end":1232,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2893},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":271009,"byte_end":271015,"line_start":1239,"line_end":1239,"column_start":12,"column_end":18},"name":"to_f64","qualname":"<Size3D<T, U>>::to_f64","value":"pub fn to_f64(Self) -> Size3D<f64, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `f64` size.\n","sig":null,"attributes":[{"value":"/ Cast into an `f64` size.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":270955,"byte_end":270983,"line_start":1237,"line_end":1237,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":270988,"byte_end":270997,"line_start":1238,"line_end":1238,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2894},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":271364,"byte_end":271372,"line_start":1249,"line_end":1249,"column_start":12,"column_end":20},"name":"to_usize","qualname":"<Size3D<T, U>>::to_usize","value":"pub fn to_usize(Self) -> Size3D<usize, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `uint` size, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `uint` size, truncating decimals if any.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":271073,"byte_end":271130,"line_start":1243,"line_end":1243,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":271135,"byte_end":271138,"line_start":1244,"line_end":1244,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point sizes, it is worth considering whether","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":271143,"byte_end":271218,"line_start":1245,"line_end":1245,"column_start":5,"column_end":80}},{"value":"/ to `round()`, `ceil()` or `floor()` before the cast in order to obtain","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":271223,"byte_end":271297,"line_start":1246,"line_end":1246,"column_start":5,"column_end":79}},{"value":"/ the desired conversion behavior.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":271302,"byte_end":271338,"line_start":1247,"line_end":1247,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":271343,"byte_end":271352,"line_start":1248,"line_end":1248,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2895},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":271722,"byte_end":271728,"line_start":1259,"line_end":1259,"column_start":12,"column_end":18},"name":"to_u32","qualname":"<Size3D<T, U>>::to_u32","value":"pub fn to_u32(Self) -> Size3D<u32, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `u32` size, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `u32` size, truncating decimals if any.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":271432,"byte_end":271488,"line_start":1253,"line_end":1253,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":271493,"byte_end":271496,"line_start":1254,"line_end":1254,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point sizes, it is worth considering whether","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":271501,"byte_end":271576,"line_start":1255,"line_end":1255,"column_start":5,"column_end":80}},{"value":"/ to `round()`, `ceil()` or `floor()` before the cast in order to obtain","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":271581,"byte_end":271655,"line_start":1256,"line_end":1256,"column_start":5,"column_end":79}},{"value":"/ the desired conversion behavior.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":271660,"byte_end":271696,"line_start":1257,"line_end":1257,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":271701,"byte_end":271710,"line_start":1258,"line_end":1258,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2896},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":272076,"byte_end":272082,"line_start":1269,"line_end":1269,"column_start":12,"column_end":18},"name":"to_i32","qualname":"<Size3D<T, U>>::to_i32","value":"pub fn to_i32(Self) -> Size3D<i32, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `i32` size, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `i32` size, truncating decimals if any.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":271786,"byte_end":271842,"line_start":1263,"line_end":1263,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":271847,"byte_end":271850,"line_start":1264,"line_end":1264,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point sizes, it is worth considering whether","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":271855,"byte_end":271930,"line_start":1265,"line_end":1265,"column_start":5,"column_end":80}},{"value":"/ to `round()`, `ceil()` or `floor()` before the cast in order to obtain","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":271935,"byte_end":272009,"line_start":1266,"line_end":1266,"column_start":5,"column_end":79}},{"value":"/ the desired conversion behavior.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":272014,"byte_end":272050,"line_start":1267,"line_end":1267,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":272055,"byte_end":272064,"line_start":1268,"line_end":1268,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2897},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":272430,"byte_end":272436,"line_start":1279,"line_end":1279,"column_start":12,"column_end":18},"name":"to_i64","qualname":"<Size3D<T, U>>::to_i64","value":"pub fn to_i64(Self) -> Size3D<i64, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `i64` size, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `i64` size, truncating decimals if any.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":272140,"byte_end":272196,"line_start":1273,"line_end":1273,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":272201,"byte_end":272204,"line_start":1274,"line_end":1274,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point sizes, it is worth considering whether","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":272209,"byte_end":272284,"line_start":1275,"line_end":1275,"column_start":5,"column_end":80}},{"value":"/ to `round()`, `ceil()` or `floor()` before the cast in order to obtain","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":272289,"byte_end":272363,"line_start":1276,"line_end":1276,"column_start":5,"column_end":79}},{"value":"/ the desired conversion behavior.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":272368,"byte_end":272404,"line_start":1277,"line_end":1277,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":272409,"byte_end":272418,"line_start":1278,"line_end":1278,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2901},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":272598,"byte_end":272607,"line_start":1287,"line_end":1287,"column_start":12,"column_end":21},"name":"is_finite","qualname":"<Size3D<T, U>>::is_finite","value":"pub fn is_finite(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if all members are finite.\n","sig":null,"attributes":[{"value":"/ Returns true if all members are finite.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":272529,"byte_end":272572,"line_start":1285,"line_end":1285,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":272577,"byte_end":272586,"line_start":1286,"line_end":1286,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2905},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":273023,"byte_end":273026,"line_start":1298,"line_end":1298,"column_start":12,"column_end":15},"name":"abs","qualname":"<Size3D<T, U>>::abs","value":"pub fn abs(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the absolute value of each component.","sig":null,"attributes":[{"value":"/ Computes the absolute value of each component.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":272755,"byte_end":272805,"line_start":1293,"line_end":1293,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":272810,"byte_end":272813,"line_start":1294,"line_end":1294,"column_start":5,"column_end":8}},{"value":"/ For `f32` and `f64`, `NaN` will be returned for component if the component is `NaN`.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":272818,"byte_end":272906,"line_start":1295,"line_end":1295,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":272911,"byte_end":272914,"line_start":1296,"line_end":1296,"column_start":5,"column_end":8}},{"value":"/ For signed integers, `::MIN` will be returned for component if the component is `::MIN`.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":272919,"byte_end":273011,"line_start":1297,"line_end":1297,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":2906},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":273230,"byte_end":273241,"line_start":1303,"line_end":1303,"column_start":12,"column_end":23},"name":"is_positive","qualname":"<Size3D<T, U>>::is_positive","value":"pub fn is_positive(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if all components is positive and `false` any component is zero or negative.\n","sig":null,"attributes":[{"value":"/ Returns `true` if all components is positive and `false` any component is zero or negative.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":273123,"byte_end":273218,"line_start":1302,"line_end":1302,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":2910},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":273507,"byte_end":273510,"line_start":1311,"line_end":1311,"column_start":12,"column_end":15},"name":"min","qualname":"<Size3D<T, U>>::min","value":"pub fn min(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the size each component of which are minimum of this size and another.\n","sig":null,"attributes":[{"value":"/ Returns the size each component of which are minimum of this size and another.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":273399,"byte_end":273481,"line_start":1309,"line_end":1309,"column_start":5,"column_end":87}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":273486,"byte_end":273495,"line_start":1310,"line_end":1310,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2911},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":273812,"byte_end":273815,"line_start":1321,"line_end":1321,"column_start":12,"column_end":15},"name":"max","qualname":"<Size3D<T, U>>::max","value":"pub fn max(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the size each component of which are maximum of this size and another.\n","sig":null,"attributes":[{"value":"/ Returns the size each component of which are maximum of this size and another.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":273704,"byte_end":273786,"line_start":1319,"line_end":1319,"column_start":5,"column_end":87}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":273791,"byte_end":273800,"line_start":1320,"line_end":1320,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2912},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":274202,"byte_end":274207,"line_start":1334,"line_end":1334,"column_start":12,"column_end":17},"name":"clamp","qualname":"<Size3D<T, U>>::clamp","value":"pub fn clamp(Self, Self, Self) -> Self where T: Copy","parent":null,"children":[],"decl_id":null,"docs":" Returns the size each component of which clamped by corresponding\n components of `start` and `end`.","sig":null,"attributes":[{"value":"/ Returns the size each component of which clamped by corresponding","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":274009,"byte_end":274078,"line_start":1329,"line_end":1329,"column_start":5,"column_end":74}},{"value":"/ components of `start` and `end`.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":274083,"byte_end":274119,"line_start":1330,"line_end":1330,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":274124,"byte_end":274127,"line_start":1331,"line_end":1331,"column_start":5,"column_end":8}},{"value":"/ Shortcut for `self.max(start).min(end)`.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":274132,"byte_end":274176,"line_start":1332,"line_end":1332,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":274181,"byte_end":274190,"line_start":1333,"line_end":1333,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2913},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":274433,"byte_end":274441,"line_start":1343,"line_end":1343,"column_start":12,"column_end":20},"name":"contains","qualname":"<Size3D<T, U>>::contains","value":"pub fn contains(Self, Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":274412,"byte_end":274421,"line_start":1342,"line_end":1342,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2914},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":274667,"byte_end":274679,"line_start":1349,"line_end":1349,"column_start":12,"column_end":24},"name":"greater_than","qualname":"<Size3D<T, U>>::greater_than","value":"pub fn greater_than(Self, Self) -> BoolVector3D","parent":null,"children":[],"decl_id":null,"docs":" Returns vector with results of \"greater than\" operation on each component.\n","sig":null,"attributes":[{"value":"/ Returns vector with results of \"greater than\" operation on each component.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":274577,"byte_end":274655,"line_start":1348,"line_end":1348,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":2915},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":274974,"byte_end":274984,"line_start":1358,"line_end":1358,"column_start":12,"column_end":22},"name":"lower_than","qualname":"<Size3D<T, U>>::lower_than","value":"pub fn lower_than(Self, Self) -> BoolVector3D","parent":null,"children":[],"decl_id":null,"docs":" Returns vector with results of \"lower than\" operation on each component.\n","sig":null,"attributes":[{"value":"/ Returns vector with results of \"lower than\" operation on each component.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":274886,"byte_end":274962,"line_start":1357,"line_end":1357,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":2916},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":275272,"byte_end":275280,"line_start":1367,"line_end":1367,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Size3D<T, U>>::is_empty","value":"pub fn is_empty(Self) -> bool where T: Zero","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if any component of size is zero, negative or NaN.\n","sig":null,"attributes":[{"value":"/ Returns `true` if any component of size is zero, negative or NaN.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":275191,"byte_end":275260,"line_start":1366,"line_end":1366,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":2920},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":275564,"byte_end":275569,"line_start":1378,"line_end":1378,"column_start":12,"column_end":17},"name":"equal","qualname":"<Size3D<T, U>>::equal","value":"pub fn equal(Self, Self) -> BoolVector3D","parent":null,"children":[],"decl_id":null,"docs":" Returns vector with results of \"equal\" operation on each component.\n","sig":null,"attributes":[{"value":"/ Returns vector with results of \"equal\" operation on each component.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":275481,"byte_end":275552,"line_start":1377,"line_end":1377,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":2921},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":275866,"byte_end":275875,"line_start":1387,"line_end":1387,"column_start":12,"column_end":21},"name":"not_equal","qualname":"<Size3D<T, U>>::not_equal","value":"pub fn not_equal(Self, Self) -> BoolVector3D","parent":null,"children":[],"decl_id":null,"docs":" Returns vector with results of \"not equal\" operation on each component.\n","sig":null,"attributes":[{"value":"/ Returns vector with results of \"not equal\" operation on each component.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":275779,"byte_end":275854,"line_start":1386,"line_end":1386,"column_start":5,"column_end":80}}]},{"kind":"Function","id":{"krate":0,"index":3039},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":281830,"byte_end":281835,"line_start":1643,"line_end":1643,"column_start":14,"column_end":19},"name":"size3","qualname":"::size::size3","value":"pub const fn size3<T, U>(T, T, T) -> Size3D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Shorthand for `Size3D::new(w, h, d)`.\n","sig":null,"attributes":[{"value":"/ Shorthand for `Size3D::new(w, h, d)`.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":281765,"byte_end":281806,"line_start":1641,"line_end":1641,"column_start":1,"column_end":42}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":281807,"byte_end":281816,"line_start":1642,"line_end":1642,"column_start":1,"column_end":10}}]},{"kind":"Struct","id":{"krate":0,"index":3119},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":290689,"byte_end":290700,"line_start":64,"line_end":64,"column_start":12,"column_end":23},"name":"Transform2D","qualname":"::transform2d::Transform2D","value":"Transform2D { m11, m12, m21, m22, m31, m32, _unit }","parent":null,"children":[{"krate":0,"index":3123},{"krate":0,"index":3124},{"krate":0,"index":3125},{"krate":0,"index":3126},{"krate":0,"index":3127},{"krate":0,"index":3128},{"krate":0,"index":3129}],"decl_id":null,"docs":" A 2d transform represented by a column-major 3 by 3 matrix, compressed down to 3 by 2.","sig":null,"attributes":[{"value":"/ A 2d transform represented by a column-major 3 by 3 matrix, compressed down to 3 by 2.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":289201,"byte_end":289291,"line_start":32,"line_end":32,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":289292,"byte_end":289295,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ Transforms can be parametrized over the source and destination units, to describe a","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":289296,"byte_end":289383,"line_start":34,"line_end":34,"column_start":1,"column_end":88}},{"value":"/ transformation from a space to another.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":289384,"byte_end":289427,"line_start":35,"line_end":35,"column_start":1,"column_end":44}},{"value":"/ For example, `Transform2D<f32, WorldSpace, ScreenSpace>::transform_point4d`","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":289428,"byte_end":289507,"line_start":36,"line_end":36,"column_start":1,"column_end":80}},{"value":"/ takes a `Point2D<f32, WorldSpace>` and returns a `Point2D<f32, ScreenSpace>`.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":289508,"byte_end":289589,"line_start":37,"line_end":37,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":289590,"byte_end":289593,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Transforms expose a set of convenience methods for pre- and post-transformations.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":289594,"byte_end":289679,"line_start":39,"line_end":39,"column_start":1,"column_end":86}},{"value":"/ Pre-transformations (`pre_*` methods) correspond to adding an operation that is","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":289680,"byte_end":289763,"line_start":40,"line_end":40,"column_start":1,"column_end":84}},{"value":"/ applied before the rest of the transformation, while post-transformations (`then_*`","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":289764,"byte_end":289851,"line_start":41,"line_end":41,"column_start":1,"column_end":88}},{"value":"/ methods) add an operation that is applied after.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":289852,"byte_end":289904,"line_start":42,"line_end":42,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":289905,"byte_end":289908,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ The matrix representation is conceptually equivalent to a 3 by 3 matrix transformation","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":289909,"byte_end":289999,"line_start":44,"line_end":44,"column_start":1,"column_end":91}},{"value":"/ compressed to 3 by 2 with the components that aren't needed to describe the set of 2d","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":290000,"byte_end":290089,"line_start":45,"line_end":45,"column_start":1,"column_end":90}},{"value":"/ transformations we are interested in implicitly defined:","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":290090,"byte_end":290150,"line_start":46,"line_end":46,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":290151,"byte_end":290154,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":290155,"byte_end":290166,"line_start":48,"line_end":48,"column_start":1,"column_end":12}},{"value":"/  | m11 m12 0 |   |x|   |x'|","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":290167,"byte_end":290198,"line_start":49,"line_end":49,"column_start":1,"column_end":32}},{"value":"/  | m21 m22 0 | x |y| = |y'|","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":290199,"byte_end":290230,"line_start":50,"line_end":50,"column_start":1,"column_end":32}},{"value":"/  | m31 m32 1 |   |1|   |w |","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":290231,"byte_end":290262,"line_start":51,"line_end":51,"column_start":1,"column_end":32}},{"value":"/ ```","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":290263,"byte_end":290270,"line_start":52,"line_end":52,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":290271,"byte_end":290274,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ When translating Transform2D into general matrix representations, consider that the","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":290275,"byte_end":290362,"line_start":54,"line_end":54,"column_start":1,"column_end":88}},{"value":"/ representation follows the column-major notation with column vectors.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":290363,"byte_end":290436,"line_start":55,"line_end":55,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":290437,"byte_end":290440,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ The translation terms are m31 and m32.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":290441,"byte_end":290483,"line_start":57,"line_end":57,"column_start":1,"column_end":43}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":290484,"byte_end":290494,"line_start":58,"line_end":58,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":3123},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":290724,"byte_end":290727,"line_start":65,"line_end":65,"column_start":9,"column_end":12},"name":"m11","qualname":"::transform2d::Transform2D::m11","value":"T","parent":{"krate":0,"index":3119},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3124},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":290736,"byte_end":290739,"line_start":65,"line_end":65,"column_start":21,"column_end":24},"name":"m12","qualname":"::transform2d::Transform2D::m12","value":"T","parent":{"krate":0,"index":3119},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3125},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":290752,"byte_end":290755,"line_start":66,"line_end":66,"column_start":9,"column_end":12},"name":"m21","qualname":"::transform2d::Transform2D::m21","value":"T","parent":{"krate":0,"index":3119},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3126},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":290764,"byte_end":290767,"line_start":66,"line_end":66,"column_start":21,"column_end":24},"name":"m22","qualname":"::transform2d::Transform2D::m22","value":"T","parent":{"krate":0,"index":3119},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3127},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":290780,"byte_end":290783,"line_start":67,"line_end":67,"column_start":9,"column_end":12},"name":"m31","qualname":"::transform2d::Transform2D::m31","value":"T","parent":{"krate":0,"index":3119},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3128},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":290792,"byte_end":290795,"line_start":67,"line_end":67,"column_start":21,"column_end":24},"name":"m32","qualname":"::transform2d::Transform2D::m32","value":"T","parent":{"krate":0,"index":3119},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3129},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":290827,"byte_end":290832,"line_start":69,"line_end":69,"column_start":9,"column_end":14},"name":"_unit","qualname":"::transform2d::Transform2D::_unit","value":"core::marker::PhantomData<(Src, Dst)>","parent":{"krate":0,"index":3119},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3158},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":292955,"byte_end":292958,"line_start":148,"line_end":148,"column_start":18,"column_end":21},"name":"new","qualname":"<Transform2D<T, Src, Dst>>::new","value":"pub const fn new(T, T, T, T, T, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a transform specifying its components in using the column-major-column-vector\n matrix notation.","sig":null,"attributes":[{"value":"/ Create a transform specifying its components in using the column-major-column-vector","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":292489,"byte_end":292577,"line_start":133,"line_end":133,"column_start":5,"column_end":93}},{"value":"/ matrix notation.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":292582,"byte_end":292602,"line_start":134,"line_end":134,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":292607,"byte_end":292610,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ For example, the translation terms m31 and m32 are the last two parameters parameters.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":292615,"byte_end":292705,"line_start":136,"line_end":136,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":292710,"byte_end":292713,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":292718,"byte_end":292725,"line_start":138,"line_end":138,"column_start":5,"column_end":12}},{"value":"/ use euclid::default::Transform2D;","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":292730,"byte_end":292767,"line_start":139,"line_end":139,"column_start":5,"column_end":42}},{"value":"/ let tx = 1.0;","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":292772,"byte_end":292789,"line_start":140,"line_end":140,"column_start":5,"column_end":22}},{"value":"/ let ty = 2.0;","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":292794,"byte_end":292811,"line_start":141,"line_end":141,"column_start":5,"column_end":22}},{"value":"/ let translation = Transform2D::new(","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":292816,"byte_end":292855,"line_start":142,"line_end":142,"column_start":5,"column_end":44}},{"value":"/   1.0, 0.0,","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":292860,"byte_end":292875,"line_start":143,"line_end":143,"column_start":5,"column_end":20}},{"value":"/   0.0, 1.0,","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":292880,"byte_end":292895,"line_start":144,"line_end":144,"column_start":5,"column_end":20}},{"value":"/   tx,  ty,","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":292900,"byte_end":292914,"line_start":145,"line_end":145,"column_start":5,"column_end":19}},{"value":"/ );","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":292919,"byte_end":292925,"line_start":146,"line_end":146,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":292930,"byte_end":292937,"line_start":147,"line_end":147,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3159},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":293484,"byte_end":293493,"line_start":164,"line_end":164,"column_start":12,"column_end":21},"name":"approx_eq","qualname":"<Transform2D<T, Src, Dst>>::approx_eq","value":"pub fn approx_eq(&Self, &Self) -> bool where T: ApproxEq<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns true is this transform is approximately equal to the other one, using\n T's default epsilon value.","sig":null,"attributes":[{"value":"/ Returns true is this transform is approximately equal to the other one, using","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":293158,"byte_end":293239,"line_start":157,"line_end":157,"column_start":5,"column_end":86}},{"value":"/ T's default epsilon value.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":293244,"byte_end":293274,"line_start":158,"line_end":158,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":293279,"byte_end":293282,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ The same as [`ApproxEq::approx_eq()`] but available without importing trait.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":293287,"byte_end":293367,"line_start":160,"line_end":160,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":293372,"byte_end":293375,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ [`ApproxEq::approx_eq()`]: ./approxeq/trait.ApproxEq.html#method.approx_eq","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":293380,"byte_end":293458,"line_start":162,"line_end":162,"column_start":5,"column_end":83}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":293463,"byte_end":293472,"line_start":163,"line_end":163,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3160},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":293955,"byte_end":293968,"line_start":176,"line_end":176,"column_start":12,"column_end":25},"name":"approx_eq_eps","qualname":"<Transform2D<T, Src, Dst>>::approx_eq_eps","value":"pub fn approx_eq_eps(&Self, &Self, &T) -> bool where T: ApproxEq<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns true is this transform is approximately equal to the other one, using\n a provided epsilon value.","sig":null,"attributes":[{"value":"/ Returns true is this transform is approximately equal to the other one, using","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":293618,"byte_end":293699,"line_start":169,"line_end":169,"column_start":5,"column_end":86}},{"value":"/ a provided epsilon value.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":293704,"byte_end":293733,"line_start":170,"line_end":170,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":293738,"byte_end":293741,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ The same as [`ApproxEq::approx_eq_eps()`] but available without importing trait.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":293746,"byte_end":293830,"line_start":172,"line_end":172,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":293835,"byte_end":293838,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ [`ApproxEq::approx_eq_eps()`]: ./approxeq/trait.ApproxEq.html#method.approx_eq_eps","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":293843,"byte_end":293929,"line_start":174,"line_end":174,"column_start":5,"column_end":91}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":293934,"byte_end":293943,"line_start":175,"line_end":175,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3165},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":294534,"byte_end":294542,"line_start":192,"line_end":192,"column_start":12,"column_end":20},"name":"to_array","qualname":"<Transform2D<T, Src, Dst>>::to_array","value":"pub fn to_array(&Self) -> [T; ]","parent":null,"children":[],"decl_id":null,"docs":" Returns an array containing this transform's terms.","sig":null,"attributes":[{"value":"/ Returns an array containing this transform's terms.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":294165,"byte_end":294220,"line_start":183,"line_end":183,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":294225,"byte_end":294228,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ The terms are laid out in the same order as they are","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":294233,"byte_end":294289,"line_start":185,"line_end":185,"column_start":5,"column_end":61}},{"value":"/ specified in `Transform2D::new`, that is following the","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":294294,"byte_end":294352,"line_start":186,"line_end":186,"column_start":5,"column_end":63}},{"value":"/ column-major-column-vector matrix notation.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":294357,"byte_end":294404,"line_start":187,"line_end":187,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":294409,"byte_end":294412,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ For example the translation terms are found in the","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":294417,"byte_end":294471,"line_start":189,"line_end":189,"column_start":5,"column_end":59}},{"value":"/ last two slots of the array.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":294476,"byte_end":294508,"line_start":190,"line_end":190,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":294513,"byte_end":294522,"line_start":191,"line_end":191,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3167},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":295090,"byte_end":295109,"line_start":209,"line_end":209,"column_start":12,"column_end":31},"name":"to_array_transposed","qualname":"<Transform2D<T, Src, Dst>>::to_array_transposed","value":"pub fn to_array_transposed(&Self) -> [T; ]","parent":null,"children":[],"decl_id":null,"docs":" Returns an array containing this transform's terms transposed.","sig":null,"attributes":[{"value":"/ Returns an array containing this transform's terms transposed.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":294688,"byte_end":294754,"line_start":200,"line_end":200,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":294759,"byte_end":294762,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ The terms are laid out in transposed order from the same order of","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":294767,"byte_end":294836,"line_start":202,"line_end":202,"column_start":5,"column_end":74}},{"value":"/ `Transform3D::new` and `Transform3D::to_array`, that is following","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":294841,"byte_end":294910,"line_start":203,"line_end":203,"column_start":5,"column_end":74}},{"value":"/ the row-major-column-vector matrix notation.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":294915,"byte_end":294963,"line_start":204,"line_end":204,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":294968,"byte_end":294971,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ For example the translation terms are found at indices 2 and 5","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":294976,"byte_end":295042,"line_start":206,"line_end":206,"column_start":5,"column_end":71}},{"value":"/ in the array.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":295047,"byte_end":295064,"line_start":207,"line_end":207,"column_start":5,"column_end":22}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":295069,"byte_end":295078,"line_start":208,"line_end":208,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3169},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":295363,"byte_end":295372,"line_start":219,"line_end":219,"column_start":12,"column_end":21},"name":"to_arrays","qualname":"<Transform2D<T, Src, Dst>>::to_arrays","value":"pub fn to_arrays(&Self) -> [[T; ]; ]","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to `to_array` with elements packed two at a time\n in an array of arrays.\n","sig":null,"attributes":[{"value":"/ Equivalent to `to_array` with elements packed two at a time","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":295243,"byte_end":295306,"line_start":216,"line_end":216,"column_start":5,"column_end":68}},{"value":"/ in an array of arrays.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":295311,"byte_end":295337,"line_start":217,"line_end":217,"column_start":5,"column_end":31}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":295342,"byte_end":295351,"line_start":218,"line_end":218,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3172},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":295837,"byte_end":295847,"line_start":234,"line_end":234,"column_start":12,"column_end":22},"name":"from_array","qualname":"<Transform2D<T, Src, Dst>>::from_array","value":"pub fn from_array([T; ]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a transform providing its components via an array\n of 6 elements instead of as individual parameters.","sig":null,"attributes":[{"value":"/ Create a transform providing its components via an array","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":295530,"byte_end":295590,"line_start":227,"line_end":227,"column_start":5,"column_end":65}},{"value":"/ of 6 elements instead of as individual parameters.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":295595,"byte_end":295649,"line_start":228,"line_end":228,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":295654,"byte_end":295657,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ The order of the components corresponds to the","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":295662,"byte_end":295712,"line_start":230,"line_end":230,"column_start":5,"column_end":55}},{"value":"/ column-major-column-vector matrix notation (the same order","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":295717,"byte_end":295779,"line_start":231,"line_end":231,"column_start":5,"column_end":67}},{"value":"/ as `Transform2D::new`).","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":295784,"byte_end":295811,"line_start":232,"line_end":232,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":295816,"byte_end":295825,"line_start":233,"line_end":233,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3174},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":296293,"byte_end":296304,"line_start":249,"line_end":249,"column_start":12,"column_end":23},"name":"from_arrays","qualname":"<Transform2D<T, Src, Dst>>::from_arrays","value":"pub fn from_arrays([[T; ]; ]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to `from_array` with elements packed two at a time\n in an array of arrays.","sig":null,"attributes":[{"value":"/ Equivalent to `from_array` with elements packed two at a time","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":296009,"byte_end":296074,"line_start":242,"line_end":242,"column_start":5,"column_end":70}},{"value":"/ in an array of arrays.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":296079,"byte_end":296105,"line_start":243,"line_end":243,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":296110,"byte_end":296113,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ The order of the components corresponds to the","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":296118,"byte_end":296168,"line_start":245,"line_end":245,"column_start":5,"column_end":55}},{"value":"/ column-major-column-vector matrix notation (the same order","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":296173,"byte_end":296235,"line_start":246,"line_end":246,"column_start":5,"column_end":67}},{"value":"/ as `Transform3D::new`).","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":296240,"byte_end":296267,"line_start":247,"line_end":247,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":296272,"byte_end":296281,"line_start":248,"line_end":248,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3177},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":296569,"byte_end":296579,"line_start":259,"line_end":259,"column_start":12,"column_end":22},"name":"to_untyped","qualname":"<Transform2D<T, Src, Dst>>::to_untyped","value":"pub fn to_untyped(&Self) -> Transform2D<T, UnknownUnit, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":" Drop the units, preserving only the numeric value.\n","sig":null,"attributes":[{"value":"/ Drop the units, preserving only the numeric value.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":296489,"byte_end":296543,"line_start":257,"line_end":257,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":296548,"byte_end":296557,"line_start":258,"line_end":258,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3178},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":296837,"byte_end":296849,"line_start":269,"line_end":269,"column_start":12,"column_end":24},"name":"from_untyped","qualname":"<Transform2D<T, Src, Dst>>::from_untyped","value":"pub fn from_untyped(&Transform2D<T, UnknownUnit, UnknownUnit>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Tag a unitless value with units.\n","sig":null,"attributes":[{"value":"/ Tag a unitless value with units.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":296775,"byte_end":296811,"line_start":267,"line_end":267,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":296816,"byte_end":296825,"line_start":268,"line_end":268,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3179},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":297116,"byte_end":297127,"line_start":279,"line_end":279,"column_start":12,"column_end":23},"name":"with_source","qualname":"<Transform2D<T, Src, Dst>>::with_source","value":"pub fn with_source<NewSrc>(&Self) -> Transform2D<T, NewSrc, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Returns the same transform with a different source unit.\n","sig":null,"attributes":[{"value":"/ Returns the same transform with a different source unit.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":297030,"byte_end":297090,"line_start":277,"line_end":277,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":297095,"byte_end":297104,"line_start":278,"line_end":278,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3181},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":297410,"byte_end":297426,"line_start":289,"line_end":289,"column_start":12,"column_end":28},"name":"with_destination","qualname":"<Transform2D<T, Src, Dst>>::with_destination","value":"pub fn with_destination<NewDst>(&Self) -> Transform2D<T, Src, NewDst>","parent":null,"children":[],"decl_id":null,"docs":" Returns the same transform with a different destination unit.\n","sig":null,"attributes":[{"value":"/ Returns the same transform with a different destination unit.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":297319,"byte_end":297384,"line_start":287,"line_end":287,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":297389,"byte_end":297398,"line_start":288,"line_end":288,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3183},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":297682,"byte_end":297687,"line_start":298,"line_end":298,"column_start":12,"column_end":17},"name":"to_3d","qualname":"<Transform2D<T, Src, Dst>>::to_3d","value":"pub fn to_3d(&Self) -> Transform3D<T, Src, Dst> where T: Zero + One","parent":null,"children":[],"decl_id":null,"docs":" Create a 3D transform from the current transform\n","sig":null,"attributes":[{"value":"/ Create a 3D transform from the current transform","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":297618,"byte_end":297670,"line_start":297,"line_end":297,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":3188},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":298024,"byte_end":298028,"line_start":309,"line_end":309,"column_start":12,"column_end":16},"name":"cast","qualname":"<Transform2D<T, Src, Dst>>::cast","value":"pub fn cast<NewT: NumCast>(&Self) -> Transform2D<NewT, Src, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Cast from one numeric representation to another, preserving the units.\n","sig":null,"attributes":[{"value":"/ Cast from one numeric representation to another, preserving the units.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":297924,"byte_end":297998,"line_start":307,"line_end":307,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":298003,"byte_end":298012,"line_start":308,"line_end":308,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3190},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":298223,"byte_end":298231,"line_start":314,"line_end":314,"column_start":12,"column_end":20},"name":"try_cast","qualname":"<Transform2D<T, Src, Dst>>::try_cast","value":"pub fn try_cast<NewT: NumCast>(&Self) -> Option<Transform2D<NewT, Src, Dst>>","parent":null,"children":[],"decl_id":null,"docs":" Fallible cast from one numeric representation to another, preserving the units.\n","sig":null,"attributes":[{"value":"/ Fallible cast from one numeric representation to another, preserving the units.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":298128,"byte_end":298211,"line_start":313,"line_end":313,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":3196},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":299007,"byte_end":299015,"line_start":344,"line_end":344,"column_start":12,"column_end":20},"name":"identity","qualname":"<Transform2D<T, Src, Dst>>::identity","value":"pub fn identity() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an identity matrix:","sig":null,"attributes":[{"value":"/ Create an identity matrix:","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":298879,"byte_end":298909,"line_start":336,"line_end":336,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":298914,"byte_end":298917,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":298922,"byte_end":298933,"line_start":338,"line_end":338,"column_start":5,"column_end":16}},{"value":"/ 1 0","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":298938,"byte_end":298945,"line_start":339,"line_end":339,"column_start":5,"column_end":12}},{"value":"/ 0 1","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":298950,"byte_end":298957,"line_start":340,"line_end":340,"column_start":5,"column_end":12}},{"value":"/ 0 0","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":298962,"byte_end":298969,"line_start":341,"line_end":341,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":298974,"byte_end":298981,"line_start":342,"line_end":342,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":298986,"byte_end":298995,"line_start":343,"line_end":343,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3202},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":299708,"byte_end":299712,"line_start":368,"line_end":368,"column_start":12,"column_end":16},"name":"then","qualname":"<Transform2D<T, Src, Dst>>::then","value":"pub fn then<NewDst>(&Self, &Transform2D<T, Dst, NewDst>)\n-> Transform2D<T, Src, NewDst>","parent":null,"children":[],"decl_id":null,"docs":" Returns the multiplication of the two matrices such that mat's transformation\n applies after self's transformation.\n","sig":null,"attributes":[{"value":"/ Returns the multiplication of the two matrices such that mat's transformation","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":299554,"byte_end":299635,"line_start":365,"line_end":365,"column_start":5,"column_end":86}},{"value":"/ applies after self's transformation.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":299640,"byte_end":299680,"line_start":366,"line_end":366,"column_start":5,"column_end":45}},{"value":"must_use","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":299685,"byte_end":299696,"line_start":367,"line_end":367,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3208},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":300458,"byte_end":300469,"line_start":395,"line_end":395,"column_start":12,"column_end":23},"name":"translation","qualname":"<Transform2D<T, Src, Dst>>::translation","value":"pub fn translation(T, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a 2d translation transform:","sig":null,"attributes":[{"value":"/ Create a 2d translation transform:","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":300322,"byte_end":300360,"line_start":387,"line_end":387,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":300365,"byte_end":300368,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":300373,"byte_end":300384,"line_start":389,"line_end":389,"column_start":5,"column_end":16}},{"value":"/ 1 0","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":300389,"byte_end":300396,"line_start":390,"line_end":390,"column_start":5,"column_end":12}},{"value":"/ 0 1","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":300401,"byte_end":300408,"line_start":391,"line_end":391,"column_start":5,"column_end":12}},{"value":"/ x y","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":300413,"byte_end":300420,"line_start":392,"line_end":392,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":300425,"byte_end":300432,"line_start":393,"line_end":393,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":300437,"byte_end":300446,"line_start":394,"line_end":394,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3211},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":300796,"byte_end":300810,"line_start":409,"line_end":409,"column_start":12,"column_end":26},"name":"then_translate","qualname":"<Transform2D<T, Src, Dst>>::then_translate","value":"pub fn then_translate(&Self, Vector2D<T, Dst>) -> Self where T: Copy +\nAdd<Output = T> + Mul<Output = T>","parent":null,"children":[],"decl_id":null,"docs":" Applies a translation after self's transformation and returns the resulting transform.\n","sig":null,"attributes":[{"value":"/ Applies a translation after self's transformation and returns the resulting transform.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":300664,"byte_end":300754,"line_start":406,"line_end":406,"column_start":5,"column_end":95}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":300759,"byte_end":300768,"line_start":407,"line_end":407,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":300773,"byte_end":300784,"line_start":408,"line_end":408,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3212},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":301115,"byte_end":301128,"line_start":419,"line_end":419,"column_start":12,"column_end":25},"name":"pre_translate","qualname":"<Transform2D<T, Src, Dst>>::pre_translate","value":"pub fn pre_translate(&Self, Vector2D<T, Src>) -> Self where T: Copy +\nAdd<Output = T> + Mul<Output = T>","parent":null,"children":[],"decl_id":null,"docs":" Applies a translation before self's transformation and returns the resulting transform.\n","sig":null,"attributes":[{"value":"/ Applies a translation before self's transformation and returns the resulting transform.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":300982,"byte_end":301073,"line_start":416,"line_end":416,"column_start":5,"column_end":96}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":301078,"byte_end":301087,"line_start":417,"line_end":417,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":301092,"byte_end":301103,"line_start":418,"line_end":418,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3217},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":301556,"byte_end":301564,"line_start":434,"line_end":434,"column_start":12,"column_end":20},"name":"rotation","qualname":"<Transform2D<T, Src, Dst>>::rotation","value":"pub fn rotation(Angle<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a rotation transform.\n","sig":null,"attributes":[{"value":"/ Returns a rotation transform.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":301497,"byte_end":301530,"line_start":432,"line_end":432,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":301535,"byte_end":301544,"line_start":433,"line_end":433,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3218},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":301941,"byte_end":301952,"line_start":448,"line_end":448,"column_start":12,"column_end":23},"name":"then_rotate","qualname":"<Transform2D<T, Src, Dst>>::then_rotate","value":"pub fn then_rotate(&Self, Angle<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Applies a rotation after self's transformation and returns the resulting transform.\n","sig":null,"attributes":[{"value":"/ Applies a rotation after self's transformation and returns the resulting transform.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":301812,"byte_end":301899,"line_start":445,"line_end":445,"column_start":5,"column_end":92}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":301904,"byte_end":301913,"line_start":446,"line_end":446,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":301918,"byte_end":301929,"line_start":447,"line_end":447,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3219},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":302177,"byte_end":302187,"line_start":455,"line_end":455,"column_start":12,"column_end":22},"name":"pre_rotate","qualname":"<Transform2D<T, Src, Dst>>::pre_rotate","value":"pub fn pre_rotate(&Self, Angle<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Applies a rotation before self's transformation and returns the resulting transform.\n","sig":null,"attributes":[{"value":"/ Applies a rotation before self's transformation and returns the resulting transform.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":302047,"byte_end":302135,"line_start":452,"line_end":452,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":302140,"byte_end":302149,"line_start":453,"line_end":453,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":302154,"byte_end":302165,"line_start":454,"line_end":454,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3224},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":302519,"byte_end":302524,"line_start":470,"line_end":470,"column_start":12,"column_end":17},"name":"scale","qualname":"<Transform2D<T, Src, Dst>>::scale","value":"pub fn scale(T, T) -> Self where T: Zero","parent":null,"children":[],"decl_id":null,"docs":" Create a 2d scale transform:","sig":null,"attributes":[{"value":"/ Create a 2d scale transform:","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":302389,"byte_end":302421,"line_start":462,"line_end":462,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":302426,"byte_end":302429,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":302434,"byte_end":302445,"line_start":464,"line_end":464,"column_start":5,"column_end":16}},{"value":"/ x 0","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":302450,"byte_end":302457,"line_start":465,"line_end":465,"column_start":5,"column_end":12}},{"value":"/ 0 y","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":302462,"byte_end":302469,"line_start":466,"line_end":466,"column_start":5,"column_end":12}},{"value":"/ 0 0","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":302474,"byte_end":302481,"line_start":467,"line_end":467,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":302486,"byte_end":302493,"line_start":468,"line_end":468,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":302498,"byte_end":302507,"line_start":469,"line_end":469,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3226},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":302849,"byte_end":302859,"line_start":486,"line_end":486,"column_start":12,"column_end":22},"name":"then_scale","qualname":"<Transform2D<T, Src, Dst>>::then_scale","value":"pub fn then_scale(&Self, T, T) -> Self where T: Copy + Add<Output = T> +\nMul<Output = T> + Zero","parent":null,"children":[],"decl_id":null,"docs":" Applies a scale after self's transformation and returns the resulting transform.\n","sig":null,"attributes":[{"value":"/ Applies a scale after self's transformation and returns the resulting transform.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":302723,"byte_end":302807,"line_start":483,"line_end":483,"column_start":5,"column_end":89}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":302812,"byte_end":302821,"line_start":484,"line_end":484,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":302826,"byte_end":302837,"line_start":485,"line_end":485,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3227},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":303146,"byte_end":303155,"line_start":496,"line_end":496,"column_start":12,"column_end":21},"name":"pre_scale","qualname":"<Transform2D<T, Src, Dst>>::pre_scale","value":"pub fn pre_scale(&Self, T, T) -> Self where T: Copy + Mul<Output = T>","parent":null,"children":[],"decl_id":null,"docs":" Applies a scale before self's transformation and returns the resulting transform.\n","sig":null,"attributes":[{"value":"/ Applies a scale before self's transformation and returns the resulting transform.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":303019,"byte_end":303104,"line_start":493,"line_end":493,"column_start":5,"column_end":90}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":303109,"byte_end":303118,"line_start":494,"line_end":494,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":303123,"byte_end":303134,"line_start":495,"line_end":495,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3232},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":303647,"byte_end":303662,"line_start":516,"line_end":516,"column_start":12,"column_end":27},"name":"transform_point","qualname":"<Transform2D<T, Src, Dst>>::transform_point","value":"pub fn transform_point(&Self, Point2D<T, Src>) -> Point2D<T, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Returns the given point transformed by this transform.\n","sig":null,"attributes":[{"value":"/ Returns the given point transformed by this transform.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":303547,"byte_end":303605,"line_start":513,"line_end":513,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":303610,"byte_end":303619,"line_start":514,"line_end":514,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":303624,"byte_end":303635,"line_start":515,"line_end":515,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3233},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":303983,"byte_end":303999,"line_start":526,"line_end":526,"column_start":12,"column_end":28},"name":"transform_vector","qualname":"<Transform2D<T, Src, Dst>>::transform_vector","value":"pub fn transform_vector(&Self, Vector2D<T, Src>) -> Vector2D<T, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Returns the given vector transformed by this matrix.\n","sig":null,"attributes":[{"value":"/ Returns the given vector transformed by this matrix.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":303885,"byte_end":303941,"line_start":523,"line_end":523,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":303946,"byte_end":303955,"line_start":524,"line_end":524,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":303960,"byte_end":303971,"line_start":525,"line_end":525,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3234},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":304319,"byte_end":304341,"line_start":535,"line_end":535,"column_start":12,"column_end":34},"name":"outer_transformed_rect","qualname":"<Transform2D<T, Src, Dst>>::outer_transformed_rect","value":"pub fn outer_transformed_rect(&Self, &Rect<T, Src>) -> Rect<T, Dst> where\nT: Sub<Output = T> + Zero + PartialOrd","parent":null,"children":[],"decl_id":null,"docs":" Returns a rectangle that encompasses the result of transforming the given rectangle by this\n transform.\n","sig":null,"attributes":[{"value":"/ Returns a rectangle that encompasses the result of transforming the given rectangle by this","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":304163,"byte_end":304258,"line_start":531,"line_end":531,"column_start":5,"column_end":100}},{"value":"/ transform.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":304263,"byte_end":304277,"line_start":532,"line_end":532,"column_start":5,"column_end":19}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":304282,"byte_end":304291,"line_start":533,"line_end":533,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":304296,"byte_end":304307,"line_start":534,"line_end":534,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3235},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":304896,"byte_end":304917,"line_start":554,"line_end":554,"column_start":12,"column_end":33},"name":"outer_transformed_box","qualname":"<Transform2D<T, Src, Dst>>::outer_transformed_box","value":"pub fn outer_transformed_box(&Self, &Box2D<T, Src>) -> Box2D<T, Dst> where\nT: Sub<Output = T> + Zero + PartialOrd","parent":null,"children":[],"decl_id":null,"docs":" Returns a box that encompasses the result of transforming the given box by this\n transform.\n","sig":null,"attributes":[{"value":"/ Returns a box that encompasses the result of transforming the given box by this","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":304752,"byte_end":304835,"line_start":550,"line_end":550,"column_start":5,"column_end":88}},{"value":"/ transform.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":304840,"byte_end":304854,"line_start":551,"line_end":551,"column_start":5,"column_end":19}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":304859,"byte_end":304868,"line_start":552,"line_end":552,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":304873,"byte_end":304884,"line_start":553,"line_end":553,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3240},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":305496,"byte_end":305507,"line_start":573,"line_end":573,"column_start":12,"column_end":23},"name":"determinant","qualname":"<Transform2D<T, Src, Dst>>::determinant","value":"pub fn determinant(&Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Computes and returns the determinant of this transform.\n","sig":null,"attributes":[{"value":"/ Computes and returns the determinant of this transform.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":305425,"byte_end":305484,"line_start":572,"line_end":572,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":3241},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":305677,"byte_end":305690,"line_start":579,"line_end":579,"column_start":12,"column_end":25},"name":"is_invertible","qualname":"<Transform2D<T, Src, Dst>>::is_invertible","value":"pub fn is_invertible(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether it is possible to compute the inverse transform.\n","sig":null,"attributes":[{"value":"/ Returns whether it is possible to compute the inverse transform.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":305583,"byte_end":305651,"line_start":577,"line_end":577,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":305656,"byte_end":305665,"line_start":578,"line_end":578,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3242},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":305836,"byte_end":305843,"line_start":585,"line_end":585,"column_start":12,"column_end":19},"name":"inverse","qualname":"<Transform2D<T, Src, Dst>>::inverse","value":"pub fn inverse(&Self) -> Option<Transform2D<T, Dst, Src>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the inverse transform if possible.\n","sig":null,"attributes":[{"value":"/ Returns the inverse transform if possible.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":305762,"byte_end":305808,"line_start":583,"line_end":583,"column_start":5,"column_end":51}},{"value":"must_use","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":305813,"byte_end":305824,"line_start":584,"line_end":584,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":3360},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":314891,"byte_end":314902,"line_start":64,"line_end":64,"column_start":12,"column_end":23},"name":"Transform3D","qualname":"::transform3d::Transform3D","value":"Transform3D { m11, m12, m13, m14, m21, m22, m23, m24, m31, m32, m33, m34, m41, m42, m43, m44, _unit }","parent":null,"children":[{"krate":0,"index":3364},{"krate":0,"index":3365},{"krate":0,"index":3366},{"krate":0,"index":3367},{"krate":0,"index":3368},{"krate":0,"index":3369},{"krate":0,"index":3370},{"krate":0,"index":3371},{"krate":0,"index":3372},{"krate":0,"index":3373},{"krate":0,"index":3374},{"krate":0,"index":3375},{"krate":0,"index":3376},{"krate":0,"index":3377},{"krate":0,"index":3378},{"krate":0,"index":3379},{"krate":0,"index":3380}],"decl_id":null,"docs":" A 3d transform stored as a column-major 4 by 4 matrix.","sig":null,"attributes":[{"value":"/ A 3d transform stored as a column-major 4 by 4 matrix.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":313620,"byte_end":313678,"line_start":35,"line_end":35,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":313679,"byte_end":313682,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ Transforms can be parametrized over the source and destination units, to describe a","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":313683,"byte_end":313770,"line_start":37,"line_end":37,"column_start":1,"column_end":88}},{"value":"/ transformation from a space to another.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":313771,"byte_end":313814,"line_start":38,"line_end":38,"column_start":1,"column_end":44}},{"value":"/ For example, `Transform3D<f32, WorldSpace, ScreenSpace>::transform_point3d`","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":313815,"byte_end":313894,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ takes a `Point3D<f32, WorldSpace>` and returns a `Point3D<f32, ScreenSpace>`.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":313895,"byte_end":313976,"line_start":40,"line_end":40,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":313977,"byte_end":313980,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ Transforms expose a set of convenience methods for pre- and post-transformations.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":313981,"byte_end":314066,"line_start":42,"line_end":42,"column_start":1,"column_end":86}},{"value":"/ Pre-transformations (`pre_*` methods) correspond to adding an operation that is","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":314067,"byte_end":314150,"line_start":43,"line_end":43,"column_start":1,"column_end":84}},{"value":"/ applied before the rest of the transformation, while post-transformations (`then_*`","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":314151,"byte_end":314238,"line_start":44,"line_end":44,"column_start":1,"column_end":88}},{"value":"/ methods) add an operation that is applied after.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":314239,"byte_end":314291,"line_start":45,"line_end":45,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":314292,"byte_end":314295,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ When translating Transform3D into general matrix representations, consider that the","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":314296,"byte_end":314383,"line_start":47,"line_end":47,"column_start":1,"column_end":88}},{"value":"/ representation follows the column major notation with column vectors.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":314384,"byte_end":314457,"line_start":48,"line_end":48,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":314458,"byte_end":314461,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":314462,"byte_end":314473,"line_start":50,"line_end":50,"column_start":1,"column_end":12}},{"value":"/  |x'|   | m11 m12 m13 m14 |   |x|","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":314474,"byte_end":314511,"line_start":51,"line_end":51,"column_start":1,"column_end":38}},{"value":"/  |y'|   | m21 m22 m23 m24 |   |y|","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":314512,"byte_end":314549,"line_start":52,"line_end":52,"column_start":1,"column_end":38}},{"value":"/  |z'| = | m31 m32 m33 m34 | x |y|","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":314550,"byte_end":314587,"line_start":53,"line_end":53,"column_start":1,"column_end":38}},{"value":"/  |w |   | m41 m42 m43 m44 |   |1|","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":314588,"byte_end":314625,"line_start":54,"line_end":54,"column_start":1,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":314626,"byte_end":314633,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":314634,"byte_end":314637,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ The translation terms are m41, m42 and m43.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":314638,"byte_end":314685,"line_start":57,"line_end":57,"column_start":1,"column_end":48}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":314686,"byte_end":314696,"line_start":58,"line_end":58,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":3364},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":314926,"byte_end":314929,"line_start":65,"line_end":65,"column_start":9,"column_end":12},"name":"m11","qualname":"::transform3d::Transform3D::m11","value":"T","parent":{"krate":0,"index":3360},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3365},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":314938,"byte_end":314941,"line_start":65,"line_end":65,"column_start":21,"column_end":24},"name":"m12","qualname":"::transform3d::Transform3D::m12","value":"T","parent":{"krate":0,"index":3360},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3366},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":314950,"byte_end":314953,"line_start":65,"line_end":65,"column_start":33,"column_end":36},"name":"m13","qualname":"::transform3d::Transform3D::m13","value":"T","parent":{"krate":0,"index":3360},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3367},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":314962,"byte_end":314965,"line_start":65,"line_end":65,"column_start":45,"column_end":48},"name":"m14","qualname":"::transform3d::Transform3D::m14","value":"T","parent":{"krate":0,"index":3360},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3368},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":314978,"byte_end":314981,"line_start":66,"line_end":66,"column_start":9,"column_end":12},"name":"m21","qualname":"::transform3d::Transform3D::m21","value":"T","parent":{"krate":0,"index":3360},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3369},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":314990,"byte_end":314993,"line_start":66,"line_end":66,"column_start":21,"column_end":24},"name":"m22","qualname":"::transform3d::Transform3D::m22","value":"T","parent":{"krate":0,"index":3360},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3370},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":315002,"byte_end":315005,"line_start":66,"line_end":66,"column_start":33,"column_end":36},"name":"m23","qualname":"::transform3d::Transform3D::m23","value":"T","parent":{"krate":0,"index":3360},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3371},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":315014,"byte_end":315017,"line_start":66,"line_end":66,"column_start":45,"column_end":48},"name":"m24","qualname":"::transform3d::Transform3D::m24","value":"T","parent":{"krate":0,"index":3360},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3372},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":315030,"byte_end":315033,"line_start":67,"line_end":67,"column_start":9,"column_end":12},"name":"m31","qualname":"::transform3d::Transform3D::m31","value":"T","parent":{"krate":0,"index":3360},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3373},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":315042,"byte_end":315045,"line_start":67,"line_end":67,"column_start":21,"column_end":24},"name":"m32","qualname":"::transform3d::Transform3D::m32","value":"T","parent":{"krate":0,"index":3360},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3374},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":315054,"byte_end":315057,"line_start":67,"line_end":67,"column_start":33,"column_end":36},"name":"m33","qualname":"::transform3d::Transform3D::m33","value":"T","parent":{"krate":0,"index":3360},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3375},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":315066,"byte_end":315069,"line_start":67,"line_end":67,"column_start":45,"column_end":48},"name":"m34","qualname":"::transform3d::Transform3D::m34","value":"T","parent":{"krate":0,"index":3360},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3376},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":315082,"byte_end":315085,"line_start":68,"line_end":68,"column_start":9,"column_end":12},"name":"m41","qualname":"::transform3d::Transform3D::m41","value":"T","parent":{"krate":0,"index":3360},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3377},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":315094,"byte_end":315097,"line_start":68,"line_end":68,"column_start":21,"column_end":24},"name":"m42","qualname":"::transform3d::Transform3D::m42","value":"T","parent":{"krate":0,"index":3360},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3378},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":315106,"byte_end":315109,"line_start":68,"line_end":68,"column_start":33,"column_end":36},"name":"m43","qualname":"::transform3d::Transform3D::m43","value":"T","parent":{"krate":0,"index":3360},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3379},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":315118,"byte_end":315121,"line_start":68,"line_end":68,"column_start":45,"column_end":48},"name":"m44","qualname":"::transform3d::Transform3D::m44","value":"T","parent":{"krate":0,"index":3360},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3380},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":315153,"byte_end":315158,"line_start":70,"line_end":70,"column_start":9,"column_end":14},"name":"_unit","qualname":"::transform3d::Transform3D::_unit","value":"core::marker::PhantomData<(Src, Dst)>","parent":{"krate":0,"index":3360},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3409},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":318916,"byte_end":318919,"line_start":203,"line_end":203,"column_start":18,"column_end":21},"name":"new","qualname":"<Transform3D<T, Src, Dst>>::new","value":"pub const fn new(T, T, T, T, T, T, T, T, T, T, T, T, T, T, T, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a transform specifying all of it's component as a 4 by 4 matrix.","sig":null,"attributes":[{"value":"/ Create a transform specifying all of it's component as a 4 by 4 matrix.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":318233,"byte_end":318308,"line_start":184,"line_end":184,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":318313,"byte_end":318316,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ Components are specified following column-major-column-vector matrix notation.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":318321,"byte_end":318403,"line_start":186,"line_end":186,"column_start":5,"column_end":87}},{"value":"/ For example, the translation terms m41, m42, m43 are the 13rd, 14th and 15th parameters.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":318408,"byte_end":318500,"line_start":187,"line_end":187,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":318505,"byte_end":318508,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":318513,"byte_end":318520,"line_start":189,"line_end":189,"column_start":5,"column_end":12}},{"value":"/ use euclid::default::Transform3D;","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":318525,"byte_end":318562,"line_start":190,"line_end":190,"column_start":5,"column_end":42}},{"value":"/ let tx = 1.0;","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":318567,"byte_end":318584,"line_start":191,"line_end":191,"column_start":5,"column_end":22}},{"value":"/ let ty = 2.0;","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":318589,"byte_end":318606,"line_start":192,"line_end":192,"column_start":5,"column_end":22}},{"value":"/ let tz = 3.0;","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":318611,"byte_end":318628,"line_start":193,"line_end":193,"column_start":5,"column_end":22}},{"value":"/ let translation = Transform3D::new(","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":318633,"byte_end":318672,"line_start":194,"line_end":194,"column_start":5,"column_end":44}},{"value":"/   1.0, 0.0, 0.0, 0.0,","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":318677,"byte_end":318702,"line_start":195,"line_end":195,"column_start":5,"column_end":30}},{"value":"/   0.0, 1.0, 0.0, 0.0,","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":318707,"byte_end":318732,"line_start":196,"line_end":196,"column_start":5,"column_end":30}},{"value":"/   0.0, 0.0, 1.0, 0.0,","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":318737,"byte_end":318762,"line_start":197,"line_end":197,"column_start":5,"column_end":30}},{"value":"/   tx,  ty,  tz,  1.0,","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":318767,"byte_end":318792,"line_start":198,"line_end":198,"column_start":5,"column_end":30}},{"value":"/ );","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":318797,"byte_end":318803,"line_start":199,"line_end":199,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":318808,"byte_end":318815,"line_start":200,"line_end":200,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":318820,"byte_end":318829,"line_start":201,"line_end":201,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3410},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":319714,"byte_end":319720,"line_start":231,"line_end":231,"column_start":12,"column_end":18},"name":"new_2d","qualname":"<Transform3D<T, Src, Dst>>::new_2d","value":"pub fn new_2d(T, T, T, T, T, T) -> Self where T: Zero + One","parent":null,"children":[],"decl_id":null,"docs":" Create a transform representing a 2d transformation from the components\n of a 2 by 3 matrix transformation.","sig":null,"attributes":[{"value":"/ Create a transform representing a 2d transformation from the components","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":319300,"byte_end":319375,"line_start":218,"line_end":218,"column_start":5,"column_end":80}},{"value":"/ of a 2 by 3 matrix transformation.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":319380,"byte_end":319418,"line_start":219,"line_end":219,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":319423,"byte_end":319426,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ Components follow the column-major-column-vector notation (m41 and m42","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":319431,"byte_end":319505,"line_start":221,"line_end":221,"column_start":5,"column_end":79}},{"value":"/ representating the translation terms).","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":319510,"byte_end":319552,"line_start":222,"line_end":222,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":319557,"byte_end":319560,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":319565,"byte_end":319576,"line_start":224,"line_end":224,"column_start":5,"column_end":16}},{"value":"/ m11  m12   0   0","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":319581,"byte_end":319601,"line_start":225,"line_end":225,"column_start":5,"column_end":25}},{"value":"/ m21  m22   0   0","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":319606,"byte_end":319626,"line_start":226,"line_end":226,"column_start":5,"column_end":25}},{"value":"/   0    0   1   0","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":319631,"byte_end":319651,"line_start":227,"line_end":227,"column_start":5,"column_end":25}},{"value":"/ m41  m42   0   1","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":319656,"byte_end":319676,"line_start":228,"line_end":228,"column_start":5,"column_end":25}},{"value":"/ ```","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":319681,"byte_end":319688,"line_start":229,"line_end":229,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":319693,"byte_end":319702,"line_start":230,"line_end":230,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3413},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":320240,"byte_end":320245,"line_start":251,"line_end":251,"column_start":12,"column_end":17},"name":"is_2d","qualname":"<Transform3D<T, Src, Dst>>::is_2d","value":"pub fn is_2d(&Self) -> bool where T: Zero + One + PartialEq","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this transform can be represented with a `Transform2D`.","sig":null,"attributes":[{"value":"/ Returns `true` if this transform can be represented with a `Transform2D`.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":320061,"byte_end":320138,"line_start":247,"line_end":247,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":320143,"byte_end":320146,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ See <https://drafts.csswg.org/css-transforms/#2d-transform>","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":320151,"byte_end":320214,"line_start":249,"line_end":249,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":320219,"byte_end":320228,"line_start":250,"line_end":250,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3418},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":321032,"byte_end":321040,"line_start":274,"line_end":274,"column_start":12,"column_end":20},"name":"to_array","qualname":"<Transform3D<T, Src, Dst>>::to_array","value":"pub fn to_array(&Self) -> [T; ]","parent":null,"children":[],"decl_id":null,"docs":" Returns an array containing this transform's terms.","sig":null,"attributes":[{"value":"/ Returns an array containing this transform's terms.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":320652,"byte_end":320707,"line_start":265,"line_end":265,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":320712,"byte_end":320715,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ The terms are laid out in the same order as they are","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":320720,"byte_end":320776,"line_start":267,"line_end":267,"column_start":5,"column_end":61}},{"value":"/ specified in `Transform3D::new`, that is following the","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":320781,"byte_end":320839,"line_start":268,"line_end":268,"column_start":5,"column_end":63}},{"value":"/ column-major-column-vector matrix notation.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":320844,"byte_end":320891,"line_start":269,"line_end":269,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":320896,"byte_end":320899,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ For example the translation terms are found on the","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":320904,"byte_end":320958,"line_start":271,"line_end":271,"column_start":5,"column_end":59}},{"value":"/ 13th, 14th and 15th slots of the array.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":320963,"byte_end":321006,"line_start":272,"line_end":272,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":321011,"byte_end":321020,"line_start":273,"line_end":273,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3420},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":321705,"byte_end":321724,"line_start":292,"line_end":292,"column_start":12,"column_end":31},"name":"to_array_transposed","qualname":"<Transform3D<T, Src, Dst>>::to_array_transposed","value":"pub fn to_array_transposed(&Self) -> [T; ]","parent":null,"children":[],"decl_id":null,"docs":" Returns an array containing this transform's terms transposed.","sig":null,"attributes":[{"value":"/ Returns an array containing this transform's terms transposed.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":321299,"byte_end":321365,"line_start":283,"line_end":283,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":321370,"byte_end":321373,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ The terms are laid out in transposed order from the same order of","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":321378,"byte_end":321447,"line_start":285,"line_end":285,"column_start":5,"column_end":74}},{"value":"/ `Transform3D::new` and `Transform3D::to_array`, that is following","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":321452,"byte_end":321521,"line_start":286,"line_end":286,"column_start":5,"column_end":74}},{"value":"/ the row-major-column-vector matrix notation.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":321526,"byte_end":321574,"line_start":287,"line_end":287,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":321579,"byte_end":321582,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ For example the translation terms are found at indices 3, 7 and 11","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":321587,"byte_end":321657,"line_start":289,"line_end":289,"column_start":5,"column_end":75}},{"value":"/ of the array.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":321662,"byte_end":321679,"line_start":290,"line_end":290,"column_start":5,"column_end":22}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":321684,"byte_end":321693,"line_start":291,"line_end":291,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3422},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":322104,"byte_end":322113,"line_start":304,"line_end":304,"column_start":12,"column_end":21},"name":"to_arrays","qualname":"<Transform3D<T, Src, Dst>>::to_arrays","value":"pub fn to_arrays(&Self) -> [[T; ]; ]","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to `to_array` with elements packed four at a time\n in an array of arrays.\n","sig":null,"attributes":[{"value":"/ Equivalent to `to_array` with elements packed four at a time","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":321983,"byte_end":322047,"line_start":301,"line_end":301,"column_start":5,"column_end":69}},{"value":"/ in an array of arrays.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":322052,"byte_end":322078,"line_start":302,"line_end":302,"column_start":5,"column_end":31}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":322083,"byte_end":322092,"line_start":303,"line_end":303,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3425},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":322516,"byte_end":322536,"line_start":316,"line_end":316,"column_start":12,"column_end":32},"name":"to_arrays_transposed","qualname":"<Transform3D<T, Src, Dst>>::to_arrays_transposed","value":"pub fn to_arrays_transposed(&Self) -> [[T; ]; ]","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to `to_array_transposed` with elements packed\n four at a time in an array of arrays.\n","sig":null,"attributes":[{"value":"/ Equivalent to `to_array_transposed` with elements packed","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":322384,"byte_end":322444,"line_start":313,"line_end":313,"column_start":5,"column_end":65}},{"value":"/ four at a time in an array of arrays.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":322449,"byte_end":322490,"line_start":314,"line_end":314,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":322495,"byte_end":322504,"line_start":315,"line_end":315,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3428},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":323115,"byte_end":323125,"line_start":332,"line_end":332,"column_start":12,"column_end":22},"name":"from_array","qualname":"<Transform3D<T, Src, Dst>>::from_array","value":"pub fn from_array([T; ]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a transform providing its components via an array\n of 16 elements instead of as individual parameters.","sig":null,"attributes":[{"value":"/ Create a transform providing its components via an array","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":322807,"byte_end":322867,"line_start":325,"line_end":325,"column_start":5,"column_end":65}},{"value":"/ of 16 elements instead of as individual parameters.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":322872,"byte_end":322927,"line_start":326,"line_end":326,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":322932,"byte_end":322935,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ The order of the components corresponds to the","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":322940,"byte_end":322990,"line_start":328,"line_end":328,"column_start":5,"column_end":55}},{"value":"/ column-major-column-vector matrix notation (the same order","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":322995,"byte_end":323057,"line_start":329,"line_end":329,"column_start":5,"column_end":67}},{"value":"/ as `Transform3D::new`).","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":323062,"byte_end":323089,"line_start":330,"line_end":330,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":323094,"byte_end":323103,"line_start":331,"line_end":331,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3430},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":323699,"byte_end":323710,"line_start":348,"line_end":348,"column_start":12,"column_end":23},"name":"from_arrays","qualname":"<Transform3D<T, Src, Dst>>::from_arrays","value":"pub fn from_arrays([[T; ]; ]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to `from_array` with elements packed four at a time\n in an array of arrays.","sig":null,"attributes":[{"value":"/ Equivalent to `from_array` with elements packed four at a time","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":323414,"byte_end":323480,"line_start":341,"line_end":341,"column_start":5,"column_end":71}},{"value":"/ in an array of arrays.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":323485,"byte_end":323511,"line_start":342,"line_end":342,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":323516,"byte_end":323519,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ The order of the components corresponds to the","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":323524,"byte_end":323574,"line_start":344,"line_end":344,"column_start":5,"column_end":55}},{"value":"/ column-major-column-vector matrix notation (the same order","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":323579,"byte_end":323641,"line_start":345,"line_end":345,"column_start":5,"column_end":67}},{"value":"/ as `Transform3D::new`).","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":323646,"byte_end":323673,"line_start":346,"line_end":346,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":323678,"byte_end":323687,"line_start":347,"line_end":347,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3433},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":324099,"byte_end":324111,"line_start":359,"line_end":359,"column_start":12,"column_end":24},"name":"from_untyped","qualname":"<Transform3D<T, Src, Dst>>::from_untyped","value":"pub fn from_untyped(&Transform3D<T, UnknownUnit, UnknownUnit>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Tag a unitless value with units.\n","sig":null,"attributes":[{"value":"/ Tag a unitless value with units.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":324037,"byte_end":324073,"line_start":357,"line_end":357,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":324078,"byte_end":324087,"line_start":358,"line_end":358,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3434},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":324455,"byte_end":324465,"line_start":370,"line_end":370,"column_start":12,"column_end":22},"name":"to_untyped","qualname":"<Transform3D<T, Src, Dst>>::to_untyped","value":"pub fn to_untyped(&Self) -> Transform3D<T, UnknownUnit, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":" Drop the units, preserving only the numeric value.\n","sig":null,"attributes":[{"value":"/ Drop the units, preserving only the numeric value.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":324375,"byte_end":324429,"line_start":368,"line_end":368,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":324434,"byte_end":324443,"line_start":369,"line_end":369,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3435},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":324860,"byte_end":324871,"line_start":381,"line_end":381,"column_start":12,"column_end":23},"name":"with_source","qualname":"<Transform3D<T, Src, Dst>>::with_source","value":"pub fn with_source<NewSrc>(&Self) -> Transform3D<T, NewSrc, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Returns the same transform with a different source unit.\n","sig":null,"attributes":[{"value":"/ Returns the same transform with a different source unit.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":324774,"byte_end":324834,"line_start":379,"line_end":379,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":324839,"byte_end":324848,"line_start":380,"line_end":380,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3437},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":325266,"byte_end":325282,"line_start":392,"line_end":392,"column_start":12,"column_end":28},"name":"with_destination","qualname":"<Transform3D<T, Src, Dst>>::with_destination","value":"pub fn with_destination<NewDst>(&Self) -> Transform3D<T, Src, NewDst>","parent":null,"children":[],"decl_id":null,"docs":" Returns the same transform with a different destination unit.\n","sig":null,"attributes":[{"value":"/ Returns the same transform with a different destination unit.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":325175,"byte_end":325240,"line_start":390,"line_end":390,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":325245,"byte_end":325254,"line_start":391,"line_end":391,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3439},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":325875,"byte_end":325880,"line_start":407,"line_end":407,"column_start":12,"column_end":17},"name":"to_2d","qualname":"<Transform3D<T, Src, Dst>>::to_2d","value":"pub fn to_2d(&Self) -> Transform2D<T, Src, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Create a 2D transform picking the relevant terms from this transform.","sig":null,"attributes":[{"value":"/ Create a 2D transform picking the relevant terms from this transform.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":325586,"byte_end":325659,"line_start":401,"line_end":401,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":325664,"byte_end":325667,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ This method assumes that self represents a 2d transformation, callers","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":325672,"byte_end":325745,"line_start":403,"line_end":403,"column_start":5,"column_end":78}},{"value":"/ should check that [`self.is_2d()`] returns `true` beforehand.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":325750,"byte_end":325815,"line_start":404,"line_end":404,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":325820,"byte_end":325823,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ [`self.is_2d()`]: #method.is_2d","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":325828,"byte_end":325863,"line_start":406,"line_end":406,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3444},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":326290,"byte_end":326298,"line_start":429,"line_end":429,"column_start":12,"column_end":20},"name":"identity","qualname":"<Transform3D<T, Src, Dst>>::identity","value":"pub fn identity() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an identity matrix:","sig":null,"attributes":[{"value":"/ Creates an identity matrix:","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":326133,"byte_end":326164,"line_start":420,"line_end":420,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":326169,"byte_end":326172,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":326177,"byte_end":326188,"line_start":422,"line_end":422,"column_start":5,"column_end":16}},{"value":"/ 1 0 0 0","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":326193,"byte_end":326204,"line_start":423,"line_end":423,"column_start":5,"column_end":16}},{"value":"/ 0 1 0 0","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":326209,"byte_end":326220,"line_start":424,"line_end":424,"column_start":5,"column_end":16}},{"value":"/ 0 0 1 0","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":326225,"byte_end":326236,"line_start":425,"line_end":425,"column_start":5,"column_end":16}},{"value":"/ 0 0 0 1","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":326241,"byte_end":326252,"line_start":426,"line_end":426,"column_start":5,"column_end":16}},{"value":"/ ```","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":326257,"byte_end":326264,"line_start":427,"line_end":427,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":326269,"byte_end":326278,"line_start":428,"line_end":428,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3446},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":326828,"byte_end":326832,"line_start":447,"line_end":447,"column_start":12,"column_end":16},"name":"skew","qualname":"<Transform3D<T, Src, Dst>>::skew","value":"pub fn skew(Angle<T>, Angle<T>) -> Self where T: Trig","parent":null,"children":[],"decl_id":null,"docs":" Create a 2d skew transform.","sig":null,"attributes":[{"value":"/ Create a 2d skew transform.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":326709,"byte_end":326740,"line_start":444,"line_end":444,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":326745,"byte_end":326748,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ See <https://drafts.csswg.org/css-transforms/#funcdef-skew>","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":326753,"byte_end":326816,"line_start":446,"line_end":446,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":3449},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":327517,"byte_end":327528,"line_start":473,"line_end":473,"column_start":12,"column_end":23},"name":"perspective","qualname":"<Transform3D<T, Src, Dst>>::perspective","value":"pub fn perspective(T) -> Self where T: Neg<Output = T> + Div<Output = T>","parent":null,"children":[],"decl_id":null,"docs":" Create a simple perspective transform, projecting to the plane `z = -d`.","sig":null,"attributes":[{"value":"/ Create a simple perspective transform, projecting to the plane `z = -d`.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":327219,"byte_end":327295,"line_start":463,"line_end":463,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":327300,"byte_end":327303,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":327308,"byte_end":327319,"line_start":465,"line_end":465,"column_start":5,"column_end":16}},{"value":"/ 1   0   0   0","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":327324,"byte_end":327341,"line_start":466,"line_end":466,"column_start":5,"column_end":22}},{"value":"/ 0   1   0   0","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":327346,"byte_end":327363,"line_start":467,"line_end":467,"column_start":5,"column_end":22}},{"value":"/ 0   0   1 -1/d","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":327368,"byte_end":327386,"line_start":468,"line_end":468,"column_start":5,"column_end":23}},{"value":"/ 0   0   0   1","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":327391,"byte_end":327408,"line_start":469,"line_end":469,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":327413,"byte_end":327420,"line_start":470,"line_end":470,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":327425,"byte_end":327428,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ See <https://drafts.csswg.org/css-transforms-2/#PerspectiveDefined>.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":327433,"byte_end":327505,"line_start":472,"line_end":472,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":3456},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":328238,"byte_end":328242,"line_start":500,"line_end":500,"column_start":12,"column_end":16},"name":"then","qualname":"<Transform3D<T, Src, Dst>>::then","value":"pub fn then<NewDst>(&Self, &Transform3D<T, Dst, NewDst>)\n-> Transform3D<T, Src, NewDst>","parent":null,"children":[],"decl_id":null,"docs":" Returns the multiplication of the two matrices such that mat's transformation\n applies after self's transformation.","sig":null,"attributes":[{"value":"/ Returns the multiplication of the two matrices such that mat's transformation","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":328013,"byte_end":328094,"line_start":495,"line_end":495,"column_start":5,"column_end":86}},{"value":"/ applies after self's transformation.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":328099,"byte_end":328139,"line_start":496,"line_end":496,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":328144,"byte_end":328147,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ Assuming row vectors, this is equivalent to self * mat","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":328152,"byte_end":328210,"line_start":498,"line_end":498,"column_start":5,"column_end":63}},{"value":"must_use","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":328215,"byte_end":328226,"line_start":499,"line_end":499,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3462},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":330426,"byte_end":330437,"line_start":539,"line_end":539,"column_start":12,"column_end":23},"name":"translation","qualname":"<Transform3D<T, Src, Dst>>::translation","value":"pub fn translation(T, T, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a 3d translation transform:","sig":null,"attributes":[{"value":"/ Create a 3d translation transform:","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":330262,"byte_end":330300,"line_start":530,"line_end":530,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":330305,"byte_end":330308,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":330313,"byte_end":330324,"line_start":532,"line_end":532,"column_start":5,"column_end":16}},{"value":"/ 1 0 0 0","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":330329,"byte_end":330340,"line_start":533,"line_end":533,"column_start":5,"column_end":16}},{"value":"/ 0 1 0 0","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":330345,"byte_end":330356,"line_start":534,"line_end":534,"column_start":5,"column_end":16}},{"value":"/ 0 0 1 0","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":330361,"byte_end":330372,"line_start":535,"line_end":535,"column_start":5,"column_end":16}},{"value":"/ x y z 1","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":330377,"byte_end":330388,"line_start":536,"line_end":536,"column_start":5,"column_end":16}},{"value":"/ ```","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":330393,"byte_end":330400,"line_start":537,"line_end":537,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":330405,"byte_end":330414,"line_start":538,"line_end":538,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3465},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":330820,"byte_end":330833,"line_start":553,"line_end":553,"column_start":12,"column_end":25},"name":"pre_translate","qualname":"<Transform3D<T, Src, Dst>>::pre_translate","value":"pub fn pre_translate(&Self, Vector3D<T, Src>) -> Self where T: Copy +\nAdd<Output = T> + Mul<Output = T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a transform with a translation applied before self's transformation.\n","sig":null,"attributes":[{"value":"/ Returns a transform with a translation applied before self's transformation.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":330712,"byte_end":330792,"line_start":551,"line_end":551,"column_start":5,"column_end":85}},{"value":"must_use","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":330797,"byte_end":330808,"line_start":552,"line_end":552,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3466},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":331116,"byte_end":331130,"line_start":562,"line_end":562,"column_start":12,"column_end":26},"name":"then_translate","qualname":"<Transform3D<T, Src, Dst>>::then_translate","value":"pub fn then_translate(&Self, Vector3D<T, Dst>) -> Self where T: Copy +\nAdd<Output = T> + Mul<Output = T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a transform with a translation applied after self's transformation.\n","sig":null,"attributes":[{"value":"/ Returns a transform with a translation applied after self's transformation.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":331009,"byte_end":331088,"line_start":560,"line_end":560,"column_start":5,"column_end":84}},{"value":"must_use","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":331093,"byte_end":331104,"line_start":561,"line_end":561,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3471},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":331643,"byte_end":331651,"line_start":577,"line_end":577,"column_start":12,"column_end":20},"name":"rotation","qualname":"<Transform3D<T, Src, Dst>>::rotation","value":"pub fn rotation(T, T, T, Angle<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a 3d rotation transform from an angle / axis.\n The supplied axis must be normalized.\n","sig":null,"attributes":[{"value":"/ Create a 3d rotation transform from an angle / axis.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":331529,"byte_end":331585,"line_start":575,"line_end":575,"column_start":5,"column_end":61}},{"value":"/ The supplied axis must be normalized.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":331590,"byte_end":331631,"line_start":576,"line_end":576,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":3472},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":332628,"byte_end":332639,"line_start":615,"line_end":615,"column_start":12,"column_end":23},"name":"then_rotate","qualname":"<Transform3D<T, Src, Dst>>::then_rotate","value":"pub fn then_rotate(&Self, T, T, T, Angle<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a transform with a rotation applied after self's transformation.\n","sig":null,"attributes":[{"value":"/ Returns a transform with a rotation applied after self's transformation.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":332524,"byte_end":332600,"line_start":613,"line_end":613,"column_start":5,"column_end":81}},{"value":"must_use","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":332605,"byte_end":332616,"line_start":614,"line_end":614,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3473},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":332866,"byte_end":332876,"line_start":621,"line_end":621,"column_start":12,"column_end":22},"name":"pre_rotate","qualname":"<Transform3D<T, Src, Dst>>::pre_rotate","value":"pub fn pre_rotate(&Self, T, T, T, Angle<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a transform with a rotation applied before self's transformation.\n","sig":null,"attributes":[{"value":"/ Returns a transform with a rotation applied before self's transformation.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":332761,"byte_end":332838,"line_start":619,"line_end":619,"column_start":5,"column_end":82}},{"value":"must_use","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":332843,"byte_end":332854,"line_start":620,"line_end":620,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3478},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":333288,"byte_end":333293,"line_start":640,"line_end":640,"column_start":12,"column_end":17},"name":"scale","qualname":"<Transform3D<T, Src, Dst>>::scale","value":"pub fn scale(T, T, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a 3d scale transform:","sig":null,"attributes":[{"value":"/ Create a 3d scale transform:","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":333130,"byte_end":333162,"line_start":631,"line_end":631,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":333167,"byte_end":333170,"line_start":632,"line_end":632,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":333175,"byte_end":333186,"line_start":633,"line_end":633,"column_start":5,"column_end":16}},{"value":"/ x 0 0 0","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":333191,"byte_end":333202,"line_start":634,"line_end":634,"column_start":5,"column_end":16}},{"value":"/ 0 y 0 0","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":333207,"byte_end":333218,"line_start":635,"line_end":635,"column_start":5,"column_end":16}},{"value":"/ 0 0 z 0","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":333223,"byte_end":333234,"line_start":636,"line_end":636,"column_start":5,"column_end":16}},{"value":"/ 0 0 0 1","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":333239,"byte_end":333250,"line_start":637,"line_end":637,"column_start":5,"column_end":16}},{"value":"/ ```","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":333255,"byte_end":333262,"line_start":638,"line_end":638,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":333267,"byte_end":333276,"line_start":639,"line_end":639,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3481},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":333670,"byte_end":333679,"line_start":654,"line_end":654,"column_start":12,"column_end":21},"name":"pre_scale","qualname":"<Transform3D<T, Src, Dst>>::pre_scale","value":"pub fn pre_scale(&Self, T, T, T) -> Self where T: Copy + Add<Output = T> +\nMul<Output = T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a transform with a scale applied before self's transformation.\n","sig":null,"attributes":[{"value":"/ Returns a transform with a scale applied before self's transformation.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":333568,"byte_end":333642,"line_start":652,"line_end":652,"column_start":5,"column_end":79}},{"value":"must_use","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":333647,"byte_end":333658,"line_start":653,"line_end":653,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3482},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":334197,"byte_end":334207,"line_start":668,"line_end":668,"column_start":12,"column_end":22},"name":"then_scale","qualname":"<Transform3D<T, Src, Dst>>::then_scale","value":"pub fn then_scale(&Self, T, T, T) -> Self where T: Copy + Add<Output = T> +\nMul<Output = T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a transform with a scale applied after self's transformation.\n","sig":null,"attributes":[{"value":"/ Returns a transform with a scale applied after self's transformation.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":334096,"byte_end":334169,"line_start":666,"line_end":666,"column_start":5,"column_end":78}},{"value":"must_use","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":334174,"byte_end":334185,"line_start":667,"line_end":667,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3487},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":334722,"byte_end":334751,"line_start":685,"line_end":685,"column_start":12,"column_end":41},"name":"transform_point2d_homogeneous","qualname":"<Transform3D<T, Src, Dst>>::transform_point2d_homogeneous","value":"pub fn transform_point2d_homogeneous(&Self, Point2D<T, Src>)\n-> HomogeneousVector<T, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Returns the homogeneous vector corresponding to the transformed 2d point.","sig":null,"attributes":[{"value":"/ Returns the homogeneous vector corresponding to the transformed 2d point.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":334520,"byte_end":334597,"line_start":681,"line_end":681,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":334602,"byte_end":334605,"line_start":682,"line_end":682,"column_start":5,"column_end":8}},{"value":"/ The input point must be use the unit Src, and the returned point has the unit Dst.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":334610,"byte_end":334696,"line_start":683,"line_end":683,"column_start":5,"column_end":91}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":334701,"byte_end":334710,"line_start":684,"line_end":684,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3488},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":335364,"byte_end":335381,"line_start":701,"line_end":701,"column_start":12,"column_end":29},"name":"transform_point2d","qualname":"<Transform3D<T, Src, Dst>>::transform_point2d","value":"pub fn transform_point2d(&Self, Point2D<T, Src>) -> Option<Point2D<T, Dst>>\nwhere T: Div<Output = T> + Zero + PartialOrd","parent":null,"children":[],"decl_id":null,"docs":" Returns the given 2d point transformed by this transform, if the transform makes sense,\n or `None` otherwise.","sig":null,"attributes":[{"value":"/ Returns the given 2d point transformed by this transform, if the transform makes sense,","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":335119,"byte_end":335210,"line_start":696,"line_end":696,"column_start":5,"column_end":96}},{"value":"/ or `None` otherwise.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":335215,"byte_end":335239,"line_start":697,"line_end":697,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":335244,"byte_end":335247,"line_start":698,"line_end":698,"column_start":5,"column_end":8}},{"value":"/ The input point must be use the unit Src, and the returned point has the unit Dst.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":335252,"byte_end":335338,"line_start":699,"line_end":699,"column_start":5,"column_end":91}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":335343,"byte_end":335352,"line_start":700,"line_end":700,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3489},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":336099,"byte_end":336117,"line_start":721,"line_end":721,"column_start":12,"column_end":30},"name":"transform_vector2d","qualname":"<Transform3D<T, Src, Dst>>::transform_vector2d","value":"pub fn transform_vector2d(&Self, Vector2D<T, Src>) -> Vector2D<T, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Returns the given 2d vector transformed by this matrix.","sig":null,"attributes":[{"value":"/ Returns the given 2d vector transformed by this matrix.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":335915,"byte_end":335974,"line_start":717,"line_end":717,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":335979,"byte_end":335982,"line_start":718,"line_end":718,"column_start":5,"column_end":8}},{"value":"/ The input point must be use the unit Src, and the returned point has the unit Dst.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":335987,"byte_end":336073,"line_start":719,"line_end":719,"column_start":5,"column_end":91}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":336078,"byte_end":336087,"line_start":720,"line_end":720,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3490},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":336495,"byte_end":336524,"line_start":732,"line_end":732,"column_start":12,"column_end":41},"name":"transform_point3d_homogeneous","qualname":"<Transform3D<T, Src, Dst>>::transform_point3d_homogeneous","value":"pub fn transform_point3d_homogeneous(&Self, Point3D<T, Src>)\n-> HomogeneousVector<T, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Returns the homogeneous vector corresponding to the transformed 3d point.","sig":null,"attributes":[{"value":"/ Returns the homogeneous vector corresponding to the transformed 3d point.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":336293,"byte_end":336370,"line_start":728,"line_end":728,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":336375,"byte_end":336378,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ The input point must be use the unit Src, and the returned point has the unit Dst.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":336383,"byte_end":336469,"line_start":730,"line_end":730,"column_start":5,"column_end":91}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":336474,"byte_end":336483,"line_start":731,"line_end":731,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3491},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":337205,"byte_end":337222,"line_start":748,"line_end":748,"column_start":12,"column_end":29},"name":"transform_point3d","qualname":"<Transform3D<T, Src, Dst>>::transform_point3d","value":"pub fn transform_point3d(&Self, Point3D<T, Src>) -> Option<Point3D<T, Dst>>\nwhere T: Div<Output = T> + Zero + PartialOrd","parent":null,"children":[],"decl_id":null,"docs":" Returns the given 3d point transformed by this transform, if the transform makes sense,\n or `None` otherwise.","sig":null,"attributes":[{"value":"/ Returns the given 3d point transformed by this transform, if the transform makes sense,","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":336960,"byte_end":337051,"line_start":743,"line_end":743,"column_start":5,"column_end":96}},{"value":"/ or `None` otherwise.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":337056,"byte_end":337080,"line_start":744,"line_end":744,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":337085,"byte_end":337088,"line_start":745,"line_end":745,"column_start":5,"column_end":8}},{"value":"/ The input point must be use the unit Src, and the returned point has the unit Dst.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":337093,"byte_end":337179,"line_start":746,"line_end":746,"column_start":5,"column_end":91}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":337184,"byte_end":337193,"line_start":747,"line_end":747,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3492},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":337595,"byte_end":337613,"line_start":759,"line_end":759,"column_start":12,"column_end":30},"name":"transform_vector3d","qualname":"<Transform3D<T, Src, Dst>>::transform_vector3d","value":"pub fn transform_vector3d(&Self, Vector3D<T, Src>) -> Vector3D<T, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Returns the given 3d vector transformed by this matrix.","sig":null,"attributes":[{"value":"/ Returns the given 3d vector transformed by this matrix.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":337411,"byte_end":337470,"line_start":755,"line_end":755,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":337475,"byte_end":337478,"line_start":756,"line_end":756,"column_start":5,"column_end":8}},{"value":"/ The input point must be use the unit Src, and the returned point has the unit Dst.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":337483,"byte_end":337569,"line_start":757,"line_end":757,"column_start":5,"column_end":91}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":337574,"byte_end":337583,"line_start":758,"line_end":758,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3493},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":338069,"byte_end":338091,"line_start":769,"line_end":769,"column_start":12,"column_end":34},"name":"outer_transformed_rect","qualname":"<Transform3D<T, Src, Dst>>::outer_transformed_rect","value":"pub fn outer_transformed_rect(&Self, &Rect<T, Src>) -> Option<Rect<T, Dst>>\nwhere T: Sub<Output = T> + Div<Output = T> + Zero + PartialOrd","parent":null,"children":[],"decl_id":null,"docs":" Returns a rectangle that encompasses the result of transforming the given rectangle by this\n transform, if the transform makes sense for it, or `None` otherwise.\n","sig":null,"attributes":[{"value":"/ Returns a rectangle that encompasses the result of transforming the given rectangle by this","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":337885,"byte_end":337980,"line_start":767,"line_end":767,"column_start":5,"column_end":100}},{"value":"/ transform, if the transform makes sense for it, or `None` otherwise.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":337985,"byte_end":338057,"line_start":768,"line_end":768,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":3494},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":338720,"byte_end":338743,"line_start":785,"line_end":785,"column_start":12,"column_end":35},"name":"outer_transformed_box2d","qualname":"<Transform3D<T, Src, Dst>>::outer_transformed_box2d","value":"pub fn outer_transformed_box2d(&Self, &Box2D<T, Src>) -> Option<Box2D<T, Dst>>\nwhere T: Sub<Output = T> + Div<Output = T> + Zero + PartialOrd","parent":null,"children":[],"decl_id":null,"docs":" Returns a 2d box that encompasses the result of transforming the given box by this\n transform, if the transform makes sense for it, or `None` otherwise.\n","sig":null,"attributes":[{"value":"/ Returns a 2d box that encompasses the result of transforming the given box by this","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":338545,"byte_end":338631,"line_start":783,"line_end":783,"column_start":5,"column_end":91}},{"value":"/ transform, if the transform makes sense for it, or `None` otherwise.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":338636,"byte_end":338708,"line_start":784,"line_end":784,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":3495},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":339324,"byte_end":339347,"line_start":799,"line_end":799,"column_start":12,"column_end":35},"name":"outer_transformed_box3d","qualname":"<Transform3D<T, Src, Dst>>::outer_transformed_box3d","value":"pub fn outer_transformed_box3d(&Self, &Box3D<T, Src>) -> Option<Box3D<T, Dst>>\nwhere T: Sub<Output = T> + Div<Output = T> + Zero + PartialOrd","parent":null,"children":[],"decl_id":null,"docs":" Returns a 3d box that encompasses the result of transforming the given box by this\n transform, if the transform makes sense for it, or `None` otherwise.\n","sig":null,"attributes":[{"value":"/ Returns a 3d box that encompasses the result of transforming the given box by this","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":339149,"byte_end":339235,"line_start":797,"line_end":797,"column_start":5,"column_end":91}},{"value":"/ transform, if the transform makes sense for it, or `None` otherwise.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":339240,"byte_end":339312,"line_start":798,"line_end":798,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":3500},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":340418,"byte_end":340423,"line_start":828,"line_end":828,"column_start":12,"column_end":17},"name":"ortho","qualname":"<Transform3D<T, Src, Dst>>::ortho","value":"pub fn ortho(T, T, T, T, T, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an orthogonal projection transform.\n","sig":null,"attributes":[{"value":"/ Create an orthogonal projection transform.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":340360,"byte_end":340406,"line_start":827,"line_end":827,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":3501},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":341266,"byte_end":341285,"line_start":847,"line_end":847,"column_start":12,"column_end":31},"name":"is_backface_visible","qualname":"<Transform3D<T, Src, Dst>>::is_backface_visible","value":"pub fn is_backface_visible(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether shapes on the XY plane with Z pointing towards the\n screen transformed by this matrix would be facing back.\n","sig":null,"attributes":[{"value":"/ Check whether shapes on the XY plane with Z pointing towards the","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":341122,"byte_end":341190,"line_start":845,"line_end":845,"column_start":5,"column_end":73}},{"value":"/ screen transformed by this matrix would be facing back.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":341195,"byte_end":341254,"line_start":846,"line_end":846,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":3502},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":341786,"byte_end":341799,"line_start":859,"line_end":859,"column_start":12,"column_end":25},"name":"is_invertible","qualname":"<Transform3D<T, Src, Dst>>::is_invertible","value":"pub fn is_invertible(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether it is possible to compute the inverse transform.\n","sig":null,"attributes":[{"value":"/ Returns whether it is possible to compute the inverse transform.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":341692,"byte_end":341760,"line_start":857,"line_end":857,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":341765,"byte_end":341774,"line_start":858,"line_end":858,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3503},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":341929,"byte_end":341936,"line_start":864,"line_end":864,"column_start":12,"column_end":19},"name":"inverse","qualname":"<Transform3D<T, Src, Dst>>::inverse","value":"pub fn inverse(&Self) -> Option<Transform3D<T, Dst, Src>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the inverse transform if possible.\n","sig":null,"attributes":[{"value":"/ Returns the inverse transform if possible.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":341871,"byte_end":341917,"line_start":863,"line_end":863,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":3504},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":345731,"byte_end":345742,"line_start":944,"line_end":944,"column_start":12,"column_end":23},"name":"determinant","qualname":"<Transform3D<T, Src, Dst>>::determinant","value":"pub fn determinant(&Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Compute the determinant of the transform.\n","sig":null,"attributes":[{"value":"/ Compute the determinant of the transform.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":345674,"byte_end":345719,"line_start":943,"line_end":943,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":3505},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":347125,"byte_end":347130,"line_start":973,"line_end":973,"column_start":12,"column_end":17},"name":"mul_s","qualname":"<Transform3D<T, Src, Dst>>::mul_s","value":"pub fn mul_s(&Self, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Multiplies all of the transform's component by a scalar and returns the result.\n","sig":null,"attributes":[{"value":"/ Multiplies all of the transform's component by a scalar and returns the result.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":347014,"byte_end":347097,"line_start":971,"line_end":971,"column_start":5,"column_end":88}},{"value":"must_use","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":347102,"byte_end":347113,"line_start":972,"line_end":972,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3506},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":347552,"byte_end":347562,"line_start":983,"line_end":983,"column_start":12,"column_end":22},"name":"from_scale","qualname":"<Transform3D<T, Src, Dst>>::from_scale","value":"pub fn from_scale(Scale<T, Src, Dst>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convenience function to create a scale transform from a `Scale`.\n","sig":null,"attributes":[{"value":"/ Convenience function to create a scale transform from a `Scale`.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":347472,"byte_end":347540,"line_start":982,"line_end":982,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":3511},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":347872,"byte_end":347885,"line_start":993,"line_end":993,"column_start":12,"column_end":25},"name":"project_to_2d","qualname":"<Transform3D<T, Src, Dst>>::project_to_2d","value":"pub fn project_to_2d(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a projection of this transform in 2d space.\n","sig":null,"attributes":[{"value":"/ Returns a projection of this transform in 2d space.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":347805,"byte_end":347860,"line_start":992,"line_end":992,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3516},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":349382,"byte_end":349386,"line_start":1032,"line_end":1032,"column_start":12,"column_end":16},"name":"cast","qualname":"<Transform3D<T, Src, Dst>>::cast","value":"pub fn cast<NewT: NumCast>(&Self) -> Transform3D<NewT, Src, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Cast from one numeric representation to another, preserving the units.\n","sig":null,"attributes":[{"value":"/ Cast from one numeric representation to another, preserving the units.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":349282,"byte_end":349356,"line_start":1030,"line_end":1030,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":349361,"byte_end":349370,"line_start":1031,"line_end":1031,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3518},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":349581,"byte_end":349589,"line_start":1037,"line_end":1037,"column_start":12,"column_end":20},"name":"try_cast","qualname":"<Transform3D<T, Src, Dst>>::try_cast","value":"pub fn try_cast<NewT: NumCast>(&Self) -> Option<Transform3D<NewT, Src, Dst>>","parent":null,"children":[],"decl_id":null,"docs":" Fallible cast from one numeric representation to another, preserving the units.\n","sig":null,"attributes":[{"value":"/ Fallible cast from one numeric representation to another, preserving the units.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":349486,"byte_end":349569,"line_start":1036,"line_end":1036,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":3524},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":351118,"byte_end":351127,"line_start":1068,"line_end":1068,"column_start":12,"column_end":21},"name":"approx_eq","qualname":"<Transform3D<T, Src, Dst>>::approx_eq","value":"pub fn approx_eq(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true is this transform is approximately equal to the other one, using\n T's default epsilon value.","sig":null,"attributes":[{"value":"/ Returns true is this transform is approximately equal to the other one, using","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":350792,"byte_end":350873,"line_start":1061,"line_end":1061,"column_start":5,"column_end":86}},{"value":"/ T's default epsilon value.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":350878,"byte_end":350908,"line_start":1062,"line_end":1062,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":350913,"byte_end":350916,"line_start":1063,"line_end":1063,"column_start":5,"column_end":8}},{"value":"/ The same as [`ApproxEq::approx_eq()`] but available without importing trait.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":350921,"byte_end":351001,"line_start":1064,"line_end":1064,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":351006,"byte_end":351009,"line_start":1065,"line_end":1065,"column_start":5,"column_end":8}},{"value":"/ [`ApproxEq::approx_eq()`]: ./approxeq/trait.ApproxEq.html#method.approx_eq","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":351014,"byte_end":351092,"line_start":1066,"line_end":1066,"column_start":5,"column_end":83}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":351097,"byte_end":351106,"line_start":1067,"line_end":1067,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3525},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":351563,"byte_end":351576,"line_start":1079,"line_end":1079,"column_start":12,"column_end":25},"name":"approx_eq_eps","qualname":"<Transform3D<T, Src, Dst>>::approx_eq_eps","value":"pub fn approx_eq_eps(&Self, &Self, &T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true is this transform is approximately equal to the other one, using\n a provided epsilon value.","sig":null,"attributes":[{"value":"/ Returns true is this transform is approximately equal to the other one, using","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":351226,"byte_end":351307,"line_start":1072,"line_end":1072,"column_start":5,"column_end":86}},{"value":"/ a provided epsilon value.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":351312,"byte_end":351341,"line_start":1073,"line_end":1073,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":351346,"byte_end":351349,"line_start":1074,"line_end":1074,"column_start":5,"column_end":8}},{"value":"/ The same as [`ApproxEq::approx_eq_eps()`] but available without importing trait.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":351354,"byte_end":351438,"line_start":1075,"line_end":1075,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":351443,"byte_end":351446,"line_start":1076,"line_end":1076,"column_start":5,"column_end":8}},{"value":"/ [`ApproxEq::approx_eq_eps()`]: ./approxeq/trait.ApproxEq.html#method.approx_eq_eps","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":351451,"byte_end":351537,"line_start":1077,"line_end":1077,"column_start":5,"column_end":91}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":351542,"byte_end":351551,"line_start":1078,"line_end":1078,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":3623},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":365706,"byte_end":365719,"line_start":51,"line_end":51,"column_start":12,"column_end":25},"name":"Translation2D","qualname":"::translation::Translation2D","value":"Translation2D { x, y, _unit }","parent":null,"children":[{"krate":0,"index":3627},{"krate":0,"index":3628},{"krate":0,"index":3629}],"decl_id":null,"docs":" A 2d transformation from a space to another that can only express translations.","sig":null,"attributes":[{"value":"/ A 2d transformation from a space to another that can only express translations.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":364805,"byte_end":364888,"line_start":22,"line_end":22,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":364889,"byte_end":364892,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ The main benefit of this type over a Vector2D is the ability to cast","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":364893,"byte_end":364965,"line_start":24,"line_end":24,"column_start":1,"column_end":73}},{"value":"/ between a source and a destination spaces.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":364966,"byte_end":365012,"line_start":25,"line_end":25,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":365013,"byte_end":365016,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Example:","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":365017,"byte_end":365029,"line_start":27,"line_end":27,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":365030,"byte_end":365033,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":365034,"byte_end":365041,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/ use euclid::{Translation2D, Point2D, point2};","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":365042,"byte_end":365091,"line_start":30,"line_end":30,"column_start":1,"column_end":50}},{"value":"/ struct ParentSpace;","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":365092,"byte_end":365115,"line_start":31,"line_end":31,"column_start":1,"column_end":24}},{"value":"/ struct ChildSpace;","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":365116,"byte_end":365138,"line_start":32,"line_end":32,"column_start":1,"column_end":23}},{"value":"/ type ScrollOffset = Translation2D<i32, ParentSpace, ChildSpace>;","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":365139,"byte_end":365207,"line_start":33,"line_end":33,"column_start":1,"column_end":69}},{"value":"/ type ParentPoint = Point2D<i32, ParentSpace>;","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":365208,"byte_end":365257,"line_start":34,"line_end":34,"column_start":1,"column_end":50}},{"value":"/ type ChildPoint = Point2D<i32, ChildSpace>;","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":365258,"byte_end":365305,"line_start":35,"line_end":35,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":365306,"byte_end":365309,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ let scrolling = ScrollOffset::new(0, 100);","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":365310,"byte_end":365356,"line_start":37,"line_end":37,"column_start":1,"column_end":47}},{"value":"/ let p1: ParentPoint = point2(0, 0);","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":365357,"byte_end":365396,"line_start":38,"line_end":38,"column_start":1,"column_end":40}},{"value":"/ let p2: ChildPoint = scrolling.transform_point(p1);","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":365397,"byte_end":365452,"line_start":39,"line_end":39,"column_start":1,"column_end":56}},{"value":"/ ```","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":365453,"byte_end":365460,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":365461,"byte_end":365464,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":365465,"byte_end":365475,"line_start":42,"line_end":42,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":3627},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":365743,"byte_end":365744,"line_start":52,"line_end":52,"column_start":9,"column_end":10},"name":"x","qualname":"::translation::Translation2D::x","value":"T","parent":{"krate":0,"index":3623},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3628},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":365757,"byte_end":365758,"line_start":53,"line_end":53,"column_start":9,"column_end":10},"name":"y","qualname":"::translation::Translation2D::y","value":"T","parent":{"krate":0,"index":3623},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3629},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":365790,"byte_end":365795,"line_start":55,"line_end":55,"column_start":9,"column_end":14},"name":"_unit","qualname":"::translation::Translation2D::_unit","value":"core::marker::PhantomData<(Src, Dst)>","parent":{"krate":0,"index":3623},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3658},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":367038,"byte_end":367041,"line_start":109,"line_end":109,"column_start":18,"column_end":21},"name":"new","qualname":"<Translation2D<T, Src, Dst>>::new","value":"pub const fn new(T, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":367011,"byte_end":367020,"line_start":108,"line_end":108,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3659},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":367192,"byte_end":367197,"line_start":118,"line_end":118,"column_start":12,"column_end":17},"name":"splat","qualname":"<Translation2D<T, Src, Dst>>::splat","value":"pub fn splat(T) -> Self where T: Clone","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":367171,"byte_end":367180,"line_start":117,"line_end":117,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3660},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":367454,"byte_end":367462,"line_start":131,"line_end":131,"column_start":12,"column_end":20},"name":"identity","qualname":"<Translation2D<T, Src, Dst>>::identity","value":"pub fn identity() -> Self where T: Zero","parent":null,"children":[],"decl_id":null,"docs":" Creates no-op translation (both `x` and `y` is `zero()`).\n","sig":null,"attributes":[{"value":"/ Creates no-op translation (both `x` and `y` is `zero()`).","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":367367,"byte_end":367428,"line_start":129,"line_end":129,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":367433,"byte_end":367442,"line_start":130,"line_end":130,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3661},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":368010,"byte_end":368021,"line_start":149,"line_end":149,"column_start":12,"column_end":23},"name":"is_identity","qualname":"<Translation2D<T, Src, Dst>>::is_identity","value":"pub fn is_identity(&Self) -> bool where T: Zero + PartialEq","parent":null,"children":[],"decl_id":null,"docs":" Check if translation does nothing (both x and y is `zero()`).","sig":null,"attributes":[{"value":"/ Check if translation does nothing (both x and y is `zero()`).","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":367557,"byte_end":367622,"line_start":138,"line_end":138,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":367627,"byte_end":367630,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":367635,"byte_end":367646,"line_start":140,"line_end":140,"column_start":5,"column_end":16}},{"value":"/ use euclid::default::Translation2D;","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":367651,"byte_end":367690,"line_start":141,"line_end":141,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":367695,"byte_end":367698,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Translation2D::<f32>::identity().is_identity(), true);","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":367703,"byte_end":367772,"line_start":143,"line_end":143,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(Translation2D::new(0, 0).is_identity(), true);","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":367777,"byte_end":367838,"line_start":144,"line_end":144,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(Translation2D::new(1, 0).is_identity(), false);","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":367843,"byte_end":367905,"line_start":145,"line_end":145,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(Translation2D::new(0, 1).is_identity(), false);","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":367910,"byte_end":367972,"line_start":146,"line_end":146,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":367977,"byte_end":367984,"line_start":147,"line_end":147,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":367989,"byte_end":367998,"line_start":148,"line_end":148,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3662},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":368214,"byte_end":368228,"line_start":159,"line_end":159,"column_start":12,"column_end":26},"name":"transform_size","qualname":"<Translation2D<T, Src, Dst>>::transform_size","value":"pub fn transform_size(&Self, Size2D<T, Src>) -> Size2D<T, Dst>","parent":null,"children":[],"decl_id":null,"docs":" No-op, just cast the unit.\n","sig":null,"attributes":[{"value":"/ No-op, just cast the unit.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":368158,"byte_end":368188,"line_start":157,"line_end":157,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":368193,"byte_end":368202,"line_start":158,"line_end":158,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3667},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":368432,"byte_end":368441,"line_start":167,"line_end":167,"column_start":12,"column_end":21},"name":"to_vector","qualname":"<Translation2D<T, Src, Dst>>::to_vector","value":"pub fn to_vector(&Self) -> Vector2D<T, Src>","parent":null,"children":[],"decl_id":null,"docs":" Cast into a 2D vector.\n","sig":null,"attributes":[{"value":"/ Cast into a 2D vector.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":368380,"byte_end":368406,"line_start":165,"line_end":165,"column_start":5,"column_end":31}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":368411,"byte_end":368420,"line_start":166,"line_end":166,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3668},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":368573,"byte_end":368581,"line_start":173,"line_end":173,"column_start":12,"column_end":20},"name":"to_array","qualname":"<Translation2D<T, Src, Dst>>::to_array","value":"pub fn to_array(&Self) -> [T; ]","parent":null,"children":[],"decl_id":null,"docs":" Cast into an array with x and y.\n","sig":null,"attributes":[{"value":"/ Cast into an array with x and y.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":368511,"byte_end":368547,"line_start":171,"line_end":171,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":368552,"byte_end":368561,"line_start":172,"line_end":172,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3670},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":368698,"byte_end":368706,"line_start":179,"line_end":179,"column_start":12,"column_end":20},"name":"to_tuple","qualname":"<Translation2D<T, Src, Dst>>::to_tuple","value":"pub fn to_tuple(&Self) -> (T, T)","parent":null,"children":[],"decl_id":null,"docs":" Cast into a tuple with x and y.\n","sig":null,"attributes":[{"value":"/ Cast into a tuple with x and y.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":368637,"byte_end":368672,"line_start":177,"line_end":177,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":368677,"byte_end":368686,"line_start":178,"line_end":178,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3671},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":368842,"byte_end":368852,"line_start":185,"line_end":185,"column_start":12,"column_end":22},"name":"to_untyped","qualname":"<Translation2D<T, Src, Dst>>::to_untyped","value":"pub fn to_untyped(&Self) -> Translation2D<T, UnknownUnit, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":" Drop the units, preserving only the numeric value.\n","sig":null,"attributes":[{"value":"/ Drop the units, preserving only the numeric value.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":368762,"byte_end":368816,"line_start":183,"line_end":183,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":368821,"byte_end":368830,"line_start":184,"line_end":184,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3672},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":369093,"byte_end":369105,"line_start":195,"line_end":195,"column_start":12,"column_end":24},"name":"from_untyped","qualname":"<Translation2D<T, Src, Dst>>::from_untyped","value":"pub fn from_untyped(&Translation2D<T, UnknownUnit, UnknownUnit>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Tag a unitless value with units.\n","sig":null,"attributes":[{"value":"/ Tag a unitless value with units.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":369031,"byte_end":369067,"line_start":193,"line_end":193,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":369072,"byte_end":369081,"line_start":194,"line_end":194,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3673},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":369365,"byte_end":369377,"line_start":205,"line_end":205,"column_start":12,"column_end":24},"name":"to_transform","qualname":"<Translation2D<T, Src, Dst>>::to_transform","value":"pub fn to_transform(&Self) -> Transform2D<T, Src, Dst> where T: Zero + One","parent":null,"children":[],"decl_id":null,"docs":" Returns the matrix representation of this translation.\n","sig":null,"attributes":[{"value":"/ Returns the matrix representation of this translation.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":369281,"byte_end":369339,"line_start":203,"line_end":203,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":369344,"byte_end":369353,"line_start":204,"line_end":204,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3674},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":369552,"byte_end":369567,"line_start":214,"line_end":214,"column_start":12,"column_end":27},"name":"transform_point","qualname":"<Translation2D<T, Src, Dst>>::transform_point","value":"pub fn transform_point(&Self, Point2D<T, Src>) -> Point2D<T::Output, Dst>\nwhere T: Add","parent":null,"children":[],"decl_id":null,"docs":" Translate a point and cast its unit.\n","sig":null,"attributes":[{"value":"/ Translate a point and cast its unit.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":369486,"byte_end":369526,"line_start":212,"line_end":212,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":369531,"byte_end":369540,"line_start":213,"line_end":213,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3675},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":369778,"byte_end":369792,"line_start":223,"line_end":223,"column_start":12,"column_end":26},"name":"transform_rect","qualname":"<Translation2D<T, Src, Dst>>::transform_rect","value":"pub fn transform_rect(&Self, &Rect<T, Src>) -> Rect<T::Output, Dst> where\nT: Add<Output = T>","parent":null,"children":[],"decl_id":null,"docs":" Translate a rectangle and cast its unit.\n","sig":null,"attributes":[{"value":"/ Translate a rectangle and cast its unit.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":369708,"byte_end":369752,"line_start":221,"line_end":221,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":369757,"byte_end":369766,"line_start":222,"line_end":222,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3676},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":370088,"byte_end":370101,"line_start":235,"line_end":235,"column_start":12,"column_end":25},"name":"transform_box","qualname":"<Translation2D<T, Src, Dst>>::transform_box","value":"pub fn transform_box(&Self, &Box2D<T, Src>) -> Box2D<T::Output, Dst> where\nT: Add","parent":null,"children":[],"decl_id":null,"docs":" Translate a 2D box and cast its unit.\n","sig":null,"attributes":[{"value":"/ Translate a 2D box and cast its unit.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":370021,"byte_end":370062,"line_start":233,"line_end":233,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":370067,"byte_end":370076,"line_start":234,"line_end":234,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3677},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":370378,"byte_end":370385,"line_start":247,"line_end":247,"column_start":12,"column_end":19},"name":"inverse","qualname":"<Translation2D<T, Src, Dst>>::inverse","value":"pub fn inverse(&Self) -> Translation2D<T::Output, Dst, Src> where T: Neg","parent":null,"children":[],"decl_id":null,"docs":" Return the inverse transformation.\n","sig":null,"attributes":[{"value":"/ Return the inverse transformation.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":370314,"byte_end":370352,"line_start":245,"line_end":245,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":370357,"byte_end":370366,"line_start":246,"line_end":246,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":3727},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":372670,"byte_end":372683,"line_start":326,"line_end":326,"column_start":12,"column_end":25},"name":"Translation3D","qualname":"::translation::Translation3D","value":"Translation3D { x, y, z, _unit }","parent":null,"children":[{"krate":0,"index":3731},{"krate":0,"index":3732},{"krate":0,"index":3733},{"krate":0,"index":3734}],"decl_id":null,"docs":" A 3d transformation from a space to another that can only express translations.","sig":null,"attributes":[{"value":"/ A 3d transformation from a space to another that can only express translations.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":372440,"byte_end":372523,"line_start":321,"line_end":321,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":372524,"byte_end":372527,"line_start":322,"line_end":322,"column_start":1,"column_end":4}},{"value":"/ The main benefit of this type over a Vector3D is the ability to cast","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":372528,"byte_end":372600,"line_start":323,"line_end":323,"column_start":1,"column_end":73}},{"value":"/ between a source and a destination spaces.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":372601,"byte_end":372647,"line_start":324,"line_end":324,"column_start":1,"column_end":47}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":372648,"byte_end":372658,"line_start":325,"line_end":325,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":3731},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":372707,"byte_end":372708,"line_start":327,"line_end":327,"column_start":9,"column_end":10},"name":"x","qualname":"::translation::Translation3D::x","value":"T","parent":{"krate":0,"index":3727},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3732},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":372721,"byte_end":372722,"line_start":328,"line_end":328,"column_start":9,"column_end":10},"name":"y","qualname":"::translation::Translation3D::y","value":"T","parent":{"krate":0,"index":3727},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3733},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":372735,"byte_end":372736,"line_start":329,"line_end":329,"column_start":9,"column_end":10},"name":"z","qualname":"::translation::Translation3D::z","value":"T","parent":{"krate":0,"index":3727},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3734},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":372768,"byte_end":372773,"line_start":331,"line_end":331,"column_start":9,"column_end":14},"name":"_unit","qualname":"::translation::Translation3D::_unit","value":"core::marker::PhantomData<(Src, Dst)>","parent":{"krate":0,"index":3727},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3763},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":374454,"byte_end":374457,"line_start":403,"line_end":403,"column_start":18,"column_end":21},"name":"new","qualname":"<Translation3D<T, Src, Dst>>::new","value":"pub const fn new(T, T, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":374427,"byte_end":374436,"line_start":402,"line_end":402,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3764},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":374629,"byte_end":374634,"line_start":413,"line_end":413,"column_start":12,"column_end":17},"name":"splat","qualname":"<Translation3D<T, Src, Dst>>::splat","value":"pub fn splat(T) -> Self where T: Clone","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":374608,"byte_end":374617,"line_start":412,"line_end":412,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3765},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":374917,"byte_end":374925,"line_start":427,"line_end":427,"column_start":12,"column_end":20},"name":"identity","qualname":"<Translation3D<T, Src, Dst>>::identity","value":"pub fn identity() -> Self where T: Zero","parent":null,"children":[],"decl_id":null,"docs":" Creates no-op translation (`x`, `y` and `z` is `zero()`).\n","sig":null,"attributes":[{"value":"/ Creates no-op translation (`x`, `y` and `z` is `zero()`).","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":374830,"byte_end":374891,"line_start":425,"line_end":425,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":374896,"byte_end":374905,"line_start":426,"line_end":426,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3766},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":375576,"byte_end":375587,"line_start":446,"line_end":446,"column_start":12,"column_end":23},"name":"is_identity","qualname":"<Translation3D<T, Src, Dst>>::is_identity","value":"pub fn is_identity(&Self) -> bool where T: Zero + PartialEq","parent":null,"children":[],"decl_id":null,"docs":" Check if translation does nothing (`x`, `y` and `z` is `zero()`).","sig":null,"attributes":[{"value":"/ Check if translation does nothing (`x`, `y` and `z` is `zero()`).","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":375040,"byte_end":375109,"line_start":434,"line_end":434,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":375114,"byte_end":375117,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":375122,"byte_end":375133,"line_start":436,"line_end":436,"column_start":5,"column_end":16}},{"value":"/ use euclid::default::Translation3D;","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":375138,"byte_end":375177,"line_start":437,"line_end":437,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":375182,"byte_end":375185,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Translation3D::<f32>::identity().is_identity(), true);","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":375190,"byte_end":375259,"line_start":439,"line_end":439,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(Translation3D::new(0, 0, 0).is_identity(), true);","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":375264,"byte_end":375328,"line_start":440,"line_end":440,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(Translation3D::new(1, 0, 0).is_identity(), false);","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":375333,"byte_end":375398,"line_start":441,"line_end":441,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(Translation3D::new(0, 1, 0).is_identity(), false);","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":375403,"byte_end":375468,"line_start":442,"line_end":442,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(Translation3D::new(0, 0, 1).is_identity(), false);","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":375473,"byte_end":375538,"line_start":443,"line_end":443,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":375543,"byte_end":375550,"line_start":444,"line_end":444,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":375555,"byte_end":375564,"line_start":445,"line_end":445,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3767},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":375796,"byte_end":375810,"line_start":456,"line_end":456,"column_start":12,"column_end":26},"name":"transform_size","qualname":"<Translation3D<T, Src, Dst>>::transform_size","value":"pub fn transform_size(Self, Size2D<T, Src>) -> Size2D<T, Dst>","parent":null,"children":[],"decl_id":null,"docs":" No-op, just cast the unit.\n","sig":null,"attributes":[{"value":"/ No-op, just cast the unit.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":375740,"byte_end":375770,"line_start":454,"line_end":454,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":375775,"byte_end":375784,"line_start":455,"line_end":455,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3772},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":376013,"byte_end":376022,"line_start":464,"line_end":464,"column_start":12,"column_end":21},"name":"to_vector","qualname":"<Translation3D<T, Src, Dst>>::to_vector","value":"pub fn to_vector(&Self) -> Vector3D<T, Src>","parent":null,"children":[],"decl_id":null,"docs":" Cast into a 3D vector.\n","sig":null,"attributes":[{"value":"/ Cast into a 3D vector.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":375961,"byte_end":375987,"line_start":462,"line_end":462,"column_start":5,"column_end":31}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":375992,"byte_end":376001,"line_start":463,"line_end":463,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3773},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":376165,"byte_end":376173,"line_start":470,"line_end":470,"column_start":12,"column_end":20},"name":"to_array","qualname":"<Translation3D<T, Src, Dst>>::to_array","value":"pub fn to_array(&Self) -> [T; ]","parent":null,"children":[],"decl_id":null,"docs":" Cast into an array with x, y and z.\n","sig":null,"attributes":[{"value":"/ Cast into an array with x, y and z.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":376100,"byte_end":376139,"line_start":468,"line_end":468,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":376144,"byte_end":376153,"line_start":469,"line_end":469,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3775},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":376301,"byte_end":376309,"line_start":476,"line_end":476,"column_start":12,"column_end":20},"name":"to_tuple","qualname":"<Translation3D<T, Src, Dst>>::to_tuple","value":"pub fn to_tuple(&Self) -> (T, T, T)","parent":null,"children":[],"decl_id":null,"docs":" Cast into a tuple with x, y and z.\n","sig":null,"attributes":[{"value":"/ Cast into a tuple with x, y and z.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":376237,"byte_end":376275,"line_start":474,"line_end":474,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":376280,"byte_end":376289,"line_start":475,"line_end":475,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3776},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":376456,"byte_end":376466,"line_start":482,"line_end":482,"column_start":12,"column_end":22},"name":"to_untyped","qualname":"<Translation3D<T, Src, Dst>>::to_untyped","value":"pub fn to_untyped(&Self) -> Translation3D<T, UnknownUnit, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":" Drop the units, preserving only the numeric value.\n","sig":null,"attributes":[{"value":"/ Drop the units, preserving only the numeric value.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":376376,"byte_end":376430,"line_start":480,"line_end":480,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":376435,"byte_end":376444,"line_start":481,"line_end":481,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3777},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":376730,"byte_end":376742,"line_start":493,"line_end":493,"column_start":12,"column_end":24},"name":"from_untyped","qualname":"<Translation3D<T, Src, Dst>>::from_untyped","value":"pub fn from_untyped(&Translation3D<T, UnknownUnit, UnknownUnit>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Tag a unitless value with units.\n","sig":null,"attributes":[{"value":"/ Tag a unitless value with units.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":376668,"byte_end":376704,"line_start":491,"line_end":491,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":376709,"byte_end":376718,"line_start":492,"line_end":492,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3778},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":377022,"byte_end":377034,"line_start":504,"line_end":504,"column_start":12,"column_end":24},"name":"to_transform","qualname":"<Translation3D<T, Src, Dst>>::to_transform","value":"pub fn to_transform(&Self) -> Transform3D<T, Src, Dst> where T: Zero + One","parent":null,"children":[],"decl_id":null,"docs":" Returns the matrix representation of this translation.\n","sig":null,"attributes":[{"value":"/ Returns the matrix representation of this translation.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":376938,"byte_end":376996,"line_start":502,"line_end":502,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":377001,"byte_end":377010,"line_start":503,"line_end":503,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3779},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":377209,"byte_end":377226,"line_start":513,"line_end":513,"column_start":12,"column_end":29},"name":"transform_point3d","qualname":"<Translation3D<T, Src, Dst>>::transform_point3d","value":"pub fn transform_point3d(&Self, &Point3D<T, Src>) -> Point3D<T::Output, Dst>\nwhere T: Add","parent":null,"children":[],"decl_id":null,"docs":" Translate a point and cast its unit.\n","sig":null,"attributes":[{"value":"/ Translate a point and cast its unit.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":377143,"byte_end":377183,"line_start":511,"line_end":511,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":377188,"byte_end":377197,"line_start":512,"line_end":512,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3780},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":377448,"byte_end":377465,"line_start":522,"line_end":522,"column_start":12,"column_end":29},"name":"transform_point2d","qualname":"<Translation3D<T, Src, Dst>>::transform_point2d","value":"pub fn transform_point2d(&Self, &Point2D<T, Src>) -> Point2D<T::Output, Dst>\nwhere T: Add","parent":null,"children":[],"decl_id":null,"docs":" Translate a point and cast its unit.\n","sig":null,"attributes":[{"value":"/ Translate a point and cast its unit.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":377382,"byte_end":377422,"line_start":520,"line_end":520,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":377427,"byte_end":377436,"line_start":521,"line_end":521,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3781},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":377674,"byte_end":377689,"line_start":531,"line_end":531,"column_start":12,"column_end":27},"name":"transform_box2d","qualname":"<Translation3D<T, Src, Dst>>::transform_box2d","value":"pub fn transform_box2d(&Self, &Box2D<T, Src>) -> Box2D<T::Output, Dst> where\nT: Add","parent":null,"children":[],"decl_id":null,"docs":" Translate a 2D box and cast its unit.\n","sig":null,"attributes":[{"value":"/ Translate a 2D box and cast its unit.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":377607,"byte_end":377648,"line_start":529,"line_end":529,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":377653,"byte_end":377662,"line_start":530,"line_end":530,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3782},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":377975,"byte_end":377990,"line_start":543,"line_end":543,"column_start":12,"column_end":27},"name":"transform_box3d","qualname":"<Translation3D<T, Src, Dst>>::transform_box3d","value":"pub fn transform_box3d(&Self, &Box3D<T, Src>) -> Box3D<T::Output, Dst> where\nT: Add","parent":null,"children":[],"decl_id":null,"docs":" Translate a 3D box and cast its unit.\n","sig":null,"attributes":[{"value":"/ Translate a 3D box and cast its unit.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":377908,"byte_end":377949,"line_start":541,"line_end":541,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":377954,"byte_end":377963,"line_start":542,"line_end":542,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3783},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":378279,"byte_end":378293,"line_start":555,"line_end":555,"column_start":12,"column_end":26},"name":"transform_rect","qualname":"<Translation3D<T, Src, Dst>>::transform_rect","value":"pub fn transform_rect(&Self, &Rect<T, Src>) -> Rect<T, Dst> where\nT: Add<Output = T>","parent":null,"children":[],"decl_id":null,"docs":" Translate a rectangle and cast its unit.\n","sig":null,"attributes":[{"value":"/ Translate a rectangle and cast its unit.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":378209,"byte_end":378253,"line_start":553,"line_end":553,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":378258,"byte_end":378267,"line_start":554,"line_end":554,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3784},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":378581,"byte_end":378588,"line_start":567,"line_end":567,"column_start":12,"column_end":19},"name":"inverse","qualname":"<Translation3D<T, Src, Dst>>::inverse","value":"pub fn inverse(&Self) -> Translation3D<T::Output, Dst, Src> where T: Neg","parent":null,"children":[],"decl_id":null,"docs":" Return the inverse transformation.\n","sig":null,"attributes":[{"value":"/ Return the inverse transformation.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":378517,"byte_end":378555,"line_start":565,"line_end":565,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":378560,"byte_end":378569,"line_start":566,"line_end":566,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":3835},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\trig.rs","byte_start":388635,"byte_end":388639,"line_start":11,"line_end":11,"column_start":11,"column_end":15},"name":"Trig","qualname":"::trig::Trig","value":"Trig","parent":null,"children":[{"krate":0,"index":3836},{"krate":0,"index":3837},{"krate":0,"index":3838},{"krate":0,"index":3839},{"krate":0,"index":3840},{"krate":0,"index":3841}],"decl_id":null,"docs":" Trait for basic trigonometry functions, so they can be used on generic numeric types\n","sig":null,"attributes":[{"value":"/ Trait for basic trigonometry functions, so they can be used on generic numeric types","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\trig.rs","byte_start":388536,"byte_end":388624,"line_start":10,"line_end":10,"column_start":1,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":3836},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\trig.rs","byte_start":388649,"byte_end":388652,"line_start":12,"line_end":12,"column_start":8,"column_end":11},"name":"sin","qualname":"::trig::Trig::sin","value":"pub fn sin(Self) -> Self","parent":{"krate":0,"index":3835},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3837},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\trig.rs","byte_start":388675,"byte_end":388678,"line_start":13,"line_end":13,"column_start":8,"column_end":11},"name":"cos","qualname":"::trig::Trig::cos","value":"pub fn cos(Self) -> Self","parent":{"krate":0,"index":3835},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3838},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\trig.rs","byte_start":388701,"byte_end":388704,"line_start":14,"line_end":14,"column_start":8,"column_end":11},"name":"tan","qualname":"::trig::Trig::tan","value":"pub fn tan(Self) -> Self","parent":{"krate":0,"index":3835},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3839},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\trig.rs","byte_start":388727,"byte_end":388737,"line_start":15,"line_end":15,"column_start":8,"column_end":18},"name":"fast_atan2","qualname":"::trig::Trig::fast_atan2","value":"pub fn fast_atan2(Self, Self) -> Self","parent":{"krate":0,"index":3835},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3840},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\trig.rs","byte_start":388772,"byte_end":388790,"line_start":16,"line_end":16,"column_start":8,"column_end":26},"name":"degrees_to_radians","qualname":"::trig::Trig::degrees_to_radians","value":"pub fn degrees_to_radians(Self) -> Self","parent":{"krate":0,"index":3835},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3841},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\trig.rs","byte_start":388818,"byte_end":388836,"line_start":17,"line_end":17,"column_start":8,"column_end":26},"name":"radians_to_degrees","qualname":"::trig::Trig::radians_to_degrees","value":"pub fn radians_to_degrees(Self) -> Self","parent":{"krate":0,"index":3835},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3959},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":392000,"byte_end":392008,"line_start":36,"line_end":36,"column_start":12,"column_end":20},"name":"Vector2D","qualname":"::vector::Vector2D","value":"Vector2D { x, y, _unit }","parent":null,"children":[{"krate":0,"index":3962},{"krate":0,"index":3963},{"krate":0,"index":3964}],"decl_id":null,"docs":" A 2d Vector tagged with a unit.\n","sig":null,"attributes":[{"value":"/ A 2d Vector tagged with a unit.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":391942,"byte_end":391977,"line_start":34,"line_end":34,"column_start":1,"column_end":36}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":391978,"byte_end":391988,"line_start":35,"line_end":35,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":3962},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":392081,"byte_end":392082,"line_start":38,"line_end":38,"column_start":9,"column_end":10},"name":"x","qualname":"::vector::Vector2D::x","value":"T","parent":{"krate":0,"index":3959},"children":[],"decl_id":null,"docs":" The `x` (traditionally, horizontal) coordinate.\n","sig":null,"attributes":[{"value":"/ The `x` (traditionally, horizontal) coordinate.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":392021,"byte_end":392072,"line_start":37,"line_end":37,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":3963},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":392149,"byte_end":392150,"line_start":40,"line_end":40,"column_start":9,"column_end":10},"name":"y","qualname":"::vector::Vector2D::y","value":"T","parent":{"krate":0,"index":3959},"children":[],"decl_id":null,"docs":" The `y` (traditionally, vertical) coordinate.\n","sig":null,"attributes":[{"value":"/ The `y` (traditionally, vertical) coordinate.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":392091,"byte_end":392140,"line_start":39,"line_end":39,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":3964},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":392182,"byte_end":392187,"line_start":42,"line_end":42,"column_start":9,"column_end":14},"name":"_unit","qualname":"::vector::Vector2D::_unit","value":"core::marker::PhantomData<U>","parent":{"krate":0,"index":3959},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3999},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":394552,"byte_end":394556,"line_start":144,"line_end":144,"column_start":12,"column_end":16},"name":"zero","qualname":"<Vector2D<T, U>>::zero","value":"pub fn zero() -> Self where T: Zero","parent":null,"children":[],"decl_id":null,"docs":" Constructor, setting all components to zero.\n","sig":null,"attributes":[{"value":"/ Constructor, setting all components to zero.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":394478,"byte_end":394526,"line_start":142,"line_end":142,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":394531,"byte_end":394540,"line_start":143,"line_end":143,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4000},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":394734,"byte_end":394737,"line_start":153,"line_end":153,"column_start":12,"column_end":15},"name":"one","qualname":"<Vector2D<T, U>>::one","value":"pub fn one() -> Self where T: One","parent":null,"children":[],"decl_id":null,"docs":" Constructor, setting all components to one.\n","sig":null,"attributes":[{"value":"/ Constructor, setting all components to one.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":394661,"byte_end":394708,"line_start":151,"line_end":151,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":394713,"byte_end":394722,"line_start":152,"line_end":152,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4001},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":394915,"byte_end":394918,"line_start":162,"line_end":162,"column_start":18,"column_end":21},"name":"new","qualname":"<Vector2D<T, U>>::new","value":"pub const fn new(T, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructor taking scalar values directly.\n","sig":null,"attributes":[{"value":"/ Constructor taking scalar values directly.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":394837,"byte_end":394883,"line_start":160,"line_end":160,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":394888,"byte_end":394897,"line_start":161,"line_end":161,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4002},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":395126,"byte_end":395131,"line_start":172,"line_end":172,"column_start":12,"column_end":17},"name":"splat","qualname":"<Vector2D<T, U>>::splat","value":"pub fn splat(T) -> Self where T: Clone","parent":null,"children":[],"decl_id":null,"docs":" Constructor setting all components to the same value.\n","sig":null,"attributes":[{"value":"/ Constructor setting all components to the same value.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":395043,"byte_end":395100,"line_start":170,"line_end":170,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":395105,"byte_end":395114,"line_start":171,"line_end":171,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4003},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":395347,"byte_end":395368,"line_start":184,"line_end":184,"column_start":12,"column_end":33},"name":"from_angle_and_length","qualname":"<Vector2D<T, U>>::from_angle_and_length","value":"pub fn from_angle_and_length(Angle<T>, T) -> Self where T: Trig + Mul<Output =\nT> + Copy","parent":null,"children":[],"decl_id":null,"docs":" Constructor taking angle and length\n","sig":null,"attributes":[{"value":"/ Constructor taking angle and length","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":395296,"byte_end":395335,"line_start":183,"line_end":183,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":4004},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":395639,"byte_end":395651,"line_start":193,"line_end":193,"column_start":12,"column_end":24},"name":"from_lengths","qualname":"<Vector2D<T, U>>::from_lengths","value":"pub fn from_lengths(Length<T, U>, Length<T, U>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructor taking properly  Lengths instead of scalar values.\n","sig":null,"attributes":[{"value":"/ Constructor taking properly  Lengths instead of scalar values.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":395547,"byte_end":395613,"line_start":191,"line_end":191,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":395618,"byte_end":395627,"line_start":192,"line_end":192,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4005},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":395793,"byte_end":395805,"line_start":199,"line_end":199,"column_start":12,"column_end":24},"name":"from_untyped","qualname":"<Vector2D<T, U>>::from_untyped","value":"pub fn from_untyped(Vector2D<T, UnknownUnit>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Tag a unit-less value with units.\n","sig":null,"attributes":[{"value":"/ Tag a unit-less value with units.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":395730,"byte_end":395767,"line_start":197,"line_end":197,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":395772,"byte_end":395781,"line_start":198,"line_end":198,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4006},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":396449,"byte_end":396452,"line_start":223,"line_end":223,"column_start":12,"column_end":15},"name":"abs","qualname":"<Vector2D<T, U>>::abs","value":"pub fn abs(Self) -> Self where T: Signed","parent":null,"children":[],"decl_id":null,"docs":" Computes the vector with absolute values of each component.","sig":null,"attributes":[{"value":"/ Computes the vector with absolute values of each component.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":395879,"byte_end":395942,"line_start":203,"line_end":203,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":395947,"byte_end":395950,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":395955,"byte_end":395968,"line_start":205,"line_end":205,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":395973,"byte_end":395976,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":395981,"byte_end":395992,"line_start":207,"line_end":207,"column_start":5,"column_end":16}},{"value":"/ # use std::{i32, f32};","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":395997,"byte_end":396023,"line_start":208,"line_end":208,"column_start":5,"column_end":31}},{"value":"/ # use euclid::vec2;","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":396028,"byte_end":396051,"line_start":209,"line_end":209,"column_start":5,"column_end":28}},{"value":"/ enum U {}","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":396056,"byte_end":396069,"line_start":210,"line_end":210,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":396074,"byte_end":396077,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec2::<_, U>(-1, 2).abs(), vec2(1, 2));","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":396082,"byte_end":396136,"line_start":212,"line_end":212,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":396141,"byte_end":396144,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ let vec = vec2::<_, U>(f32::NAN, -f32::MAX).abs();","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":396149,"byte_end":396203,"line_start":214,"line_end":214,"column_start":5,"column_end":59}},{"value":"/ assert!(vec.x.is_nan());","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":396208,"byte_end":396236,"line_start":215,"line_end":215,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(vec.y, f32::MAX);","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":396241,"byte_end":396273,"line_start":216,"line_end":216,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":396278,"byte_end":396285,"line_start":217,"line_end":217,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":396290,"byte_end":396293,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":396298,"byte_end":396310,"line_start":219,"line_end":219,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":396315,"byte_end":396318,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ The behavior for each component follows the scalar type's implementation of","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":396323,"byte_end":396402,"line_start":221,"line_end":221,"column_start":5,"column_end":84}},{"value":"/ `num_traits::Signed::abs`.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":396407,"byte_end":396437,"line_start":222,"line_end":222,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":4007},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":396596,"byte_end":396599,"line_start":232,"line_end":232,"column_start":12,"column_end":15},"name":"dot","qualname":"<Vector2D<T, U>>::dot","value":"pub fn dot(Self, Self) -> T where T: Add<Output = T> + Mul<Output = T>","parent":null,"children":[],"decl_id":null,"docs":" Dot product.\n","sig":null,"attributes":[{"value":"/ Dot product.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":396554,"byte_end":396570,"line_start":230,"line_end":230,"column_start":5,"column_end":21}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":396575,"byte_end":396584,"line_start":231,"line_end":231,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4008},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":396853,"byte_end":396858,"line_start":241,"line_end":241,"column_start":12,"column_end":17},"name":"cross","qualname":"<Vector2D<T, U>>::cross","value":"pub fn cross(Self, Self) -> T where T: Sub<Output = T> + Mul<Output = T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the norm of the cross product [self.x, self.y, 0] x [other.x, other.y, 0].\n","sig":null,"attributes":[{"value":"/ Returns the norm of the cross product [self.x, self.y, 0] x [other.x, other.y, 0].","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":396741,"byte_end":396827,"line_start":239,"line_end":239,"column_start":5,"column_end":91}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":396832,"byte_end":396841,"line_start":240,"line_end":240,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4009},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":397091,"byte_end":397104,"line_start":250,"line_end":250,"column_start":12,"column_end":25},"name":"component_mul","qualname":"<Vector2D<T, U>>::component_mul","value":"pub fn component_mul(Self, Self) -> Self where T: Mul<Output = T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the component-wise multiplication of the two vectors.\n","sig":null,"attributes":[{"value":"/ Returns the component-wise multiplication of the two vectors.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":397000,"byte_end":397065,"line_start":248,"line_end":248,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":397070,"byte_end":397079,"line_start":249,"line_end":249,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4010},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":397321,"byte_end":397334,"line_start":259,"line_end":259,"column_start":12,"column_end":25},"name":"component_div","qualname":"<Vector2D<T, U>>::component_div","value":"pub fn component_div(Self, Self) -> Self where T: Div<Output = T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the component-wise division of the two vectors.\n","sig":null,"attributes":[{"value":"/ Returns the component-wise division of the two vectors.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":397236,"byte_end":397295,"line_start":257,"line_end":257,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":397300,"byte_end":397309,"line_start":258,"line_end":258,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4014},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":397594,"byte_end":397600,"line_start":270,"line_end":270,"column_start":12,"column_end":18},"name":"extend","qualname":"<Vector2D<T, U>>::extend","value":"pub fn extend(Self, T) -> Vector3D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Create a 3d vector from this one, using the specified z value.\n","sig":null,"attributes":[{"value":"/ Create a 3d vector from this one, using the specified z value.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":397502,"byte_end":397568,"line_start":268,"line_end":268,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":397573,"byte_end":397582,"line_start":269,"line_end":269,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4015},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":397800,"byte_end":397808,"line_start":278,"line_end":278,"column_start":12,"column_end":20},"name":"to_point","qualname":"<Vector2D<T, U>>::to_point","value":"pub fn to_point(Self) -> Point2D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast this vector into a point.","sig":null,"attributes":[{"value":"/ Cast this vector into a point.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":397676,"byte_end":397710,"line_start":274,"line_end":274,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":397715,"byte_end":397718,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ Equivalent to adding this vector to the origin.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":397723,"byte_end":397774,"line_start":276,"line_end":276,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":397779,"byte_end":397788,"line_start":277,"line_end":277,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4016},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":397994,"byte_end":397996,"line_start":288,"line_end":288,"column_start":12,"column_end":14},"name":"yx","qualname":"<Vector2D<T, U>>::yx","value":"pub fn yx(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Swap x and y.\n","sig":null,"attributes":[{"value":"/ Swap x and y.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":397951,"byte_end":397968,"line_start":286,"line_end":286,"column_start":5,"column_end":22}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":397973,"byte_end":397982,"line_start":287,"line_end":287,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4017},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":398112,"byte_end":398119,"line_start":294,"line_end":294,"column_start":12,"column_end":19},"name":"to_size","qualname":"<Vector2D<T, U>>::to_size","value":"pub fn to_size(Self) -> Size2D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast this vector into a size.\n","sig":null,"attributes":[{"value":"/ Cast this vector into a size.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":398053,"byte_end":398086,"line_start":292,"line_end":292,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":398091,"byte_end":398100,"line_start":293,"line_end":293,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4018},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":398265,"byte_end":398275,"line_start":300,"line_end":300,"column_start":12,"column_end":22},"name":"to_untyped","qualname":"<Vector2D<T, U>>::to_untyped","value":"pub fn to_untyped(Self) -> Vector2D<T, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":" Drop the units, preserving only the numeric value.\n","sig":null,"attributes":[{"value":"/ Drop the units, preserving only the numeric value.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":398185,"byte_end":398239,"line_start":298,"line_end":298,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":398244,"byte_end":398253,"line_start":299,"line_end":299,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4019},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":398396,"byte_end":398405,"line_start":306,"line_end":306,"column_start":12,"column_end":21},"name":"cast_unit","qualname":"<Vector2D<T, U>>::cast_unit","value":"pub fn cast_unit<V>(Self) -> Vector2D<T, V>","parent":null,"children":[],"decl_id":null,"docs":" Cast the unit.\n","sig":null,"attributes":[{"value":"/ Cast the unit.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":398352,"byte_end":398370,"line_start":304,"line_end":304,"column_start":5,"column_end":23}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":398375,"byte_end":398384,"line_start":305,"line_end":305,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4021},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":398537,"byte_end":398545,"line_start":312,"line_end":312,"column_start":12,"column_end":20},"name":"to_array","qualname":"<Vector2D<T, U>>::to_array","value":"pub fn to_array(Self) -> [T; ]","parent":null,"children":[],"decl_id":null,"docs":" Cast into an array with x and y.\n","sig":null,"attributes":[{"value":"/ Cast into an array with x and y.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":398475,"byte_end":398511,"line_start":310,"line_end":310,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":398516,"byte_end":398525,"line_start":311,"line_end":311,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4023},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":398661,"byte_end":398669,"line_start":318,"line_end":318,"column_start":12,"column_end":20},"name":"to_tuple","qualname":"<Vector2D<T, U>>::to_tuple","value":"pub fn to_tuple(Self) -> (T, T)","parent":null,"children":[],"decl_id":null,"docs":" Cast into a tuple with x and y.\n","sig":null,"attributes":[{"value":"/ Cast into a tuple with x and y.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":398600,"byte_end":398635,"line_start":316,"line_end":316,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":398640,"byte_end":398649,"line_start":317,"line_end":317,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4024},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":398821,"byte_end":398826,"line_start":324,"line_end":324,"column_start":12,"column_end":17},"name":"to_3d","qualname":"<Vector2D<T, U>>::to_3d","value":"pub fn to_3d(Self) -> Vector3D<T, U> where T: Zero","parent":null,"children":[],"decl_id":null,"docs":" Convert into a 3d vector with `z` coordinate equals to `T::zero()`.\n","sig":null,"attributes":[{"value":"/ Convert into a 3d vector with `z` coordinate equals to `T::zero()`.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":398724,"byte_end":398795,"line_start":322,"line_end":322,"column_start":5,"column_end":76}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":398800,"byte_end":398809,"line_start":323,"line_end":323,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4025},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":399294,"byte_end":399299,"line_start":343,"line_end":343,"column_start":12,"column_end":17},"name":"round","qualname":"<Vector2D<T, U>>::round","value":"pub fn round(Self) -> Self where T: Round","parent":null,"children":[],"decl_id":null,"docs":" Rounds each component to the nearest integer value.","sig":null,"attributes":[{"value":"/ Rounds each component to the nearest integer value.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":398938,"byte_end":398993,"line_start":331,"line_end":331,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":398998,"byte_end":399001,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ This behavior is preserved for negative values (unlike the basic cast).","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":399006,"byte_end":399081,"line_start":333,"line_end":333,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":399086,"byte_end":399089,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":399094,"byte_end":399105,"line_start":335,"line_end":335,"column_start":5,"column_end":16}},{"value":"/ # use euclid::vec2;","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":399110,"byte_end":399133,"line_start":336,"line_end":336,"column_start":5,"column_end":28}},{"value":"/ enum Mm {}","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":399138,"byte_end":399152,"line_start":337,"line_end":337,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":399157,"byte_end":399160,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec2::<_, Mm>(-0.1, -0.8).round(), vec2::<_, Mm>(0.0, -1.0))","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":399165,"byte_end":399240,"line_start":339,"line_end":339,"column_start":5,"column_end":80}},{"value":"/ ```","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":399245,"byte_end":399252,"line_start":340,"line_end":340,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":399257,"byte_end":399266,"line_start":341,"line_end":341,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":399271,"byte_end":399282,"line_start":342,"line_end":342,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4026},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":399794,"byte_end":399798,"line_start":362,"line_end":362,"column_start":12,"column_end":16},"name":"ceil","qualname":"<Vector2D<T, U>>::ceil","value":"pub fn ceil(Self) -> Self where T: Ceil","parent":null,"children":[],"decl_id":null,"docs":" Rounds each component to the smallest integer equal or greater than the original value.","sig":null,"attributes":[{"value":"/ Rounds each component to the smallest integer equal or greater than the original value.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":399404,"byte_end":399495,"line_start":350,"line_end":350,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":399500,"byte_end":399503,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ This behavior is preserved for negative values (unlike the basic cast).","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":399508,"byte_end":399583,"line_start":352,"line_end":352,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":399588,"byte_end":399591,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":399596,"byte_end":399607,"line_start":354,"line_end":354,"column_start":5,"column_end":16}},{"value":"/ # use euclid::vec2;","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":399612,"byte_end":399635,"line_start":355,"line_end":355,"column_start":5,"column_end":28}},{"value":"/ enum Mm {}","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":399640,"byte_end":399654,"line_start":356,"line_end":356,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":399659,"byte_end":399662,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec2::<_, Mm>(-0.1, -0.8).ceil(), vec2::<_, Mm>(0.0, 0.0))","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":399667,"byte_end":399740,"line_start":358,"line_end":358,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":399745,"byte_end":399752,"line_start":359,"line_end":359,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":399757,"byte_end":399766,"line_start":360,"line_end":360,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":399771,"byte_end":399782,"line_start":361,"line_end":361,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4027},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":400290,"byte_end":400295,"line_start":381,"line_end":381,"column_start":12,"column_end":17},"name":"floor","qualname":"<Vector2D<T, U>>::floor","value":"pub fn floor(Self) -> Self where T: Floor","parent":null,"children":[],"decl_id":null,"docs":" Rounds each component to the biggest integer equal or lower than the original value.","sig":null,"attributes":[{"value":"/ Rounds each component to the biggest integer equal or lower than the original value.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":399900,"byte_end":399988,"line_start":369,"line_end":369,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":399993,"byte_end":399996,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ This behavior is preserved for negative values (unlike the basic cast).","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":400001,"byte_end":400076,"line_start":371,"line_end":371,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":400081,"byte_end":400084,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":400089,"byte_end":400100,"line_start":373,"line_end":373,"column_start":5,"column_end":16}},{"value":"/ # use euclid::vec2;","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":400105,"byte_end":400128,"line_start":374,"line_end":374,"column_start":5,"column_end":28}},{"value":"/ enum Mm {}","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":400133,"byte_end":400147,"line_start":375,"line_end":375,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":400152,"byte_end":400155,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec2::<_, Mm>(-0.1, -0.8).floor(), vec2::<_, Mm>(-1.0, -1.0))","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":400160,"byte_end":400236,"line_start":377,"line_end":377,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":400241,"byte_end":400248,"line_start":378,"line_end":378,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":400253,"byte_end":400262,"line_start":379,"line_end":379,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":400267,"byte_end":400278,"line_start":380,"line_end":380,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4028},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":400635,"byte_end":400652,"line_start":393,"line_end":393,"column_start":12,"column_end":29},"name":"angle_from_x_axis","qualname":"<Vector2D<T, U>>::angle_from_x_axis","value":"pub fn angle_from_x_axis(Self) -> Angle<T> where T: Trig","parent":null,"children":[],"decl_id":null,"docs":" Returns the signed angle between this vector and the x axis.\n Positive values counted counterclockwise, where 0 is `+x` axis, `PI/2`\n is `+y` axis.","sig":null,"attributes":[{"value":"/ Returns the signed angle between this vector and the x axis.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":400400,"byte_end":400464,"line_start":388,"line_end":388,"column_start":5,"column_end":69}},{"value":"/ Positive values counted counterclockwise, where 0 is `+x` axis, `PI/2`","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":400469,"byte_end":400543,"line_start":389,"line_end":389,"column_start":5,"column_end":79}},{"value":"/ is `+y` axis.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":400548,"byte_end":400565,"line_start":390,"line_end":390,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":400570,"byte_end":400573,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ The returned angle is between -PI and PI.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":400578,"byte_end":400623,"line_start":392,"line_end":392,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":4029},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":400853,"byte_end":400865,"line_start":402,"line_end":402,"column_start":12,"column_end":24},"name":"to_transform","qualname":"<Vector2D<T, U>>::to_transform","value":"pub fn to_transform(Self) -> Transform2D<T, U, U> where T: Zero + One","parent":null,"children":[],"decl_id":null,"docs":" Creates translation by this vector in vector units.\n","sig":null,"attributes":[{"value":"/ Creates translation by this vector in vector units.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":400772,"byte_end":400827,"line_start":400,"line_end":400,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":400832,"byte_end":400841,"line_start":401,"line_end":401,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4033},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":401152,"byte_end":401165,"line_start":416,"line_end":416,"column_start":12,"column_end":25},"name":"square_length","qualname":"<Vector2D<T, U>>::square_length","value":"pub fn square_length(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the vector's length squared.\n","sig":null,"attributes":[{"value":"/ Returns the vector's length squared.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":401086,"byte_end":401126,"line_start":414,"line_end":414,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":401131,"byte_end":401140,"line_start":415,"line_end":415,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4034},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":401385,"byte_end":401404,"line_start":424,"line_end":424,"column_start":12,"column_end":31},"name":"project_onto_vector","qualname":"<Vector2D<T, U>>::project_onto_vector","value":"pub fn project_onto_vector(Self, Self) -> Self where T: Sub<T, Output = T> +\nDiv<T, Output = T>","parent":null,"children":[],"decl_id":null,"docs":" Returns this vector projected onto another one.","sig":null,"attributes":[{"value":"/ Returns this vector projected onto another one.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":401232,"byte_end":401283,"line_start":420,"line_end":420,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":401288,"byte_end":401291,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ Projecting onto a nil vector will cause a division by zero.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":401296,"byte_end":401359,"line_start":422,"line_end":422,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":401364,"byte_end":401373,"line_start":423,"line_end":423,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4035},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":401703,"byte_end":401711,"line_start":434,"line_end":434,"column_start":12,"column_end":20},"name":"angle_to","qualname":"<Vector2D<T, U>>::angle_to","value":"pub fn angle_to(Self, Self) -> Angle<T> where T: Sub<Output = T> + Trig","parent":null,"children":[],"decl_id":null,"docs":" Returns the signed angle between this vector and another vector.","sig":null,"attributes":[{"value":"/ Returns the signed angle between this vector and another vector.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":401565,"byte_end":401633,"line_start":431,"line_end":431,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":401638,"byte_end":401641,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ The returned angle is between -PI and PI.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":401646,"byte_end":401691,"line_start":433,"line_end":433,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":4039},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":401975,"byte_end":401981,"line_start":445,"line_end":445,"column_start":12,"column_end":18},"name":"length","qualname":"<Vector2D<T, U>>::length","value":"pub fn length(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the vector length.\n","sig":null,"attributes":[{"value":"/ Returns the vector length.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":401919,"byte_end":401949,"line_start":443,"line_end":443,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":401954,"byte_end":401963,"line_start":444,"line_end":444,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4040},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":402131,"byte_end":402140,"line_start":452,"line_end":452,"column_start":12,"column_end":21},"name":"normalize","qualname":"<Vector2D<T, U>>::normalize","value":"pub fn normalize(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the vector with length of one unit.\n","sig":null,"attributes":[{"value":"/ Returns the vector with length of one unit.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":402042,"byte_end":402089,"line_start":449,"line_end":449,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":402094,"byte_end":402103,"line_start":450,"line_end":450,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":402108,"byte_end":402119,"line_start":451,"line_end":451,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4041},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":402430,"byte_end":402443,"line_start":462,"line_end":462,"column_start":12,"column_end":25},"name":"try_normalize","qualname":"<Vector2D<T, U>>::try_normalize","value":"pub fn try_normalize(Self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Returns the vector with length of one unit.","sig":null,"attributes":[{"value":"/ Returns the vector with length of one unit.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":402197,"byte_end":402244,"line_start":456,"line_end":456,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":402249,"byte_end":402252,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ Unlike [`Vector2D::normalize`](#method.normalize), this returns None in the case that the","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":402257,"byte_end":402350,"line_start":458,"line_end":458,"column_start":5,"column_end":98}},{"value":"/ length of the vector is zero.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":402355,"byte_end":402388,"line_start":459,"line_end":459,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":402393,"byte_end":402402,"line_start":460,"line_end":460,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":402407,"byte_end":402418,"line_start":461,"line_end":461,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4042},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":402747,"byte_end":402763,"line_start":474,"line_end":474,"column_start":12,"column_end":28},"name":"robust_normalize","qualname":"<Vector2D<T, U>>::robust_normalize","value":"pub fn robust_normalize(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return the normalized vector even if the length is larger than the max value of Float.\n","sig":null,"attributes":[{"value":"/ Return the normalized vector even if the length is larger than the max value of Float.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":402615,"byte_end":402705,"line_start":471,"line_end":471,"column_start":5,"column_end":95}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":402710,"byte_end":402719,"line_start":472,"line_end":472,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":402724,"byte_end":402735,"line_start":473,"line_end":473,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4043},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":403075,"byte_end":403090,"line_start":486,"line_end":486,"column_start":12,"column_end":27},"name":"with_max_length","qualname":"<Vector2D<T, U>>::with_max_length","value":"pub fn with_max_length(Self, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return this vector capped to a maximum length.\n","sig":null,"attributes":[{"value":"/ Return this vector capped to a maximum length.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":402999,"byte_end":403049,"line_start":484,"line_end":484,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":403054,"byte_end":403063,"line_start":485,"line_end":485,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4044},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":403402,"byte_end":403417,"line_start":497,"line_end":497,"column_start":12,"column_end":27},"name":"with_min_length","qualname":"<Vector2D<T, U>>::with_min_length","value":"pub fn with_min_length(Self, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return this vector with a minimum length applied.\n","sig":null,"attributes":[{"value":"/ Return this vector with a minimum length applied.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":403323,"byte_end":403376,"line_start":495,"line_end":495,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":403381,"byte_end":403390,"line_start":496,"line_end":496,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4045},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":403740,"byte_end":403752,"line_start":508,"line_end":508,"column_start":12,"column_end":24},"name":"clamp_length","qualname":"<Vector2D<T, U>>::clamp_length","value":"pub fn clamp_length(Self, T, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return this vector with minimum and maximum lengths applied.\n","sig":null,"attributes":[{"value":"/ Return this vector with minimum and maximum lengths applied.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":403650,"byte_end":403714,"line_start":506,"line_end":506,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":403719,"byte_end":403728,"line_start":507,"line_end":507,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4046},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":403955,"byte_end":403964,"line_start":515,"line_end":515,"column_start":12,"column_end":21},"name":"is_finite","qualname":"<Vector2D<T, U>>::is_finite","value":"pub fn is_finite(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if all members are finite.\n","sig":null,"attributes":[{"value":"/ Returns true if all members are finite.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":403886,"byte_end":403929,"line_start":513,"line_end":513,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":403934,"byte_end":403943,"line_start":514,"line_end":514,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4050},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":404795,"byte_end":404799,"line_start":542,"line_end":542,"column_start":12,"column_end":16},"name":"lerp","qualname":"<Vector2D<T, U>>::lerp","value":"pub fn lerp(Self, Self, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Linearly interpolate each component between this vector and another vector.","sig":null,"attributes":[{"value":"/ Linearly interpolate each component between this vector and another vector.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":404150,"byte_end":404229,"line_start":524,"line_end":524,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":404234,"byte_end":404237,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":404242,"byte_end":404255,"line_start":526,"line_end":526,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":404260,"byte_end":404263,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":404268,"byte_end":404279,"line_start":528,"line_end":528,"column_start":5,"column_end":16}},{"value":"/ use euclid::vec2;","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":404284,"byte_end":404305,"line_start":529,"line_end":529,"column_start":5,"column_end":26}},{"value":"/ use euclid::default::Vector2D;","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":404310,"byte_end":404344,"line_start":530,"line_end":530,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":404349,"byte_end":404352,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ let from: Vector2D<_> = vec2(0.0, 10.0);","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":404357,"byte_end":404401,"line_start":532,"line_end":532,"column_start":5,"column_end":49}},{"value":"/ let to:  Vector2D<_> = vec2(8.0, -4.0);","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":404406,"byte_end":404449,"line_start":533,"line_end":533,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":404454,"byte_end":404457,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(from.lerp(to, -1.0), vec2(-8.0,  24.0));","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":404462,"byte_end":404517,"line_start":535,"line_end":535,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(from.lerp(to,  0.0), vec2( 0.0,  10.0));","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":404522,"byte_end":404577,"line_start":536,"line_end":536,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(from.lerp(to,  0.5), vec2( 4.0,   3.0));","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":404582,"byte_end":404637,"line_start":537,"line_end":537,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(from.lerp(to,  1.0), vec2( 8.0,  -4.0));","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":404642,"byte_end":404697,"line_start":538,"line_end":538,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(from.lerp(to,  2.0), vec2(16.0, -18.0));","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":404702,"byte_end":404757,"line_start":539,"line_end":539,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":404762,"byte_end":404769,"line_start":540,"line_end":540,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":404774,"byte_end":404783,"line_start":541,"line_end":541,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4051},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":405014,"byte_end":405021,"line_start":549,"line_end":549,"column_start":12,"column_end":19},"name":"reflect","qualname":"<Vector2D<T, U>>::reflect","value":"pub fn reflect(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a reflection vector using an incident ray and a surface normal.\n","sig":null,"attributes":[{"value":"/ Returns a reflection vector using an incident ray and a surface normal.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":404913,"byte_end":404988,"line_start":547,"line_end":547,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":404993,"byte_end":405002,"line_start":548,"line_end":548,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4055},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":405303,"byte_end":405306,"line_start":558,"line_end":558,"column_start":12,"column_end":15},"name":"min","qualname":"<Vector2D<T, U>>::min","value":"pub fn min(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the vector each component of which are minimum of this vector and another.\n","sig":null,"attributes":[{"value":"/ Returns the vector each component of which are minimum of this vector and another.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":405191,"byte_end":405277,"line_start":556,"line_end":556,"column_start":5,"column_end":91}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":405282,"byte_end":405291,"line_start":557,"line_end":557,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4056},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":405516,"byte_end":405519,"line_start":564,"line_end":564,"column_start":12,"column_end":15},"name":"max","qualname":"<Vector2D<T, U>>::max","value":"pub fn max(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the vector each component of which are maximum of this vector and another.\n","sig":null,"attributes":[{"value":"/ Returns the vector each component of which are maximum of this vector and another.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":405404,"byte_end":405490,"line_start":562,"line_end":562,"column_start":5,"column_end":91}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":405495,"byte_end":405504,"line_start":563,"line_end":563,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4057},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":405815,"byte_end":405820,"line_start":573,"line_end":573,"column_start":12,"column_end":17},"name":"clamp","qualname":"<Vector2D<T, U>>::clamp","value":"pub fn clamp(Self, Self, Self) -> Self where T: Copy","parent":null,"children":[],"decl_id":null,"docs":" Returns the vector each component of which is clamped by corresponding\n components of `start` and `end`.","sig":null,"attributes":[{"value":"/ Returns the vector each component of which is clamped by corresponding","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":405617,"byte_end":405691,"line_start":568,"line_end":568,"column_start":5,"column_end":79}},{"value":"/ components of `start` and `end`.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":405696,"byte_end":405732,"line_start":569,"line_end":569,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":405737,"byte_end":405740,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ Shortcut for `self.max(start).min(end)`.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":405745,"byte_end":405789,"line_start":571,"line_end":571,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":405794,"byte_end":405803,"line_start":572,"line_end":572,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4058},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":406040,"byte_end":406052,"line_start":582,"line_end":582,"column_start":12,"column_end":24},"name":"greater_than","qualname":"<Vector2D<T, U>>::greater_than","value":"pub fn greater_than(Self, Self) -> BoolVector2D","parent":null,"children":[],"decl_id":null,"docs":" Returns vector with results of \"greater than\" operation on each component.\n","sig":null,"attributes":[{"value":"/ Returns vector with results of \"greater than\" operation on each component.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":405936,"byte_end":406014,"line_start":580,"line_end":580,"column_start":5,"column_end":83}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":406019,"byte_end":406028,"line_start":581,"line_end":581,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4059},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":406302,"byte_end":406312,"line_start":591,"line_end":591,"column_start":12,"column_end":22},"name":"lower_than","qualname":"<Vector2D<T, U>>::lower_than","value":"pub fn lower_than(Self, Self) -> BoolVector2D","parent":null,"children":[],"decl_id":null,"docs":" Returns vector with results of \"lower than\" operation on each component.\n","sig":null,"attributes":[{"value":"/ Returns vector with results of \"lower than\" operation on each component.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":406200,"byte_end":406276,"line_start":589,"line_end":589,"column_start":5,"column_end":81}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":406281,"byte_end":406290,"line_start":590,"line_end":590,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4063},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":406598,"byte_end":406603,"line_start":602,"line_end":602,"column_start":12,"column_end":17},"name":"equal","qualname":"<Vector2D<T, U>>::equal","value":"pub fn equal(Self, Self) -> BoolVector2D","parent":null,"children":[],"decl_id":null,"docs":" Returns vector with results of \"equal\" operation on each component.\n","sig":null,"attributes":[{"value":"/ Returns vector with results of \"equal\" operation on each component.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":406501,"byte_end":406572,"line_start":600,"line_end":600,"column_start":5,"column_end":76}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":406577,"byte_end":406586,"line_start":601,"line_end":601,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4064},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":406854,"byte_end":406863,"line_start":611,"line_end":611,"column_start":12,"column_end":21},"name":"not_equal","qualname":"<Vector2D<T, U>>::not_equal","value":"pub fn not_equal(Self, Self) -> BoolVector2D","parent":null,"children":[],"decl_id":null,"docs":" Returns vector with results of \"not equal\" operation on each component.\n","sig":null,"attributes":[{"value":"/ Returns vector with results of \"not equal\" operation on each component.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":406753,"byte_end":406828,"line_start":609,"line_end":609,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":406833,"byte_end":406842,"line_start":610,"line_end":610,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4068},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":407440,"byte_end":407444,"line_start":626,"line_end":626,"column_start":12,"column_end":16},"name":"cast","qualname":"<Vector2D<T, U>>::cast","value":"pub fn cast<NewT: NumCast>(Self) -> Vector2D<NewT, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast from one numeric representation to another, preserving the units.","sig":null,"attributes":[{"value":"/ Cast from one numeric representation to another, preserving the units.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":407059,"byte_end":407133,"line_start":620,"line_end":620,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":407138,"byte_end":407141,"line_start":621,"line_end":621,"column_start":5,"column_end":8}},{"value":"/ When casting from floating vector to integer coordinates, the decimals are truncated","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":407146,"byte_end":407234,"line_start":622,"line_end":622,"column_start":5,"column_end":93}},{"value":"/ as one would expect from a simple cast, but this behavior does not always make sense","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":407239,"byte_end":407327,"line_start":623,"line_end":623,"column_start":5,"column_end":93}},{"value":"/ geometrically. Consider using `round()`, `ceil()` or `floor()` before casting.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":407332,"byte_end":407414,"line_start":624,"line_end":624,"column_start":5,"column_end":87}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":407419,"byte_end":407428,"line_start":625,"line_end":625,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4070},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":407909,"byte_end":407917,"line_start":635,"line_end":635,"column_start":12,"column_end":20},"name":"try_cast","qualname":"<Vector2D<T, U>>::try_cast","value":"pub fn try_cast<NewT: NumCast>(Self) -> Option<Vector2D<NewT, U>>","parent":null,"children":[],"decl_id":null,"docs":" Fallible cast from one numeric representation to another, preserving the units.","sig":null,"attributes":[{"value":"/ Fallible cast from one numeric representation to another, preserving the units.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":407533,"byte_end":407616,"line_start":630,"line_end":630,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":407621,"byte_end":407624,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ When casting from floating vector to integer coordinates, the decimals are truncated","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":407629,"byte_end":407717,"line_start":632,"line_end":632,"column_start":5,"column_end":93}},{"value":"/ as one would expect from a simple cast, but this behavior does not always make sense","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":407722,"byte_end":407810,"line_start":633,"line_end":633,"column_start":5,"column_end":93}},{"value":"/ geometrically. Consider using `round()`, `ceil()` or `floor()` before casting.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":407815,"byte_end":407897,"line_start":634,"line_end":634,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":4072},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":408242,"byte_end":408248,"line_start":646,"line_end":646,"column_start":12,"column_end":18},"name":"to_f32","qualname":"<Vector2D<T, U>>::to_f32","value":"pub fn to_f32(Self) -> Vector2D<f32, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `f32` vector.\n","sig":null,"attributes":[{"value":"/ Cast into an `f32` vector.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":408186,"byte_end":408216,"line_start":644,"line_end":644,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":408221,"byte_end":408230,"line_start":645,"line_end":645,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4073},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":408364,"byte_end":408370,"line_start":652,"line_end":652,"column_start":12,"column_end":18},"name":"to_f64","qualname":"<Vector2D<T, U>>::to_f64","value":"pub fn to_f64(Self) -> Vector2D<f64, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `f64` vector.\n","sig":null,"attributes":[{"value":"/ Cast into an `f64` vector.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":408308,"byte_end":408338,"line_start":650,"line_end":650,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":408343,"byte_end":408352,"line_start":651,"line_end":651,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4074},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":408727,"byte_end":408735,"line_start":662,"line_end":662,"column_start":12,"column_end":20},"name":"to_usize","qualname":"<Vector2D<T, U>>::to_usize","value":"pub fn to_usize(Self) -> Vector2D<usize, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `usize` vector, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `usize` vector, truncating decimals if any.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":408430,"byte_end":408490,"line_start":656,"line_end":656,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":408495,"byte_end":408498,"line_start":657,"line_end":657,"column_start":5,"column_end":8}},{"value":"/ When casting from floating vector vectors, it is worth considering whether","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":408503,"byte_end":408581,"line_start":658,"line_end":658,"column_start":5,"column_end":83}},{"value":"/ to `round()`, `ceil()` or `floor()` before the cast in order to obtain","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":408586,"byte_end":408660,"line_start":659,"line_end":659,"column_start":5,"column_end":79}},{"value":"/ the desired conversion behavior.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":408665,"byte_end":408701,"line_start":660,"line_end":660,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":408706,"byte_end":408715,"line_start":661,"line_end":661,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4075},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":409092,"byte_end":409098,"line_start":672,"line_end":672,"column_start":12,"column_end":18},"name":"to_u32","qualname":"<Vector2D<T, U>>::to_u32","value":"pub fn to_u32(Self) -> Vector2D<u32, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `u32` vector, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `u32` vector, truncating decimals if any.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":408797,"byte_end":408855,"line_start":666,"line_end":666,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":408860,"byte_end":408863,"line_start":667,"line_end":667,"column_start":5,"column_end":8}},{"value":"/ When casting from floating vector vectors, it is worth considering whether","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":408868,"byte_end":408946,"line_start":668,"line_end":668,"column_start":5,"column_end":83}},{"value":"/ to `round()`, `ceil()` or `floor()` before the cast in order to obtain","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":408951,"byte_end":409025,"line_start":669,"line_end":669,"column_start":5,"column_end":79}},{"value":"/ the desired conversion behavior.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":409030,"byte_end":409066,"line_start":670,"line_end":670,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":409071,"byte_end":409080,"line_start":671,"line_end":671,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4076},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":409451,"byte_end":409457,"line_start":682,"line_end":682,"column_start":12,"column_end":18},"name":"to_i32","qualname":"<Vector2D<T, U>>::to_i32","value":"pub fn to_i32(Self) -> Vector2D<i32, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an i32 vector, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an i32 vector, truncating decimals if any.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":409158,"byte_end":409214,"line_start":676,"line_end":676,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":409219,"byte_end":409222,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ When casting from floating vector vectors, it is worth considering whether","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":409227,"byte_end":409305,"line_start":678,"line_end":678,"column_start":5,"column_end":83}},{"value":"/ to `round()`, `ceil()` or `floor()` before the cast in order to obtain","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":409310,"byte_end":409384,"line_start":679,"line_end":679,"column_start":5,"column_end":79}},{"value":"/ the desired conversion behavior.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":409389,"byte_end":409425,"line_start":680,"line_end":680,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":409430,"byte_end":409439,"line_start":681,"line_end":681,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4077},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":409810,"byte_end":409816,"line_start":692,"line_end":692,"column_start":12,"column_end":18},"name":"to_i64","qualname":"<Vector2D<T, U>>::to_i64","value":"pub fn to_i64(Self) -> Vector2D<i64, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an i64 vector, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an i64 vector, truncating decimals if any.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":409517,"byte_end":409573,"line_start":686,"line_end":686,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":409578,"byte_end":409581,"line_start":687,"line_end":687,"column_start":5,"column_end":8}},{"value":"/ When casting from floating vector vectors, it is worth considering whether","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":409586,"byte_end":409664,"line_start":688,"line_end":688,"column_start":5,"column_end":83}},{"value":"/ to `round()`, `ceil()` or `floor()` before the cast in order to obtain","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":409669,"byte_end":409743,"line_start":689,"line_end":689,"column_start":5,"column_end":79}},{"value":"/ the desired conversion behavior.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":409748,"byte_end":409784,"line_start":690,"line_end":690,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":409789,"byte_end":409798,"line_start":691,"line_end":691,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":4196},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":414560,"byte_end":414568,"line_start":893,"line_end":893,"column_start":12,"column_end":20},"name":"Vector3D","qualname":"::vector::Vector3D","value":"Vector3D { x, y, z, _unit }","parent":null,"children":[{"krate":0,"index":4199},{"krate":0,"index":4200},{"krate":0,"index":4201},{"krate":0,"index":4202}],"decl_id":null,"docs":" A 3d Vector tagged with a unit.\n","sig":null,"attributes":[{"value":"/ A 3d Vector tagged with a unit.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":414502,"byte_end":414537,"line_start":891,"line_end":891,"column_start":1,"column_end":36}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":414538,"byte_end":414548,"line_start":892,"line_end":892,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":4199},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":414641,"byte_end":414642,"line_start":895,"line_end":895,"column_start":9,"column_end":10},"name":"x","qualname":"::vector::Vector3D::x","value":"T","parent":{"krate":0,"index":4196},"children":[],"decl_id":null,"docs":" The `x` (traditionally, horizontal) coordinate.\n","sig":null,"attributes":[{"value":"/ The `x` (traditionally, horizontal) coordinate.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":414581,"byte_end":414632,"line_start":894,"line_end":894,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":4200},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":414709,"byte_end":414710,"line_start":897,"line_end":897,"column_start":9,"column_end":10},"name":"y","qualname":"::vector::Vector3D::y","value":"T","parent":{"krate":0,"index":4196},"children":[],"decl_id":null,"docs":" The `y` (traditionally, vertical) coordinate.\n","sig":null,"attributes":[{"value":"/ The `y` (traditionally, vertical) coordinate.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":414651,"byte_end":414700,"line_start":896,"line_end":896,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":4201},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":414774,"byte_end":414775,"line_start":899,"line_end":899,"column_start":9,"column_end":10},"name":"z","qualname":"::vector::Vector3D::z","value":"T","parent":{"krate":0,"index":4196},"children":[],"decl_id":null,"docs":" The `z` (traditionally, depth) coordinate.\n","sig":null,"attributes":[{"value":"/ The `z` (traditionally, depth) coordinate.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":414719,"byte_end":414765,"line_start":898,"line_end":898,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":4202},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":414807,"byte_end":414812,"line_start":901,"line_end":901,"column_start":9,"column_end":14},"name":"_unit","qualname":"::vector::Vector3D::_unit","value":"core::marker::PhantomData<U>","parent":{"krate":0,"index":4196},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4237},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":416996,"byte_end":417000,"line_start":994,"line_end":994,"column_start":12,"column_end":16},"name":"zero","qualname":"<Vector3D<T, U>>::zero","value":"pub fn zero() -> Self where T: Zero","parent":null,"children":[],"decl_id":null,"docs":" Constructor, setting all components to zero.\n","sig":null,"attributes":[{"value":"/ Constructor, setting all components to zero.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":416922,"byte_end":416970,"line_start":992,"line_end":992,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":416975,"byte_end":416984,"line_start":993,"line_end":993,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4238},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":417183,"byte_end":417186,"line_start":1003,"line_end":1003,"column_start":12,"column_end":15},"name":"one","qualname":"<Vector3D<T, U>>::one","value":"pub fn one() -> Self where T: One","parent":null,"children":[],"decl_id":null,"docs":" Constructor, setting all components to one.\n","sig":null,"attributes":[{"value":"/ Constructor, setting all components to one.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":417110,"byte_end":417157,"line_start":1001,"line_end":1001,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":417162,"byte_end":417171,"line_start":1002,"line_end":1002,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4239},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":417367,"byte_end":417370,"line_start":1012,"line_end":1012,"column_start":18,"column_end":21},"name":"new","qualname":"<Vector3D<T, U>>::new","value":"pub const fn new(T, T, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructor taking scalar values directly.\n","sig":null,"attributes":[{"value":"/ Constructor taking scalar values directly.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":417289,"byte_end":417335,"line_start":1010,"line_end":1010,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":417340,"byte_end":417349,"line_start":1011,"line_end":1011,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4240},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":417598,"byte_end":417603,"line_start":1022,"line_end":1022,"column_start":12,"column_end":17},"name":"splat","qualname":"<Vector3D<T, U>>::splat","value":"pub fn splat(T) -> Self where T: Clone","parent":null,"children":[],"decl_id":null,"docs":" Constructor setting all components to the same value.\n","sig":null,"attributes":[{"value":"/ Constructor setting all components to the same value.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":417515,"byte_end":417572,"line_start":1020,"line_end":1020,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":417577,"byte_end":417586,"line_start":1021,"line_end":1021,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4241},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":417886,"byte_end":417898,"line_start":1036,"line_end":1036,"column_start":12,"column_end":24},"name":"from_lengths","qualname":"<Vector3D<T, U>>::from_lengths","value":"pub fn from_lengths(Length<T, U>, Length<T, U>, Length<T, U>)\n-> Vector3D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Constructor taking properly  Lengths instead of scalar values.\n","sig":null,"attributes":[{"value":"/ Constructor taking properly  Lengths instead of scalar values.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":417794,"byte_end":417860,"line_start":1034,"line_end":1034,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":417865,"byte_end":417874,"line_start":1035,"line_end":1035,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4242},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":418071,"byte_end":418083,"line_start":1042,"line_end":1042,"column_start":12,"column_end":24},"name":"from_untyped","qualname":"<Vector3D<T, U>>::from_untyped","value":"pub fn from_untyped(Vector3D<T, UnknownUnit>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Tag a unitless value with units.\n","sig":null,"attributes":[{"value":"/ Tag a unitless value with units.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":418009,"byte_end":418045,"line_start":1040,"line_end":1040,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":418050,"byte_end":418059,"line_start":1041,"line_end":1041,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4243},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":418775,"byte_end":418778,"line_start":1067,"line_end":1067,"column_start":12,"column_end":15},"name":"abs","qualname":"<Vector3D<T, U>>::abs","value":"pub fn abs(Self) -> Self where T: Signed","parent":null,"children":[],"decl_id":null,"docs":" Computes the vector with absolute values of each component.","sig":null,"attributes":[{"value":"/ Computes the vector with absolute values of each component.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":418162,"byte_end":418225,"line_start":1046,"line_end":1046,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":418230,"byte_end":418233,"line_start":1047,"line_end":1047,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":418238,"byte_end":418251,"line_start":1048,"line_end":1048,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":418256,"byte_end":418259,"line_start":1049,"line_end":1049,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":418264,"byte_end":418275,"line_start":1050,"line_end":1050,"column_start":5,"column_end":16}},{"value":"/ # use std::{i32, f32};","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":418280,"byte_end":418306,"line_start":1051,"line_end":1051,"column_start":5,"column_end":31}},{"value":"/ # use euclid::vec3;","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":418311,"byte_end":418334,"line_start":1052,"line_end":1052,"column_start":5,"column_end":28}},{"value":"/ enum U {}","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":418339,"byte_end":418352,"line_start":1053,"line_end":1053,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":418357,"byte_end":418360,"line_start":1054,"line_end":1054,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec3::<_, U>(-1, 0, 2).abs(), vec3(1, 0, 2));","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":418365,"byte_end":418425,"line_start":1055,"line_end":1055,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":418430,"byte_end":418433,"line_start":1056,"line_end":1056,"column_start":5,"column_end":8}},{"value":"/ let vec = vec3::<_, U>(f32::NAN, 0.0, -f32::MAX).abs();","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":418438,"byte_end":418497,"line_start":1057,"line_end":1057,"column_start":5,"column_end":64}},{"value":"/ assert!(vec.x.is_nan());","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":418502,"byte_end":418530,"line_start":1058,"line_end":1058,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(vec.y, 0.0);","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":418535,"byte_end":418562,"line_start":1059,"line_end":1059,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(vec.z, f32::MAX);","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":418567,"byte_end":418599,"line_start":1060,"line_end":1060,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":418604,"byte_end":418611,"line_start":1061,"line_end":1061,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":418616,"byte_end":418619,"line_start":1062,"line_end":1062,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":418624,"byte_end":418636,"line_start":1063,"line_end":1063,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":418641,"byte_end":418644,"line_start":1064,"line_end":1064,"column_start":5,"column_end":8}},{"value":"/ The behavior for each component follows the scalar type's implementation of","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":418649,"byte_end":418728,"line_start":1065,"line_end":1065,"column_start":5,"column_end":84}},{"value":"/ `num_traits::Signed::abs`.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":418733,"byte_end":418763,"line_start":1066,"line_end":1066,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":4244},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":418936,"byte_end":418939,"line_start":1076,"line_end":1076,"column_start":12,"column_end":15},"name":"dot","qualname":"<Vector3D<T, U>>::dot","value":"pub fn dot(Self, Self) -> T where T: Add<Output = T> + Mul<Output = T>","parent":null,"children":[],"decl_id":null,"docs":" Dot product.\n","sig":null,"attributes":[{"value":"/ Dot product.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":418894,"byte_end":418910,"line_start":1074,"line_end":1074,"column_start":5,"column_end":21}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":418915,"byte_end":418924,"line_start":1075,"line_end":1075,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4248},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":419180,"byte_end":419185,"line_start":1087,"line_end":1087,"column_start":12,"column_end":17},"name":"cross","qualname":"<Vector3D<T, U>>::cross","value":"pub fn cross(Self, Self) -> Self where T: Sub<Output = T> + Mul<Output = T>","parent":null,"children":[],"decl_id":null,"docs":" Cross product.\n","sig":null,"attributes":[{"value":"/ Cross product.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":419136,"byte_end":419154,"line_start":1085,"line_end":1085,"column_start":5,"column_end":23}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":419159,"byte_end":419168,"line_start":1086,"line_end":1086,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4249},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":419548,"byte_end":419561,"line_start":1100,"line_end":1100,"column_start":12,"column_end":25},"name":"component_mul","qualname":"<Vector3D<T, U>>::component_mul","value":"pub fn component_mul(Self, Self) -> Self where T: Mul<Output = T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the component-wise multiplication of the two vectors.\n","sig":null,"attributes":[{"value":"/ Returns the component-wise multiplication of the two vectors.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":419457,"byte_end":419522,"line_start":1098,"line_end":1098,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":419527,"byte_end":419536,"line_start":1099,"line_end":1099,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4250},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":419796,"byte_end":419809,"line_start":1109,"line_end":1109,"column_start":12,"column_end":25},"name":"component_div","qualname":"<Vector3D<T, U>>::component_div","value":"pub fn component_div(Self, Self) -> Self where T: Div<Output = T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the component-wise division of the two vectors.\n","sig":null,"attributes":[{"value":"/ Returns the component-wise division of the two vectors.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":419711,"byte_end":419770,"line_start":1107,"line_end":1107,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":419775,"byte_end":419784,"line_start":1108,"line_end":1108,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4251},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":420083,"byte_end":420091,"line_start":1120,"line_end":1120,"column_start":12,"column_end":20},"name":"to_point","qualname":"<Vector3D<T, U>>::to_point","value":"pub fn to_point(Self) -> Point3D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast this vector into a point.","sig":null,"attributes":[{"value":"/ Cast this vector into a point.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":419959,"byte_end":419993,"line_start":1116,"line_end":1116,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":419998,"byte_end":420001,"line_start":1117,"line_end":1117,"column_start":5,"column_end":8}},{"value":"/ Equivalent to adding this vector to the origin.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":420006,"byte_end":420057,"line_start":1118,"line_end":1118,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":420062,"byte_end":420071,"line_start":1119,"line_end":1119,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4252},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":420256,"byte_end":420258,"line_start":1126,"line_end":1126,"column_start":12,"column_end":14},"name":"xy","qualname":"<Vector3D<T, U>>::xy","value":"pub fn xy(Self) -> Vector2D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Returns a 2d vector using this vector's x and y coordinates\n","sig":null,"attributes":[{"value":"/ Returns a 2d vector using this vector's x and y coordinates","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":420167,"byte_end":420230,"line_start":1124,"line_end":1124,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":420235,"byte_end":420244,"line_start":1125,"line_end":1125,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4253},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":420414,"byte_end":420416,"line_start":1132,"line_end":1132,"column_start":12,"column_end":14},"name":"xz","qualname":"<Vector3D<T, U>>::xz","value":"pub fn xz(Self) -> Vector2D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Returns a 2d vector using this vector's x and z coordinates\n","sig":null,"attributes":[{"value":"/ Returns a 2d vector using this vector's x and z coordinates","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":420325,"byte_end":420388,"line_start":1130,"line_end":1130,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":420393,"byte_end":420402,"line_start":1131,"line_end":1131,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4254},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":420572,"byte_end":420574,"line_start":1138,"line_end":1138,"column_start":12,"column_end":14},"name":"yz","qualname":"<Vector3D<T, U>>::yz","value":"pub fn yz(Self) -> Vector2D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Returns a 2d vector using this vector's x and z coordinates\n","sig":null,"attributes":[{"value":"/ Returns a 2d vector using this vector's x and z coordinates","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":420483,"byte_end":420546,"line_start":1136,"line_end":1136,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":420551,"byte_end":420560,"line_start":1137,"line_end":1137,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4255},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":420706,"byte_end":420714,"line_start":1144,"line_end":1144,"column_start":12,"column_end":20},"name":"to_array","qualname":"<Vector3D<T, U>>::to_array","value":"pub fn to_array(Self) -> [T; ]","parent":null,"children":[],"decl_id":null,"docs":" Cast into an array with x, y and z.\n","sig":null,"attributes":[{"value":"/ Cast into an array with x, y and z.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":420641,"byte_end":420680,"line_start":1142,"line_end":1142,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":420685,"byte_end":420694,"line_start":1143,"line_end":1143,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4257},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":420845,"byte_end":420856,"line_start":1150,"line_end":1150,"column_start":12,"column_end":23},"name":"to_array_4d","qualname":"<Vector3D<T, U>>::to_array_4d","value":"pub fn to_array_4d(Self) -> [T; ] where T: Zero","parent":null,"children":[],"decl_id":null,"docs":" Cast into an array with x, y, z and 0.\n","sig":null,"attributes":[{"value":"/ Cast into an array with x, y, z and 0.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":420777,"byte_end":420819,"line_start":1148,"line_end":1148,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":420824,"byte_end":420833,"line_start":1149,"line_end":1149,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4259},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":421028,"byte_end":421036,"line_start":1159,"line_end":1159,"column_start":12,"column_end":20},"name":"to_tuple","qualname":"<Vector3D<T, U>>::to_tuple","value":"pub fn to_tuple(Self) -> (T, T, T)","parent":null,"children":[],"decl_id":null,"docs":" Cast into a tuple with x, y and z.\n","sig":null,"attributes":[{"value":"/ Cast into a tuple with x, y and z.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":420964,"byte_end":421002,"line_start":1157,"line_end":1157,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":421007,"byte_end":421016,"line_start":1158,"line_end":1158,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4260},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":421169,"byte_end":421180,"line_start":1165,"line_end":1165,"column_start":12,"column_end":23},"name":"to_tuple_4d","qualname":"<Vector3D<T, U>>::to_tuple_4d","value":"pub fn to_tuple_4d(Self) -> (T, T, T, T) where T: Zero","parent":null,"children":[],"decl_id":null,"docs":" Cast into a tuple with x, y, z and 0.\n","sig":null,"attributes":[{"value":"/ Cast into a tuple with x, y, z and 0.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":421102,"byte_end":421143,"line_start":1163,"line_end":1163,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":421148,"byte_end":421157,"line_start":1164,"line_end":1164,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4261},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":421374,"byte_end":421384,"line_start":1174,"line_end":1174,"column_start":12,"column_end":22},"name":"to_untyped","qualname":"<Vector3D<T, U>>::to_untyped","value":"pub fn to_untyped(Self) -> Vector3D<T, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":" Drop the units, preserving only the numeric value.\n","sig":null,"attributes":[{"value":"/ Drop the units, preserving only the numeric value.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":421294,"byte_end":421348,"line_start":1172,"line_end":1172,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":421353,"byte_end":421362,"line_start":1173,"line_end":1173,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4262},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":421513,"byte_end":421522,"line_start":1180,"line_end":1180,"column_start":12,"column_end":21},"name":"cast_unit","qualname":"<Vector3D<T, U>>::cast_unit","value":"pub fn cast_unit<V>(Self) -> Vector3D<T, V>","parent":null,"children":[],"decl_id":null,"docs":" Cast the unit.\n","sig":null,"attributes":[{"value":"/ Cast the unit.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":421469,"byte_end":421487,"line_start":1178,"line_end":1178,"column_start":5,"column_end":23}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":421492,"byte_end":421501,"line_start":1179,"line_end":1179,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4264},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":421655,"byte_end":421660,"line_start":1186,"line_end":1186,"column_start":12,"column_end":17},"name":"to_2d","qualname":"<Vector3D<T, U>>::to_2d","value":"pub fn to_2d(Self) -> Vector2D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Convert into a 2d vector.\n","sig":null,"attributes":[{"value":"/ Convert into a 2d vector.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":421600,"byte_end":421629,"line_start":1184,"line_end":1184,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":421634,"byte_end":421643,"line_start":1185,"line_end":1185,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4265},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":422082,"byte_end":422087,"line_start":1202,"line_end":1202,"column_start":12,"column_end":17},"name":"round","qualname":"<Vector3D<T, U>>::round","value":"pub fn round(Self) -> Self where T: Round","parent":null,"children":[],"decl_id":null,"docs":" Rounds each component to the nearest integer value.","sig":null,"attributes":[{"value":"/ Rounds each component to the nearest integer value.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":421716,"byte_end":421771,"line_start":1190,"line_end":1190,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":421776,"byte_end":421779,"line_start":1191,"line_end":1191,"column_start":5,"column_end":8}},{"value":"/ This behavior is preserved for negative values (unlike the basic cast).","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":421784,"byte_end":421859,"line_start":1192,"line_end":1192,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":421864,"byte_end":421867,"line_start":1193,"line_end":1193,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":421872,"byte_end":421883,"line_start":1194,"line_end":1194,"column_start":5,"column_end":16}},{"value":"/ # use euclid::vec3;","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":421888,"byte_end":421911,"line_start":1195,"line_end":1195,"column_start":5,"column_end":28}},{"value":"/ enum Mm {}","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":421916,"byte_end":421930,"line_start":1196,"line_end":1196,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":421935,"byte_end":421938,"line_start":1197,"line_end":1197,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec3::<_, Mm>(-0.1, -0.8, 0.4).round(), vec3::<_, Mm>(0.0, -1.0, 0.0))","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":421943,"byte_end":422028,"line_start":1198,"line_end":1198,"column_start":5,"column_end":90}},{"value":"/ ```","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":422033,"byte_end":422040,"line_start":1199,"line_end":1199,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":422045,"byte_end":422054,"line_start":1200,"line_end":1200,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":422059,"byte_end":422070,"line_start":1201,"line_end":1201,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4266},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":422608,"byte_end":422612,"line_start":1221,"line_end":1221,"column_start":12,"column_end":16},"name":"ceil","qualname":"<Vector3D<T, U>>::ceil","value":"pub fn ceil(Self) -> Self where T: Ceil","parent":null,"children":[],"decl_id":null,"docs":" Rounds each component to the smallest integer equal or greater than the original value.","sig":null,"attributes":[{"value":"/ Rounds each component to the smallest integer equal or greater than the original value.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":422208,"byte_end":422299,"line_start":1209,"line_end":1209,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":422304,"byte_end":422307,"line_start":1210,"line_end":1210,"column_start":5,"column_end":8}},{"value":"/ This behavior is preserved for negative values (unlike the basic cast).","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":422312,"byte_end":422387,"line_start":1211,"line_end":1211,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":422392,"byte_end":422395,"line_start":1212,"line_end":1212,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":422400,"byte_end":422411,"line_start":1213,"line_end":1213,"column_start":5,"column_end":16}},{"value":"/ # use euclid::vec3;","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":422416,"byte_end":422439,"line_start":1214,"line_end":1214,"column_start":5,"column_end":28}},{"value":"/ enum Mm {}","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":422444,"byte_end":422458,"line_start":1215,"line_end":1215,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":422463,"byte_end":422466,"line_start":1216,"line_end":1216,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec3::<_, Mm>(-0.1, -0.8, 0.4).ceil(), vec3::<_, Mm>(0.0, 0.0, 1.0))","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":422471,"byte_end":422554,"line_start":1217,"line_end":1217,"column_start":5,"column_end":88}},{"value":"/ ```","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":422559,"byte_end":422566,"line_start":1218,"line_end":1218,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":422571,"byte_end":422580,"line_start":1219,"line_end":1219,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":422585,"byte_end":422596,"line_start":1220,"line_end":1220,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4267},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":423129,"byte_end":423134,"line_start":1240,"line_end":1240,"column_start":12,"column_end":17},"name":"floor","qualname":"<Vector3D<T, U>>::floor","value":"pub fn floor(Self) -> Self where T: Floor","parent":null,"children":[],"decl_id":null,"docs":" Rounds each component to the biggest integer equal or lower than the original value.","sig":null,"attributes":[{"value":"/ Rounds each component to the biggest integer equal or lower than the original value.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":422729,"byte_end":422817,"line_start":1228,"line_end":1228,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":422822,"byte_end":422825,"line_start":1229,"line_end":1229,"column_start":5,"column_end":8}},{"value":"/ This behavior is preserved for negative values (unlike the basic cast).","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":422830,"byte_end":422905,"line_start":1230,"line_end":1230,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":422910,"byte_end":422913,"line_start":1231,"line_end":1231,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":422918,"byte_end":422929,"line_start":1232,"line_end":1232,"column_start":5,"column_end":16}},{"value":"/ # use euclid::vec3;","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":422934,"byte_end":422957,"line_start":1233,"line_end":1233,"column_start":5,"column_end":28}},{"value":"/ enum Mm {}","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":422962,"byte_end":422976,"line_start":1234,"line_end":1234,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":422981,"byte_end":422984,"line_start":1235,"line_end":1235,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec3::<_, Mm>(-0.1, -0.8, 0.4).floor(), vec3::<_, Mm>(-1.0, -1.0, 0.0))","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":422989,"byte_end":423075,"line_start":1236,"line_end":1236,"column_start":5,"column_end":91}},{"value":"/ ```","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":423080,"byte_end":423087,"line_start":1237,"line_end":1237,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":423092,"byte_end":423101,"line_start":1238,"line_end":1238,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":423106,"byte_end":423117,"line_start":1239,"line_end":1239,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4268},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":423335,"byte_end":423347,"line_start":1249,"line_end":1249,"column_start":12,"column_end":24},"name":"to_transform","qualname":"<Vector3D<T, U>>::to_transform","value":"pub fn to_transform(Self) -> Transform3D<T, U, U> where T: Zero + One","parent":null,"children":[],"decl_id":null,"docs":" Creates translation by this vector in vector units\n","sig":null,"attributes":[{"value":"/ Creates translation by this vector in vector units","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":423255,"byte_end":423309,"line_start":1247,"line_end":1247,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":423314,"byte_end":423323,"line_start":1248,"line_end":1248,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4272},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":423642,"byte_end":423655,"line_start":1263,"line_end":1263,"column_start":12,"column_end":25},"name":"square_length","qualname":"<Vector3D<T, U>>::square_length","value":"pub fn square_length(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the vector's length squared.\n","sig":null,"attributes":[{"value":"/ Returns the vector's length squared.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":423576,"byte_end":423616,"line_start":1261,"line_end":1261,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":423621,"byte_end":423630,"line_start":1262,"line_end":1262,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4273},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":423893,"byte_end":423912,"line_start":1271,"line_end":1271,"column_start":12,"column_end":31},"name":"project_onto_vector","qualname":"<Vector3D<T, U>>::project_onto_vector","value":"pub fn project_onto_vector(Self, Self) -> Self where T: Sub<T, Output = T> +\nDiv<T, Output = T>","parent":null,"children":[],"decl_id":null,"docs":" Returns this vector projected onto another one.","sig":null,"attributes":[{"value":"/ Returns this vector projected onto another one.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":423740,"byte_end":423791,"line_start":1267,"line_end":1267,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":423796,"byte_end":423799,"line_start":1268,"line_end":1268,"column_start":5,"column_end":8}},{"value":"/ Projecting onto a nil vector will cause a division by zero.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":423804,"byte_end":423867,"line_start":1269,"line_end":1269,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":423872,"byte_end":423881,"line_start":1270,"line_end":1270,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4277},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":424248,"byte_end":424256,"line_start":1283,"line_end":1283,"column_start":12,"column_end":20},"name":"angle_to","qualname":"<Vector3D<T, U>>::angle_to","value":"pub fn angle_to(Self, Self) -> Angle<T> where T: Trig","parent":null,"children":[],"decl_id":null,"docs":" Returns the positive angle between this vector and another vector.","sig":null,"attributes":[{"value":"/ Returns the positive angle between this vector and another vector.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":424110,"byte_end":424180,"line_start":1280,"line_end":1280,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":424185,"byte_end":424188,"line_start":1281,"line_end":1281,"column_start":5,"column_end":8}},{"value":"/ The returned angle is between 0 and PI.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":424193,"byte_end":424236,"line_start":1282,"line_end":1282,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":4278},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":424509,"byte_end":424515,"line_start":1295,"line_end":1295,"column_start":12,"column_end":18},"name":"length","qualname":"<Vector3D<T, U>>::length","value":"pub fn length(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the vector length.\n","sig":null,"attributes":[{"value":"/ Returns the vector length.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":424453,"byte_end":424483,"line_start":1293,"line_end":1293,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":424488,"byte_end":424497,"line_start":1294,"line_end":1294,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4279},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":424664,"byte_end":424673,"line_start":1302,"line_end":1302,"column_start":12,"column_end":21},"name":"normalize","qualname":"<Vector3D<T, U>>::normalize","value":"pub fn normalize(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the vector with length of one unit\n","sig":null,"attributes":[{"value":"/ Returns the vector with length of one unit","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":424576,"byte_end":424622,"line_start":1299,"line_end":1299,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":424627,"byte_end":424636,"line_start":1300,"line_end":1300,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":424641,"byte_end":424652,"line_start":1301,"line_end":1301,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4280},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":424963,"byte_end":424976,"line_start":1312,"line_end":1312,"column_start":12,"column_end":25},"name":"try_normalize","qualname":"<Vector3D<T, U>>::try_normalize","value":"pub fn try_normalize(Self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Returns the vector with length of one unit.","sig":null,"attributes":[{"value":"/ Returns the vector with length of one unit.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":424730,"byte_end":424777,"line_start":1306,"line_end":1306,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":424782,"byte_end":424785,"line_start":1307,"line_end":1307,"column_start":5,"column_end":8}},{"value":"/ Unlike [`Vector2D::normalize`](#method.normalize), this returns None in the case that the","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":424790,"byte_end":424883,"line_start":1308,"line_end":1308,"column_start":5,"column_end":98}},{"value":"/ length of the vector is zero.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":424888,"byte_end":424921,"line_start":1309,"line_end":1309,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":424926,"byte_end":424935,"line_start":1310,"line_end":1310,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":424940,"byte_end":424951,"line_start":1311,"line_end":1311,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4281},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":425280,"byte_end":425296,"line_start":1324,"line_end":1324,"column_start":12,"column_end":28},"name":"robust_normalize","qualname":"<Vector3D<T, U>>::robust_normalize","value":"pub fn robust_normalize(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return the normalized vector even if the length is larger than the max value of Float.\n","sig":null,"attributes":[{"value":"/ Return the normalized vector even if the length is larger than the max value of Float.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":425148,"byte_end":425238,"line_start":1321,"line_end":1321,"column_start":5,"column_end":95}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":425243,"byte_end":425252,"line_start":1322,"line_end":1322,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":425257,"byte_end":425268,"line_start":1323,"line_end":1323,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4282},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":425608,"byte_end":425623,"line_start":1336,"line_end":1336,"column_start":12,"column_end":27},"name":"with_max_length","qualname":"<Vector3D<T, U>>::with_max_length","value":"pub fn with_max_length(Self, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return this vector capped to a maximum length.\n","sig":null,"attributes":[{"value":"/ Return this vector capped to a maximum length.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":425532,"byte_end":425582,"line_start":1334,"line_end":1334,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":425587,"byte_end":425596,"line_start":1335,"line_end":1335,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4283},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":425935,"byte_end":425950,"line_start":1347,"line_end":1347,"column_start":12,"column_end":27},"name":"with_min_length","qualname":"<Vector3D<T, U>>::with_min_length","value":"pub fn with_min_length(Self, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return this vector with a minimum length applied.\n","sig":null,"attributes":[{"value":"/ Return this vector with a minimum length applied.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":425856,"byte_end":425909,"line_start":1345,"line_end":1345,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":425914,"byte_end":425923,"line_start":1346,"line_end":1346,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4284},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":426273,"byte_end":426285,"line_start":1358,"line_end":1358,"column_start":12,"column_end":24},"name":"clamp_length","qualname":"<Vector3D<T, U>>::clamp_length","value":"pub fn clamp_length(Self, T, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return this vector with minimum and maximum lengths applied.\n","sig":null,"attributes":[{"value":"/ Return this vector with minimum and maximum lengths applied.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":426183,"byte_end":426247,"line_start":1356,"line_end":1356,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":426252,"byte_end":426261,"line_start":1357,"line_end":1357,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4285},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":426488,"byte_end":426497,"line_start":1365,"line_end":1365,"column_start":12,"column_end":21},"name":"is_finite","qualname":"<Vector3D<T, U>>::is_finite","value":"pub fn is_finite(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if all members are finite.\n","sig":null,"attributes":[{"value":"/ Returns true if all members are finite.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":426419,"byte_end":426462,"line_start":1363,"line_end":1363,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":426467,"byte_end":426476,"line_start":1364,"line_end":1364,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4289},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":427392,"byte_end":427396,"line_start":1392,"line_end":1392,"column_start":12,"column_end":16},"name":"lerp","qualname":"<Vector3D<T, U>>::lerp","value":"pub fn lerp(Self, Self, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Linearly interpolate each component between this vector and another vector.","sig":null,"attributes":[{"value":"/ Linearly interpolate each component between this vector and another vector.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":426705,"byte_end":426784,"line_start":1374,"line_end":1374,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":426789,"byte_end":426792,"line_start":1375,"line_end":1375,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":426797,"byte_end":426810,"line_start":1376,"line_end":1376,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":426815,"byte_end":426818,"line_start":1377,"line_end":1377,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":426823,"byte_end":426834,"line_start":1378,"line_end":1378,"column_start":5,"column_end":16}},{"value":"/ use euclid::vec3;","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":426839,"byte_end":426860,"line_start":1379,"line_end":1379,"column_start":5,"column_end":26}},{"value":"/ use euclid::default::Vector3D;","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":426865,"byte_end":426899,"line_start":1380,"line_end":1380,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":426904,"byte_end":426907,"line_start":1381,"line_end":1381,"column_start":5,"column_end":8}},{"value":"/ let from: Vector3D<_> = vec3(0.0, 10.0, -1.0);","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":426912,"byte_end":426962,"line_start":1382,"line_end":1382,"column_start":5,"column_end":55}},{"value":"/ let to:  Vector3D<_> = vec3(8.0, -4.0,  0.0);","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":426967,"byte_end":427016,"line_start":1383,"line_end":1383,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":427021,"byte_end":427024,"line_start":1384,"line_end":1384,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(from.lerp(to, -1.0), vec3(-8.0,  24.0, -2.0));","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":427029,"byte_end":427090,"line_start":1385,"line_end":1385,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(from.lerp(to,  0.0), vec3( 0.0,  10.0, -1.0));","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":427095,"byte_end":427156,"line_start":1386,"line_end":1386,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(from.lerp(to,  0.5), vec3( 4.0,   3.0, -0.5));","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":427161,"byte_end":427222,"line_start":1387,"line_end":1387,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(from.lerp(to,  1.0), vec3( 8.0,  -4.0,  0.0));","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":427227,"byte_end":427288,"line_start":1388,"line_end":1388,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(from.lerp(to,  2.0), vec3(16.0, -18.0,  1.0));","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":427293,"byte_end":427354,"line_start":1389,"line_end":1389,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":427359,"byte_end":427366,"line_start":1390,"line_end":1390,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":427371,"byte_end":427380,"line_start":1391,"line_end":1391,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4290},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":427611,"byte_end":427618,"line_start":1399,"line_end":1399,"column_start":12,"column_end":19},"name":"reflect","qualname":"<Vector3D<T, U>>::reflect","value":"pub fn reflect(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a reflection vector using an incident ray and a surface normal.\n","sig":null,"attributes":[{"value":"/ Returns a reflection vector using an incident ray and a surface normal.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":427510,"byte_end":427585,"line_start":1397,"line_end":1397,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":427590,"byte_end":427599,"line_start":1398,"line_end":1398,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4294},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":427900,"byte_end":427903,"line_start":1408,"line_end":1408,"column_start":12,"column_end":15},"name":"min","qualname":"<Vector3D<T, U>>::min","value":"pub fn min(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the vector each component of which are minimum of this vector and another.\n","sig":null,"attributes":[{"value":"/ Returns the vector each component of which are minimum of this vector and another.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":427788,"byte_end":427874,"line_start":1406,"line_end":1406,"column_start":5,"column_end":91}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":427879,"byte_end":427888,"line_start":1407,"line_end":1407,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4295},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":428182,"byte_end":428185,"line_start":1418,"line_end":1418,"column_start":12,"column_end":15},"name":"max","qualname":"<Vector3D<T, U>>::max","value":"pub fn max(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the vector each component of which are maximum of this vector and another.\n","sig":null,"attributes":[{"value":"/ Returns the vector each component of which are maximum of this vector and another.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":428070,"byte_end":428156,"line_start":1416,"line_end":1416,"column_start":5,"column_end":91}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":428161,"byte_end":428170,"line_start":1417,"line_end":1417,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4296},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":428550,"byte_end":428555,"line_start":1431,"line_end":1431,"column_start":12,"column_end":17},"name":"clamp","qualname":"<Vector3D<T, U>>::clamp","value":"pub fn clamp(Self, Self, Self) -> Self where T: Copy","parent":null,"children":[],"decl_id":null,"docs":" Returns the vector each component of which is clamped by corresponding\n components of `start` and `end`.","sig":null,"attributes":[{"value":"/ Returns the vector each component of which is clamped by corresponding","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":428352,"byte_end":428426,"line_start":1426,"line_end":1426,"column_start":5,"column_end":79}},{"value":"/ components of `start` and `end`.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":428431,"byte_end":428467,"line_start":1427,"line_end":1427,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":428472,"byte_end":428475,"line_start":1428,"line_end":1428,"column_start":5,"column_end":8}},{"value":"/ Shortcut for `self.max(start).min(end)`.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":428480,"byte_end":428524,"line_start":1429,"line_end":1429,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":428529,"byte_end":428538,"line_start":1430,"line_end":1430,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4297},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":428775,"byte_end":428787,"line_start":1440,"line_end":1440,"column_start":12,"column_end":24},"name":"greater_than","qualname":"<Vector3D<T, U>>::greater_than","value":"pub fn greater_than(Self, Self) -> BoolVector3D","parent":null,"children":[],"decl_id":null,"docs":" Returns vector with results of \"greater than\" operation on each component.\n","sig":null,"attributes":[{"value":"/ Returns vector with results of \"greater than\" operation on each component.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":428671,"byte_end":428749,"line_start":1438,"line_end":1438,"column_start":5,"column_end":83}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":428754,"byte_end":428763,"line_start":1439,"line_end":1439,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4298},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":429070,"byte_end":429080,"line_start":1450,"line_end":1450,"column_start":12,"column_end":22},"name":"lower_than","qualname":"<Vector3D<T, U>>::lower_than","value":"pub fn lower_than(Self, Self) -> BoolVector3D","parent":null,"children":[],"decl_id":null,"docs":" Returns vector with results of \"lower than\" operation on each component.\n","sig":null,"attributes":[{"value":"/ Returns vector with results of \"lower than\" operation on each component.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":428968,"byte_end":429044,"line_start":1448,"line_end":1448,"column_start":5,"column_end":81}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":429049,"byte_end":429058,"line_start":1449,"line_end":1449,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4302},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":429399,"byte_end":429404,"line_start":1462,"line_end":1462,"column_start":12,"column_end":17},"name":"equal","qualname":"<Vector3D<T, U>>::equal","value":"pub fn equal(Self, Self) -> BoolVector3D","parent":null,"children":[],"decl_id":null,"docs":" Returns vector with results of \"equal\" operation on each component.\n","sig":null,"attributes":[{"value":"/ Returns vector with results of \"equal\" operation on each component.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":429302,"byte_end":429373,"line_start":1460,"line_end":1460,"column_start":5,"column_end":76}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":429378,"byte_end":429387,"line_start":1461,"line_end":1461,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4303},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":429689,"byte_end":429698,"line_start":1472,"line_end":1472,"column_start":12,"column_end":21},"name":"not_equal","qualname":"<Vector3D<T, U>>::not_equal","value":"pub fn not_equal(Self, Self) -> BoolVector3D","parent":null,"children":[],"decl_id":null,"docs":" Returns vector with results of \"not equal\" operation on each component.\n","sig":null,"attributes":[{"value":"/ Returns vector with results of \"not equal\" operation on each component.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":429588,"byte_end":429663,"line_start":1470,"line_end":1470,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":429668,"byte_end":429677,"line_start":1471,"line_end":1471,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4307},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":430309,"byte_end":430313,"line_start":1488,"line_end":1488,"column_start":12,"column_end":16},"name":"cast","qualname":"<Vector3D<T, U>>::cast","value":"pub fn cast<NewT: NumCast>(Self) -> Vector3D<NewT, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast from one numeric representation to another, preserving the units.","sig":null,"attributes":[{"value":"/ Cast from one numeric representation to another, preserving the units.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":429928,"byte_end":430002,"line_start":1482,"line_end":1482,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":430007,"byte_end":430010,"line_start":1483,"line_end":1483,"column_start":5,"column_end":8}},{"value":"/ When casting from floating vector to integer coordinates, the decimals are truncated","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":430015,"byte_end":430103,"line_start":1484,"line_end":1484,"column_start":5,"column_end":93}},{"value":"/ as one would expect from a simple cast, but this behavior does not always make sense","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":430108,"byte_end":430196,"line_start":1485,"line_end":1485,"column_start":5,"column_end":93}},{"value":"/ geometrically. Consider using `round()`, `ceil()` or `floor()` before casting.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":430201,"byte_end":430283,"line_start":1486,"line_end":1486,"column_start":5,"column_end":87}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":430288,"byte_end":430297,"line_start":1487,"line_end":1487,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4309},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":430778,"byte_end":430786,"line_start":1497,"line_end":1497,"column_start":12,"column_end":20},"name":"try_cast","qualname":"<Vector3D<T, U>>::try_cast","value":"pub fn try_cast<NewT: NumCast>(Self) -> Option<Vector3D<NewT, U>>","parent":null,"children":[],"decl_id":null,"docs":" Fallible cast from one numeric representation to another, preserving the units.","sig":null,"attributes":[{"value":"/ Fallible cast from one numeric representation to another, preserving the units.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":430402,"byte_end":430485,"line_start":1492,"line_end":1492,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":430490,"byte_end":430493,"line_start":1493,"line_end":1493,"column_start":5,"column_end":8}},{"value":"/ When casting from floating vector to integer coordinates, the decimals are truncated","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":430498,"byte_end":430586,"line_start":1494,"line_end":1494,"column_start":5,"column_end":93}},{"value":"/ as one would expect from a simple cast, but this behavior does not always make sense","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":430591,"byte_end":430679,"line_start":1495,"line_end":1495,"column_start":5,"column_end":93}},{"value":"/ geometrically. Consider using `round()`, `ceil()` or `floor()` before casting.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":430684,"byte_end":430766,"line_start":1496,"line_end":1496,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":4311},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":431184,"byte_end":431190,"line_start":1512,"line_end":1512,"column_start":12,"column_end":18},"name":"to_f32","qualname":"<Vector3D<T, U>>::to_f32","value":"pub fn to_f32(Self) -> Vector3D<f32, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `f32` vector.\n","sig":null,"attributes":[{"value":"/ Cast into an `f32` vector.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":431128,"byte_end":431158,"line_start":1510,"line_end":1510,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":431163,"byte_end":431172,"line_start":1511,"line_end":1511,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4312},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":431306,"byte_end":431312,"line_start":1518,"line_end":1518,"column_start":12,"column_end":18},"name":"to_f64","qualname":"<Vector3D<T, U>>::to_f64","value":"pub fn to_f64(Self) -> Vector3D<f64, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `f64` vector.\n","sig":null,"attributes":[{"value":"/ Cast into an `f64` vector.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":431250,"byte_end":431280,"line_start":1516,"line_end":1516,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":431285,"byte_end":431294,"line_start":1517,"line_end":1517,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4313},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":431669,"byte_end":431677,"line_start":1528,"line_end":1528,"column_start":12,"column_end":20},"name":"to_usize","qualname":"<Vector3D<T, U>>::to_usize","value":"pub fn to_usize(Self) -> Vector3D<usize, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `usize` vector, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `usize` vector, truncating decimals if any.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":431372,"byte_end":431432,"line_start":1522,"line_end":1522,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":431437,"byte_end":431440,"line_start":1523,"line_end":1523,"column_start":5,"column_end":8}},{"value":"/ When casting from floating vector vectors, it is worth considering whether","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":431445,"byte_end":431523,"line_start":1524,"line_end":1524,"column_start":5,"column_end":83}},{"value":"/ to `round()`, `ceil()` or `floor()` before the cast in order to obtain","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":431528,"byte_end":431602,"line_start":1525,"line_end":1525,"column_start":5,"column_end":79}},{"value":"/ the desired conversion behavior.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":431607,"byte_end":431643,"line_start":1526,"line_end":1526,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":431648,"byte_end":431657,"line_start":1527,"line_end":1527,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4314},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":432034,"byte_end":432040,"line_start":1538,"line_end":1538,"column_start":12,"column_end":18},"name":"to_u32","qualname":"<Vector3D<T, U>>::to_u32","value":"pub fn to_u32(Self) -> Vector3D<u32, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `u32` vector, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `u32` vector, truncating decimals if any.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":431739,"byte_end":431797,"line_start":1532,"line_end":1532,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":431802,"byte_end":431805,"line_start":1533,"line_end":1533,"column_start":5,"column_end":8}},{"value":"/ When casting from floating vector vectors, it is worth considering whether","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":431810,"byte_end":431888,"line_start":1534,"line_end":1534,"column_start":5,"column_end":83}},{"value":"/ to `round()`, `ceil()` or `floor()` before the cast in order to obtain","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":431893,"byte_end":431967,"line_start":1535,"line_end":1535,"column_start":5,"column_end":79}},{"value":"/ the desired conversion behavior.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":431972,"byte_end":432008,"line_start":1536,"line_end":1536,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":432013,"byte_end":432022,"line_start":1537,"line_end":1537,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4315},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":432395,"byte_end":432401,"line_start":1548,"line_end":1548,"column_start":12,"column_end":18},"name":"to_i32","qualname":"<Vector3D<T, U>>::to_i32","value":"pub fn to_i32(Self) -> Vector3D<i32, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `i32` vector, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `i32` vector, truncating decimals if any.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":432100,"byte_end":432158,"line_start":1542,"line_end":1542,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":432163,"byte_end":432166,"line_start":1543,"line_end":1543,"column_start":5,"column_end":8}},{"value":"/ When casting from floating vector vectors, it is worth considering whether","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":432171,"byte_end":432249,"line_start":1544,"line_end":1544,"column_start":5,"column_end":83}},{"value":"/ to `round()`, `ceil()` or `floor()` before the cast in order to obtain","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":432254,"byte_end":432328,"line_start":1545,"line_end":1545,"column_start":5,"column_end":79}},{"value":"/ the desired conversion behavior.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":432333,"byte_end":432369,"line_start":1546,"line_end":1546,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":432374,"byte_end":432383,"line_start":1547,"line_end":1547,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4316},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":432756,"byte_end":432762,"line_start":1558,"line_end":1558,"column_start":12,"column_end":18},"name":"to_i64","qualname":"<Vector3D<T, U>>::to_i64","value":"pub fn to_i64(Self) -> Vector3D<i64, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `i64` vector, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `i64` vector, truncating decimals if any.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":432461,"byte_end":432519,"line_start":1552,"line_end":1552,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":432524,"byte_end":432527,"line_start":1553,"line_end":1553,"column_start":5,"column_end":8}},{"value":"/ When casting from floating vector vectors, it is worth considering whether","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":432532,"byte_end":432610,"line_start":1554,"line_end":1554,"column_start":5,"column_end":83}},{"value":"/ to `round()`, `ceil()` or `floor()` before the cast in order to obtain","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":432615,"byte_end":432689,"line_start":1555,"line_end":1555,"column_start":5,"column_end":79}},{"value":"/ the desired conversion behavior.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":432694,"byte_end":432730,"line_start":1556,"line_end":1556,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":432735,"byte_end":432744,"line_start":1557,"line_end":1557,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":4682},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":437988,"byte_end":438000,"line_start":1777,"line_end":1777,"column_start":12,"column_end":24},"name":"BoolVector2D","qualname":"::vector::BoolVector2D","value":"BoolVector2D { x, y }","parent":null,"children":[{"krate":0,"index":4683},{"krate":0,"index":4684}],"decl_id":null,"docs":" A 2d vector of booleans, useful for component-wise logic operations.\n","sig":null,"attributes":[{"value":"/ A 2d vector of booleans, useful for component-wise logic operations.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":437853,"byte_end":437925,"line_start":1775,"line_end":1775,"column_start":1,"column_end":73}}]},{"kind":"Field","id":{"krate":0,"index":4683},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":438011,"byte_end":438012,"line_start":1778,"line_end":1778,"column_start":9,"column_end":10},"name":"x","qualname":"::vector::BoolVector2D::x","value":"bool","parent":{"krate":0,"index":4682},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4684},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":438028,"byte_end":438029,"line_start":1779,"line_end":1779,"column_start":9,"column_end":10},"name":"y","qualname":"::vector::BoolVector2D::y","value":"bool","parent":{"krate":0,"index":4682},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4700},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":438175,"byte_end":438187,"line_start":1784,"line_end":1784,"column_start":12,"column_end":24},"name":"BoolVector3D","qualname":"::vector::BoolVector3D","value":"BoolVector3D { x, y, z }","parent":null,"children":[{"krate":0,"index":4701},{"krate":0,"index":4702},{"krate":0,"index":4703}],"decl_id":null,"docs":" A 3d vector of booleans, useful for component-wise logic operations.\n","sig":null,"attributes":[{"value":"/ A 3d vector of booleans, useful for component-wise logic operations.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":438040,"byte_end":438112,"line_start":1782,"line_end":1782,"column_start":1,"column_end":73}}]},{"kind":"Field","id":{"krate":0,"index":4701},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":438198,"byte_end":438199,"line_start":1785,"line_end":1785,"column_start":9,"column_end":10},"name":"x","qualname":"::vector::BoolVector3D::x","value":"bool","parent":{"krate":0,"index":4700},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4702},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":438215,"byte_end":438216,"line_start":1786,"line_end":1786,"column_start":9,"column_end":10},"name":"y","qualname":"::vector::BoolVector3D::y","value":"bool","parent":{"krate":0,"index":4700},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4703},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":438232,"byte_end":438233,"line_start":1787,"line_end":1787,"column_start":9,"column_end":10},"name":"z","qualname":"::vector::BoolVector3D::z","value":"bool","parent":{"krate":0,"index":4700},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4433},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":438364,"byte_end":438367,"line_start":1793,"line_end":1793,"column_start":12,"column_end":15},"name":"all","qualname":"<BoolVector2D>::all","value":"pub fn all(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if all components are `true` and `false` otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `true` if all components are `true` and `false` otherwise.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":438268,"byte_end":438338,"line_start":1791,"line_end":1791,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":438343,"byte_end":438352,"line_start":1792,"line_end":1792,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4434},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":438515,"byte_end":438518,"line_start":1799,"line_end":1799,"column_start":12,"column_end":15},"name":"any","qualname":"<BoolVector2D>::any","value":"pub fn any(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if any component are `true` and `false` otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `true` if any component are `true` and `false` otherwise.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":438420,"byte_end":438489,"line_start":1797,"line_end":1797,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":438494,"byte_end":438503,"line_start":1798,"line_end":1798,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4435},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":438689,"byte_end":438693,"line_start":1805,"line_end":1805,"column_start":12,"column_end":16},"name":"none","qualname":"<BoolVector2D>::none","value":"pub fn none(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if all components are `false` and `false` otherwise. Negation of `any()`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if all components are `false` and `false` otherwise. Negation of `any()`.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":438571,"byte_end":438663,"line_start":1803,"line_end":1803,"column_start":5,"column_end":97}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":438668,"byte_end":438677,"line_start":1804,"line_end":1804,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4436},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":438830,"byte_end":438833,"line_start":1811,"line_end":1811,"column_start":12,"column_end":15},"name":"and","qualname":"<BoolVector2D>::and","value":"pub fn and(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns new vector with by-component AND operation applied.\n","sig":null,"attributes":[{"value":"/ Returns new vector with by-component AND operation applied.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":438741,"byte_end":438804,"line_start":1809,"line_end":1809,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":438809,"byte_end":438818,"line_start":1810,"line_end":1810,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4437},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":439063,"byte_end":439065,"line_start":1820,"line_end":1820,"column_start":12,"column_end":14},"name":"or","qualname":"<BoolVector2D>::or","value":"pub fn or(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns new vector with by-component OR operation applied.\n","sig":null,"attributes":[{"value":"/ Returns new vector with by-component OR operation applied.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":438975,"byte_end":439037,"line_start":1818,"line_end":1818,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":439042,"byte_end":439051,"line_start":1819,"line_end":1819,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4438},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":439309,"byte_end":439312,"line_start":1829,"line_end":1829,"column_start":12,"column_end":15},"name":"not","qualname":"<BoolVector2D>::not","value":"pub fn not(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns new vector with results of negation operation on each component.\n","sig":null,"attributes":[{"value":"/ Returns new vector with results of negation operation on each component.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":439207,"byte_end":439283,"line_start":1827,"line_end":1827,"column_start":5,"column_end":81}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":439288,"byte_end":439297,"line_start":1828,"line_end":1828,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4439},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":439634,"byte_end":439646,"line_start":1839,"line_end":1839,"column_start":12,"column_end":24},"name":"select_point","qualname":"<BoolVector2D>::select_point","value":"pub fn select_point<T, U>(Self, Point2D<T, U>, Point2D<T, U>) -> Point2D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Returns point, each component of which or from `a`, or from `b` depending on truly value\n of corresponding vector component. `true` selects value from `a` and `false` from `b`.\n","sig":null,"attributes":[{"value":"/ Returns point, each component of which or from `a`, or from `b` depending on truly value","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":439421,"byte_end":439513,"line_start":1836,"line_end":1836,"column_start":5,"column_end":97}},{"value":"/ of corresponding vector component. `true` selects value from `a` and `false` from `b`.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":439518,"byte_end":439608,"line_start":1837,"line_end":1837,"column_start":5,"column_end":95}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":439613,"byte_end":439622,"line_start":1838,"line_end":1838,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4442},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":440053,"byte_end":440066,"line_start":1849,"line_end":1849,"column_start":12,"column_end":25},"name":"select_vector","qualname":"<BoolVector2D>::select_vector","value":"pub fn select_vector<T, U>(Self, Vector2D<T, U>, Vector2D<T, U>)\n-> Vector2D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Returns vector, each component of which or from `a`, or from `b` depending on truly value\n of corresponding vector component. `true` selects value from `a` and `false` from `b`.\n","sig":null,"attributes":[{"value":"/ Returns vector, each component of which or from `a`, or from `b` depending on truly value","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":439839,"byte_end":439932,"line_start":1846,"line_end":1846,"column_start":5,"column_end":98}},{"value":"/ of corresponding vector component. `true` selects value from `a` and `false` from `b`.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":439937,"byte_end":440027,"line_start":1847,"line_end":1847,"column_start":5,"column_end":95}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":440032,"byte_end":440041,"line_start":1848,"line_end":1848,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4445},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":440472,"byte_end":440483,"line_start":1859,"line_end":1859,"column_start":12,"column_end":23},"name":"select_size","qualname":"<BoolVector2D>::select_size","value":"pub fn select_size<T, U>(Self, Size2D<T, U>, Size2D<T, U>) -> Size2D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Returns size, each component of which or from `a`, or from `b` depending on truly value\n of corresponding vector component. `true` selects value from `a` and `false` from `b`.\n","sig":null,"attributes":[{"value":"/ Returns size, each component of which or from `a`, or from `b` depending on truly value","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":440260,"byte_end":440351,"line_start":1856,"line_end":1856,"column_start":5,"column_end":96}},{"value":"/ of corresponding vector component. `true` selects value from `a` and `false` from `b`.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":440356,"byte_end":440446,"line_start":1857,"line_end":1857,"column_start":5,"column_end":95}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":440451,"byte_end":440460,"line_start":1858,"line_end":1858,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4449},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":440808,"byte_end":440811,"line_start":1870,"line_end":1870,"column_start":12,"column_end":15},"name":"all","qualname":"<BoolVector3D>::all","value":"pub fn all(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if all components are `true` and `false` otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `true` if all components are `true` and `false` otherwise.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":440712,"byte_end":440782,"line_start":1868,"line_end":1868,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":440787,"byte_end":440796,"line_start":1869,"line_end":1869,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4450},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":440969,"byte_end":440972,"line_start":1876,"line_end":1876,"column_start":12,"column_end":15},"name":"any","qualname":"<BoolVector3D>::any","value":"pub fn any(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if any component are `true` and `false` otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `true` if any component are `true` and `false` otherwise.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":440874,"byte_end":440943,"line_start":1874,"line_end":1874,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":440948,"byte_end":440957,"line_start":1875,"line_end":1875,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4451},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":441153,"byte_end":441157,"line_start":1882,"line_end":1882,"column_start":12,"column_end":16},"name":"none","qualname":"<BoolVector3D>::none","value":"pub fn none(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if all components are `false` and `false` otherwise. Negation of `any()`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if all components are `false` and `false` otherwise. Negation of `any()`.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":441035,"byte_end":441127,"line_start":1880,"line_end":1880,"column_start":5,"column_end":97}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":441132,"byte_end":441141,"line_start":1881,"line_end":1881,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4452},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":441294,"byte_end":441297,"line_start":1888,"line_end":1888,"column_start":12,"column_end":15},"name":"and","qualname":"<BoolVector3D>::and","value":"pub fn and(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns new vector with by-component AND operation applied.\n","sig":null,"attributes":[{"value":"/ Returns new vector with by-component AND operation applied.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":441205,"byte_end":441268,"line_start":1886,"line_end":1886,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":441273,"byte_end":441282,"line_start":1887,"line_end":1887,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4453},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":441561,"byte_end":441563,"line_start":1898,"line_end":1898,"column_start":12,"column_end":14},"name":"or","qualname":"<BoolVector3D>::or","value":"pub fn or(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns new vector with by-component OR operation applied.\n","sig":null,"attributes":[{"value":"/ Returns new vector with by-component OR operation applied.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":441473,"byte_end":441535,"line_start":1896,"line_end":1896,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":441540,"byte_end":441549,"line_start":1897,"line_end":1897,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4454},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":441841,"byte_end":441844,"line_start":1908,"line_end":1908,"column_start":12,"column_end":15},"name":"not","qualname":"<BoolVector3D>::not","value":"pub fn not(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns new vector with results of negation operation on each component.\n","sig":null,"attributes":[{"value":"/ Returns new vector with results of negation operation on each component.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":441739,"byte_end":441815,"line_start":1906,"line_end":1906,"column_start":5,"column_end":81}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":441820,"byte_end":441829,"line_start":1907,"line_end":1907,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4455},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":442190,"byte_end":442202,"line_start":1919,"line_end":1919,"column_start":12,"column_end":24},"name":"select_point","qualname":"<BoolVector3D>::select_point","value":"pub fn select_point<T, U>(Self, Point3D<T, U>, Point3D<T, U>) -> Point3D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Returns point, each component of which or from `a`, or from `b` depending on truly value\n of corresponding vector component. `true` selects value from `a` and `false` from `b`.\n","sig":null,"attributes":[{"value":"/ Returns point, each component of which or from `a`, or from `b` depending on truly value","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":441977,"byte_end":442069,"line_start":1916,"line_end":1916,"column_start":5,"column_end":97}},{"value":"/ of corresponding vector component. `true` selects value from `a` and `false` from `b`.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":442074,"byte_end":442164,"line_start":1917,"line_end":1917,"column_start":5,"column_end":95}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":442169,"byte_end":442178,"line_start":1918,"line_end":1918,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4458},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":442653,"byte_end":442666,"line_start":1930,"line_end":1930,"column_start":12,"column_end":25},"name":"select_vector","qualname":"<BoolVector3D>::select_vector","value":"pub fn select_vector<T, U>(Self, Vector3D<T, U>, Vector3D<T, U>)\n-> Vector3D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Returns vector, each component of which or from `a`, or from `b` depending on truly value\n of corresponding vector component. `true` selects value from `a` and `false` from `b`.\n","sig":null,"attributes":[{"value":"/ Returns vector, each component of which or from `a`, or from `b` depending on truly value","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":442439,"byte_end":442532,"line_start":1927,"line_end":1927,"column_start":5,"column_end":98}},{"value":"/ of corresponding vector component. `true` selects value from `a` and `false` from `b`.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":442537,"byte_end":442627,"line_start":1928,"line_end":1928,"column_start":5,"column_end":95}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":442632,"byte_end":442641,"line_start":1929,"line_end":1929,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4461},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":443132,"byte_end":443143,"line_start":1942,"line_end":1942,"column_start":12,"column_end":23},"name":"select_size","qualname":"<BoolVector3D>::select_size","value":"pub fn select_size<T, U>(Self, Size3D<T, U>, Size3D<T, U>) -> Size3D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Returns size, each component of which or from `a`, or from `b` depending on truly value\n of corresponding vector component. `true` selects value from `a` and `false` from `b`.\n","sig":null,"attributes":[{"value":"/ Returns size, each component of which or from `a`, or from `b` depending on truly value","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":442904,"byte_end":442995,"line_start":1938,"line_end":1938,"column_start":5,"column_end":96}},{"value":"/ of corresponding vector component. `true` selects value from `a` and `false` from `b`.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":443000,"byte_end":443090,"line_start":1939,"line_end":1939,"column_start":5,"column_end":95}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":443095,"byte_end":443104,"line_start":1940,"line_end":1940,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":443109,"byte_end":443120,"line_start":1941,"line_end":1941,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4464},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":443492,"byte_end":443494,"line_start":1952,"line_end":1952,"column_start":12,"column_end":14},"name":"xy","qualname":"<BoolVector3D>::xy","value":"pub fn xy(Self) -> BoolVector2D","parent":null,"children":[],"decl_id":null,"docs":" Returns a 2d vector using this vector's x and y coordinates.\n","sig":null,"attributes":[{"value":"/ Returns a 2d vector using this vector's x and y coordinates.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":443402,"byte_end":443466,"line_start":1950,"line_end":1950,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":443471,"byte_end":443480,"line_start":1951,"line_end":1951,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4465},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":443699,"byte_end":443701,"line_start":1961,"line_end":1961,"column_start":12,"column_end":14},"name":"xz","qualname":"<BoolVector3D>::xz","value":"pub fn xz(Self) -> BoolVector2D","parent":null,"children":[],"decl_id":null,"docs":" Returns a 2d vector using this vector's x and z coordinates.\n","sig":null,"attributes":[{"value":"/ Returns a 2d vector using this vector's x and z coordinates.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":443609,"byte_end":443673,"line_start":1959,"line_end":1959,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":443678,"byte_end":443687,"line_start":1960,"line_end":1960,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4466},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":443906,"byte_end":443908,"line_start":1970,"line_end":1970,"column_start":12,"column_end":14},"name":"yz","qualname":"<BoolVector3D>::yz","value":"pub fn yz(Self) -> BoolVector2D","parent":null,"children":[],"decl_id":null,"docs":" Returns a 2d vector using this vector's y and z coordinates.\n","sig":null,"attributes":[{"value":"/ Returns a 2d vector using this vector's y and z coordinates.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":443816,"byte_end":443880,"line_start":1968,"line_end":1968,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":443885,"byte_end":443894,"line_start":1969,"line_end":1969,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":4467},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":444073,"byte_end":444077,"line_start":1980,"line_end":1980,"column_start":14,"column_end":18},"name":"vec2","qualname":"::vector::vec2","value":"pub const fn vec2<T, U>(T, T) -> Vector2D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Convenience constructor.\n","sig":null,"attributes":[{"value":"/ Convenience constructor.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":444021,"byte_end":444049,"line_start":1978,"line_end":1978,"column_start":1,"column_end":29}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":444050,"byte_end":444059,"line_start":1979,"line_end":1979,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":4470},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":444242,"byte_end":444246,"line_start":1990,"line_end":1990,"column_start":14,"column_end":18},"name":"vec3","qualname":"::vector::vec3","value":"pub const fn vec3<T, U>(T, T, T) -> Vector3D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Convenience constructor.\n","sig":null,"attributes":[{"value":"/ Convenience constructor.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":444190,"byte_end":444218,"line_start":1988,"line_end":1988,"column_start":1,"column_end":29}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":444219,"byte_end":444228,"line_start":1989,"line_end":1989,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":4473},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":444442,"byte_end":444447,"line_start":2001,"line_end":2001,"column_start":14,"column_end":19},"name":"bvec2","qualname":"::vector::bvec2","value":"pub const fn bvec2(bool, bool) -> BoolVector2D","parent":null,"children":[],"decl_id":null,"docs":" Shorthand for `BoolVector2D { x, y }`.\n","sig":null,"attributes":[{"value":"/ Shorthand for `BoolVector2D { x, y }`.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":444376,"byte_end":444418,"line_start":1999,"line_end":1999,"column_start":1,"column_end":43}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":444419,"byte_end":444428,"line_start":2000,"line_end":2000,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":4474},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":444582,"byte_end":444587,"line_start":2007,"line_end":2007,"column_start":14,"column_end":19},"name":"bvec3","qualname":"::vector::bvec3","value":"pub const fn bvec3(bool, bool, bool) -> BoolVector3D","parent":null,"children":[],"decl_id":null,"docs":" Shorthand for `BoolVector3D { x, y, z }`.\n","sig":null,"attributes":[{"value":"/ Shorthand for `BoolVector3D { x, y, z }`.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":444513,"byte_end":444558,"line_start":2005,"line_end":2005,"column_start":1,"column_end":46}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":444559,"byte_end":444568,"line_start":2006,"line_end":2006,"column_start":1,"column_end":10}}]},{"kind":"Struct","id":{"krate":0,"index":4719},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","byte_start":3050,"byte_end":3061,"line_start":89,"line_end":89,"column_start":12,"column_end":23},"name":"UnknownUnit","qualname":"::UnknownUnit","value":"","parent":null,"children":[],"decl_id":null,"docs":" The default unit.\n","sig":null,"attributes":[{"value":"/ The default unit.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","byte_start":2940,"byte_end":2961,"line_start":87,"line_end":87,"column_start":1,"column_end":22}}]},{"kind":"Mod","id":{"krate":0,"index":4475},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","byte_start":3072,"byte_end":3079,"line_start":91,"line_end":91,"column_start":9,"column_end":16},"name":"default","qualname":"::default","value":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":4476},{"krate":0,"index":4477},{"krate":0,"index":4479},{"krate":0,"index":4481},{"krate":0,"index":4483},{"krate":0,"index":4485},{"krate":0,"index":4487},{"krate":0,"index":4489},{"krate":0,"index":4491},{"krate":0,"index":4493},{"krate":0,"index":4495},{"krate":0,"index":4497},{"krate":0,"index":4499},{"krate":0,"index":4501},{"krate":0,"index":4503},{"krate":0,"index":4505},{"krate":0,"index":4507},{"krate":0,"index":4509},{"krate":0,"index":4511},{"krate":0,"index":4513},{"krate":0,"index":4515},{"krate":0,"index":4517}],"decl_id":null,"docs":" A set of aliases for all types, tagged with the default unknown unit.\n","sig":null,"attributes":[{"value":"/ A set of aliases for all types, tagged with the default unknown unit.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","byte_start":3086,"byte_end":3159,"line_start":92,"line_end":92,"column_start":5,"column_end":78}}]},{"kind":"Type","id":{"krate":0,"index":4479},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","byte_start":3202,"byte_end":3208,"line_start":95,"line_end":95,"column_start":14,"column_end":20},"name":"Length","qualname":"::default::Length","value":"super::Length<T, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4481},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","byte_start":3258,"byte_end":3265,"line_start":96,"line_end":96,"column_start":14,"column_end":21},"name":"Point2D","qualname":"::default::Point2D","value":"super::Point2D<T, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4483},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","byte_start":3316,"byte_end":3323,"line_start":97,"line_end":97,"column_start":14,"column_end":21},"name":"Point3D","qualname":"::default::Point3D","value":"super::Point3D<T, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4485},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","byte_start":3374,"byte_end":3382,"line_start":98,"line_end":98,"column_start":14,"column_end":22},"name":"Vector2D","qualname":"::default::Vector2D","value":"super::Vector2D<T, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4487},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","byte_start":3434,"byte_end":3442,"line_start":99,"line_end":99,"column_start":14,"column_end":22},"name":"Vector3D","qualname":"::default::Vector3D","value":"super::Vector3D<T, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4489},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","byte_start":3494,"byte_end":3511,"line_start":100,"line_end":100,"column_start":14,"column_end":31},"name":"HomogeneousVector","qualname":"::default::HomogeneousVector","value":"super::HomogeneousVector<T, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4491},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","byte_start":3572,"byte_end":3578,"line_start":101,"line_end":101,"column_start":14,"column_end":20},"name":"Size2D","qualname":"::default::Size2D","value":"super::Size2D<T, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4493},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","byte_start":3628,"byte_end":3634,"line_start":102,"line_end":102,"column_start":14,"column_end":20},"name":"Size3D","qualname":"::default::Size3D","value":"super::Size3D<T, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4495},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","byte_start":3684,"byte_end":3688,"line_start":103,"line_end":103,"column_start":14,"column_end":18},"name":"Rect","qualname":"::default::Rect","value":"super::Rect<T, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4497},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","byte_start":3736,"byte_end":3741,"line_start":104,"line_end":104,"column_start":14,"column_end":19},"name":"Box2D","qualname":"::default::Box2D","value":"super::Box2D<T, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4499},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","byte_start":3790,"byte_end":3795,"line_start":105,"line_end":105,"column_start":14,"column_end":19},"name":"Box3D","qualname":"::default::Box3D","value":"super::Box3D<T, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4501},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","byte_start":3844,"byte_end":3857,"line_start":106,"line_end":106,"column_start":14,"column_end":27},"name":"SideOffsets2D","qualname":"::default::SideOffsets2D","value":"super::SideOffsets2D<T, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4503},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","byte_start":3914,"byte_end":3925,"line_start":107,"line_end":107,"column_start":14,"column_end":25},"name":"Transform2D","qualname":"::default::Transform2D","value":"super::Transform2D<T, UnknownUnit, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4505},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","byte_start":3993,"byte_end":4004,"line_start":108,"line_end":108,"column_start":14,"column_end":25},"name":"Transform3D","qualname":"::default::Transform3D","value":"super::Transform3D<T, UnknownUnit, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4507},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","byte_start":4072,"byte_end":4082,"line_start":109,"line_end":109,"column_start":14,"column_end":24},"name":"Rotation2D","qualname":"::default::Rotation2D","value":"super::Rotation2D<T, UnknownUnit, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4509},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","byte_start":4149,"byte_end":4159,"line_start":110,"line_end":110,"column_start":14,"column_end":24},"name":"Rotation3D","qualname":"::default::Rotation3D","value":"super::Rotation3D<T, UnknownUnit, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4511},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","byte_start":4226,"byte_end":4239,"line_start":111,"line_end":111,"column_start":14,"column_end":27},"name":"Translation2D","qualname":"::default::Translation2D","value":"super::Translation2D<T, UnknownUnit, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4513},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","byte_start":4309,"byte_end":4322,"line_start":112,"line_end":112,"column_start":14,"column_end":27},"name":"Translation3D","qualname":"::default::Translation3D","value":"super::Translation3D<T, UnknownUnit, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4515},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","byte_start":4392,"byte_end":4397,"line_start":113,"line_end":113,"column_start":14,"column_end":19},"name":"Scale","qualname":"::default::Scale","value":"super::Scale<T, UnknownUnit, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4517},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","byte_start":4459,"byte_end":4475,"line_start":114,"line_end":114,"column_start":14,"column_end":30},"name":"RigidTransform3D","qualname":"::default::RigidTransform3D","value":"super::RigidTransform3D<T, UnknownUnit, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\angle.rs","byte_start":6672,"byte_end":6677,"line_start":28,"line_end":28,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":185},{"krate":0,"index":186}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\angle.rs","byte_start":6851,"byte_end":6856,"line_start":40,"line_end":40,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":189},{"krate":0,"index":190}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\angle.rs","byte_start":7124,"byte_end":7129,"line_start":57,"line_end":57,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":193},{"krate":0,"index":194}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\angle.rs","byte_start":7668,"byte_end":7673,"line_start":77,"line_end":77,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":197},{"krate":0,"index":198}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\angle.rs","byte_start":8358,"byte_end":8363,"line_start":104,"line_end":104,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":201},{"krate":0,"index":202}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\angle.rs","byte_start":8659,"byte_end":8664,"line_start":120,"line_end":120,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":205}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\angle.rs","byte_start":8768,"byte_end":8773,"line_start":129,"line_end":129,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\angle.rs","byte_start":9213,"byte_end":9218,"line_start":154,"line_end":154,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":215},{"krate":0,"index":217},{"krate":0,"index":220},{"krate":0,"index":221}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\angle.rs","byte_start":9933,"byte_end":9938,"line_start":184,"line_end":184,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":224},{"krate":0,"index":225}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\angle.rs","byte_start":10119,"byte_end":10124,"line_start":191,"line_end":191,"column_start":51,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":228},{"krate":0,"index":229}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\angle.rs","byte_start":10284,"byte_end":10289,"line_start":198,"line_end":198,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":232}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\angle.rs","byte_start":10454,"byte_end":10459,"line_start":204,"line_end":204,"column_start":55,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":237}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\angle.rs","byte_start":10610,"byte_end":10615,"line_start":210,"line_end":210,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":241}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\angle.rs","byte_start":10763,"byte_end":10768,"line_start":216,"line_end":216,"column_start":47,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":244},{"krate":0,"index":245}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\angle.rs","byte_start":10961,"byte_end":10966,"line_start":223,"line_end":223,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":248}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\angle.rs","byte_start":11114,"byte_end":11119,"line_start":229,"line_end":229,"column_start":47,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":251},{"krate":0,"index":252}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\angle.rs","byte_start":11286,"byte_end":11291,"line_start":237,"line_end":237,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":255},{"krate":0,"index":256}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\angle.rs","byte_start":11475,"byte_end":11480,"line_start":245,"line_end":245,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":259}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\angle.rs","byte_start":11608,"byte_end":11613,"line_start":251,"line_end":251,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":262},{"krate":0,"index":263}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\angle.rs","byte_start":11797,"byte_end":11802,"line_start":259,"line_end":259,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":266}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\angle.rs","byte_start":11924,"byte_end":11929,"line_start":265,"line_end":265,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":269},{"krate":0,"index":270}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\angle.rs","byte_start":12070,"byte_end":12075,"line_start":272,"line_end":272,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":273},{"krate":0,"index":274}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":19743,"byte_end":19748,"line_start":70,"line_end":70,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":378}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":19887,"byte_end":19892,"line_start":77,"line_end":77,"column_start":27,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":19931,"byte_end":19936,"line_start":79,"line_end":79,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":386}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":20074,"byte_end":20079,"line_start":85,"line_end":85,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":390}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":20219,"byte_end":20224,"line_start":91,"line_end":91,"column_start":23,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":20273,"byte_end":20278,"line_start":93,"line_end":93,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":397}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":20479,"byte_end":20484,"line_start":102,"line_end":102,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":403}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":21129,"byte_end":21134,"line_start":128,"line_end":128,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":407},{"krate":0,"index":408},{"krate":0,"index":409},{"krate":0,"index":410},{"krate":0,"index":411}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":22846,"byte_end":22851,"line_start":177,"line_end":177,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":415},{"krate":0,"index":416},{"krate":0,"index":417},{"krate":0,"index":418}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":24293,"byte_end":24298,"line_start":225,"line_end":225,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":422}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":24583,"byte_end":24588,"line_start":239,"line_end":239,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":426},{"krate":0,"index":427},{"krate":0,"index":428},{"krate":0,"index":429}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":25070,"byte_end":25075,"line_start":267,"line_end":267,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":433},{"krate":0,"index":434},{"krate":0,"index":435}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":26290,"byte_end":26295,"line_start":303,"line_end":303,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":439}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":27292,"byte_end":27297,"line_start":344,"line_end":344,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":444}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":27610,"byte_end":27615,"line_start":355,"line_end":355,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":448}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":27836,"byte_end":27841,"line_start":365,"line_end":365,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":452}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":28040,"byte_end":28045,"line_start":376,"line_end":376,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":456}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":28245,"byte_end":28250,"line_start":386,"line_end":386,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":460},{"krate":0,"index":461}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":28468,"byte_end":28473,"line_start":395,"line_end":395,"column_start":47,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":465}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":28616,"byte_end":28621,"line_start":402,"line_end":402,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":469},{"krate":0,"index":470}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":28839,"byte_end":28844,"line_start":411,"line_end":411,"column_start":47,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":474}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":29007,"byte_end":29012,"line_start":418,"line_end":418,"column_start":55,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":479},{"krate":0,"index":480}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":29260,"byte_end":29265,"line_start":427,"line_end":427,"column_start":60,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":484}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":29459,"byte_end":29464,"line_start":435,"line_end":435,"column_start":55,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":489},{"krate":0,"index":490}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":29712,"byte_end":29717,"line_start":444,"line_end":444,"column_start":60,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":494}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":29868,"byte_end":29873,"line_start":452,"line_end":452,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":498},{"krate":0,"index":499},{"krate":0,"index":500},{"krate":0,"index":501},{"krate":0,"index":502},{"krate":0,"index":504}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":30939,"byte_end":30944,"line_start":496,"line_end":496,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":509},{"krate":0,"index":511},{"krate":0,"index":513},{"krate":0,"index":514},{"krate":0,"index":515},{"krate":0,"index":516},{"krate":0,"index":517},{"krate":0,"index":518}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":33790,"byte_end":33795,"line_start":574,"line_end":574,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":522}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":33976,"byte_end":33981,"line_start":582,"line_end":582,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":526}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":34656,"byte_end":34661,"line_start":601,"line_end":601,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":530},{"krate":0,"index":531}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":35323,"byte_end":35328,"line_start":624,"line_end":624,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":535}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":35483,"byte_end":35488,"line_start":633,"line_end":633,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":539}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":43922,"byte_end":43927,"line_start":40,"line_end":40,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":621}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":44066,"byte_end":44071,"line_start":47,"line_end":47,"column_start":27,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":44110,"byte_end":44115,"line_start":49,"line_end":49,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":629}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":44253,"byte_end":44258,"line_start":55,"line_end":55,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":633}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":44398,"byte_end":44403,"line_start":61,"line_end":61,"column_start":23,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":44452,"byte_end":44457,"line_start":63,"line_end":63,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":640}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":44658,"byte_end":44663,"line_start":72,"line_end":72,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":644},{"krate":0,"index":645}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":45092,"byte_end":45097,"line_start":89,"line_end":89,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":649},{"krate":0,"index":650},{"krate":0,"index":651},{"krate":0,"index":652},{"krate":0,"index":653}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":47123,"byte_end":47128,"line_start":146,"line_end":146,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":657},{"krate":0,"index":658},{"krate":0,"index":659},{"krate":0,"index":660}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":48574,"byte_end":48579,"line_start":204,"line_end":204,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":664}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":48882,"byte_end":48887,"line_start":219,"line_end":219,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":668},{"krate":0,"index":669},{"krate":0,"index":670},{"krate":0,"index":671}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":49406,"byte_end":49411,"line_start":248,"line_end":248,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":675}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":49877,"byte_end":49882,"line_start":263,"line_end":263,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":679}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":51064,"byte_end":51069,"line_start":310,"line_end":310,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":684}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":51386,"byte_end":51391,"line_start":321,"line_end":321,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":688}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":51612,"byte_end":51617,"line_start":331,"line_end":331,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":692},{"krate":0,"index":693},{"krate":0,"index":694},{"krate":0,"index":695}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":52187,"byte_end":52192,"line_start":360,"line_end":360,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":699}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":52392,"byte_end":52397,"line_start":370,"line_end":370,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":703},{"krate":0,"index":704}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":52615,"byte_end":52620,"line_start":379,"line_end":379,"column_start":47,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":708}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":52781,"byte_end":52786,"line_start":387,"line_end":387,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":712},{"krate":0,"index":713}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":53012,"byte_end":53017,"line_start":396,"line_end":396,"column_start":47,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":717}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":53198,"byte_end":53203,"line_start":404,"line_end":404,"column_start":55,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":722},{"krate":0,"index":723}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":53459,"byte_end":53464,"line_start":413,"line_end":413,"column_start":60,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":727}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":53666,"byte_end":53671,"line_start":421,"line_end":421,"column_start":55,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":732},{"krate":0,"index":733}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":53927,"byte_end":53932,"line_start":430,"line_end":430,"column_start":60,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":737}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":54091,"byte_end":54096,"line_start":438,"line_end":438,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":741},{"krate":0,"index":742},{"krate":0,"index":743},{"krate":0,"index":744},{"krate":0,"index":745},{"krate":0,"index":746},{"krate":0,"index":748}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":55380,"byte_end":55385,"line_start":493,"line_end":493,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":753},{"krate":0,"index":755},{"krate":0,"index":757},{"krate":0,"index":758},{"krate":0,"index":759},{"krate":0,"index":760},{"krate":0,"index":761},{"krate":0,"index":762}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":58251,"byte_end":58256,"line_start":571,"line_end":571,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":766}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":58437,"byte_end":58442,"line_start":579,"line_end":579,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":770}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":59121,"byte_end":59126,"line_start":598,"line_end":598,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":774},{"krate":0,"index":775}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":59794,"byte_end":59799,"line_start":623,"line_end":623,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":779}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":59954,"byte_end":59959,"line_start":632,"line_end":632,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":783}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\homogen.rs","byte_start":70216,"byte_end":70233,"line_start":34,"line_end":34,"column_start":27,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\homogen.rs","byte_start":70272,"byte_end":70289,"line_start":36,"line_end":36,"column_start":29,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":842}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\homogen.rs","byte_start":71325,"byte_end":71342,"line_start":81,"line_end":81,"column_start":19,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\homogen.rs","byte_start":71390,"byte_end":71407,"line_start":83,"line_end":83,"column_start":26,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":849}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\homogen.rs","byte_start":71599,"byte_end":71616,"line_start":92,"line_end":92,"column_start":21,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":853}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\homogen.rs","byte_start":71815,"byte_end":71832,"line_start":104,"line_end":104,"column_start":12,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":858}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\homogen.rs","byte_start":72158,"byte_end":72175,"line_start":118,"line_end":118,"column_start":59,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":862},{"krate":0,"index":863}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\homogen.rs","byte_start":72980,"byte_end":72997,"line_start":148,"line_end":148,"column_start":43,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":867}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\homogen.rs","byte_start":73175,"byte_end":73192,"line_start":155,"line_end":155,"column_start":43,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":871}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\homogen.rs","byte_start":73369,"byte_end":73386,"line_start":162,"line_end":162,"column_start":48,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":875}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\homogen.rs","byte_start":73560,"byte_end":73577,"line_start":169,"line_end":169,"column_start":41,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":879}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\homogen.rs","byte_start":73743,"byte_end":73760,"line_start":176,"line_end":176,"column_start":39,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":883}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":76500,"byte_end":76506,"line_start":44,"line_end":44,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":968}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":76624,"byte_end":76630,"line_start":50,"line_end":50,"column_start":27,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":77198,"byte_end":77204,"line_start":78,"line_end":78,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":975}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":77372,"byte_end":77378,"line_start":86,"line_end":86,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":979},{"krate":0,"index":980},{"krate":0,"index":982}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":78447,"byte_end":78453,"line_start":124,"line_end":124,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":986},{"krate":0,"index":987}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":78800,"byte_end":78806,"line_start":138,"line_end":138,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":991},{"krate":0,"index":993}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":79258,"byte_end":79264,"line_start":151,"line_end":151,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":998}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":79395,"byte_end":79401,"line_start":157,"line_end":157,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1002}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":79526,"byte_end":79532,"line_start":164,"line_end":164,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1006}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":79660,"byte_end":79666,"line_start":171,"line_end":171,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1011},{"krate":0,"index":1012}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":79869,"byte_end":79875,"line_start":180,"line_end":180,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1016},{"krate":0,"index":1017}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":80094,"byte_end":80100,"line_start":189,"line_end":189,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1021}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":80308,"byte_end":80314,"line_start":196,"line_end":196,"column_start":74,"column_end":80},"value":"","parent":null,"children":[{"krate":0,"index":1027}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":80488,"byte_end":80494,"line_start":203,"line_end":203,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1032}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":80626,"byte_end":80632,"line_start":210,"line_end":210,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1036},{"krate":0,"index":1037}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":80841,"byte_end":80847,"line_start":219,"line_end":219,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1041}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":81025,"byte_end":81031,"line_start":226,"line_end":226,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1045},{"krate":0,"index":1046}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":81328,"byte_end":81334,"line_start":237,"line_end":237,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1051},{"krate":0,"index":1052}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":81556,"byte_end":81562,"line_start":247,"line_end":247,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1056},{"krate":0,"index":1057}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":81791,"byte_end":81797,"line_start":257,"line_end":257,"column_start":56,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1061}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":81946,"byte_end":81952,"line_start":265,"line_end":265,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1065},{"krate":0,"index":1066}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":82181,"byte_end":82187,"line_start":275,"line_end":275,"column_start":56,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1070}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":82365,"byte_end":82371,"line_start":283,"line_end":283,"column_start":52,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1075},{"krate":0,"index":1076}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":82623,"byte_end":82629,"line_start":293,"line_end":293,"column_start":52,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1081},{"krate":0,"index":1082}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":82841,"byte_end":82847,"line_start":303,"line_end":303,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1086},{"krate":0,"index":1087}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":83020,"byte_end":83026,"line_start":312,"line_end":312,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1091}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":83151,"byte_end":83157,"line_start":318,"line_end":318,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1095}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":83296,"byte_end":83302,"line_start":324,"line_end":324,"column_start":23,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":83337,"byte_end":83343,"line_start":326,"line_end":326,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1102}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":83462,"byte_end":83468,"line_start":332,"line_end":332,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1106}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":83598,"byte_end":83604,"line_start":339,"line_end":339,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1110},{"krate":0,"index":1111}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\num.rs","byte_start":92367,"byte_end":92368,"line_start":32,"line_end":32,"column_start":36,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1120}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\num.rs","byte_start":92508,"byte_end":92509,"line_start":42,"line_end":42,"column_start":34,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1125}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":95723,"byte_end":95730,"line_start":38,"line_end":38,"column_start":27,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":95769,"byte_end":95776,"line_start":40,"line_end":40,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1238}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":97032,"byte_end":97039,"line_start":96,"line_end":96,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":97087,"byte_end":97094,"line_start":98,"line_end":98,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1245}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":97244,"byte_end":97251,"line_start":107,"line_end":107,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1249}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":97465,"byte_end":97472,"line_start":119,"line_end":119,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1254}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":97646,"byte_end":97653,"line_start":125,"line_end":125,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1258}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":97770,"byte_end":97777,"line_start":131,"line_end":131,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1262},{"krate":0,"index":1263},{"krate":0,"index":1264},{"krate":0,"index":1265},{"krate":0,"index":1266},{"krate":0,"index":1267}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":98926,"byte_end":98933,"line_start":186,"line_end":186,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1271},{"krate":0,"index":1272},{"krate":0,"index":1273},{"krate":0,"index":1274},{"krate":0,"index":1275},{"krate":0,"index":1277},{"krate":0,"index":1279},{"krate":0,"index":1280},{"krate":0,"index":1281},{"krate":0,"index":1282},{"krate":0,"index":1283},{"krate":0,"index":1284}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":103995,"byte_end":104002,"line_start":386,"line_end":386,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1288},{"krate":0,"index":1289},{"krate":0,"index":1290}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":104603,"byte_end":104610,"line_start":410,"line_end":410,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1294},{"krate":0,"index":1296},{"krate":0,"index":1298},{"krate":0,"index":1299},{"krate":0,"index":1300},{"krate":0,"index":1301},{"krate":0,"index":1302},{"krate":0,"index":1303}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":107424,"byte_end":107431,"line_start":488,"line_end":488,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1307}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":107635,"byte_end":107642,"line_start":496,"line_end":496,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1311}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":107831,"byte_end":107838,"line_start":503,"line_end":503,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1315}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":107975,"byte_end":107982,"line_start":510,"line_end":510,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1319},{"krate":0,"index":1320}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":108162,"byte_end":108169,"line_start":519,"line_end":519,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1324},{"krate":0,"index":1325}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":108409,"byte_end":108416,"line_start":528,"line_end":528,"column_start":51,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1329}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":108603,"byte_end":108610,"line_start":536,"line_end":536,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1333},{"krate":0,"index":1334}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":108861,"byte_end":108868,"line_start":545,"line_end":545,"column_start":69,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":1338}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":109008,"byte_end":109015,"line_start":552,"line_end":552,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1342},{"krate":0,"index":1343}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":109225,"byte_end":109232,"line_start":561,"line_end":561,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1347},{"krate":0,"index":1348}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":109472,"byte_end":109479,"line_start":570,"line_end":570,"column_start":51,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1352}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":109666,"byte_end":109673,"line_start":578,"line_end":578,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1356},{"krate":0,"index":1357}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":109924,"byte_end":109931,"line_start":587,"line_end":587,"column_start":69,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":1361}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":110081,"byte_end":110088,"line_start":594,"line_end":594,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1365},{"krate":0,"index":1366}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":110309,"byte_end":110316,"line_start":603,"line_end":603,"column_start":56,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":1370}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":110473,"byte_end":110480,"line_start":610,"line_end":610,"column_start":55,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1375},{"krate":0,"index":1376}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":110726,"byte_end":110733,"line_start":619,"line_end":619,"column_start":60,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":1380}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":110907,"byte_end":110914,"line_start":627,"line_end":627,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1384},{"krate":0,"index":1385}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":111135,"byte_end":111142,"line_start":636,"line_end":636,"column_start":56,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":1389}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":111299,"byte_end":111306,"line_start":643,"line_end":643,"column_start":55,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1394},{"krate":0,"index":1395}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":111552,"byte_end":111559,"line_start":652,"line_end":652,"column_start":60,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":1399}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":111725,"byte_end":111732,"line_start":660,"line_end":660,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1403}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":111839,"byte_end":111846,"line_start":667,"line_end":667,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1407}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":112000,"byte_end":112007,"line_start":675,"line_end":675,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1411}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":112159,"byte_end":112166,"line_start":683,"line_end":683,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1415}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":112346,"byte_end":112353,"line_start":691,"line_end":691,"column_start":53,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1419},{"krate":0,"index":1420}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":112678,"byte_end":112685,"line_start":703,"line_end":703,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1425}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":112786,"byte_end":112793,"line_start":709,"line_end":709,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1431}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":112898,"byte_end":112905,"line_start":715,"line_end":715,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1436}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":113006,"byte_end":113013,"line_start":721,"line_end":721,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1440}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":113334,"byte_end":113341,"line_start":739,"line_end":739,"column_start":27,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":113380,"byte_end":113387,"line_start":741,"line_end":741,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1454}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":114325,"byte_end":114332,"line_start":784,"line_end":784,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":114380,"byte_end":114387,"line_start":786,"line_end":786,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1461}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":114558,"byte_end":114565,"line_start":795,"line_end":795,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1465}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":114767,"byte_end":114774,"line_start":806,"line_end":806,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1470}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":115015,"byte_end":115022,"line_start":816,"line_end":816,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1474}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":115159,"byte_end":115166,"line_start":822,"line_end":822,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1478},{"krate":0,"index":1479},{"krate":0,"index":1480},{"krate":0,"index":1481},{"krate":0,"index":1482},{"krate":0,"index":1483}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":116403,"byte_end":116410,"line_start":879,"line_end":879,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1487},{"krate":0,"index":1488},{"krate":0,"index":1489},{"krate":0,"index":1490},{"krate":0,"index":1491},{"krate":0,"index":1493},{"krate":0,"index":1495},{"krate":0,"index":1496},{"krate":0,"index":1497},{"krate":0,"index":1498},{"krate":0,"index":1500},{"krate":0,"index":1501},{"krate":0,"index":1502},{"krate":0,"index":1503},{"krate":0,"index":1504}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":122001,"byte_end":122008,"line_start":1094,"line_end":1094,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1508},{"krate":0,"index":1509},{"krate":0,"index":1510}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":122747,"byte_end":122754,"line_start":1126,"line_end":1126,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1514},{"krate":0,"index":1516},{"krate":0,"index":1518},{"krate":0,"index":1519},{"krate":0,"index":1520},{"krate":0,"index":1521},{"krate":0,"index":1522},{"krate":0,"index":1523}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":125654,"byte_end":125661,"line_start":1208,"line_end":1208,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1527}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":125887,"byte_end":125894,"line_start":1216,"line_end":1216,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1531}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":126151,"byte_end":126158,"line_start":1227,"line_end":1227,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1535}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":126295,"byte_end":126302,"line_start":1234,"line_end":1234,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1539},{"krate":0,"index":1540}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":126491,"byte_end":126498,"line_start":1243,"line_end":1243,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1544},{"krate":0,"index":1545}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":126807,"byte_end":126814,"line_start":1256,"line_end":1256,"column_start":51,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1549}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":127032,"byte_end":127039,"line_start":1265,"line_end":1265,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1553},{"krate":0,"index":1554}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":127308,"byte_end":127315,"line_start":1274,"line_end":1274,"column_start":69,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":1558}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":127455,"byte_end":127462,"line_start":1281,"line_end":1281,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1562},{"krate":0,"index":1563}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":127690,"byte_end":127697,"line_start":1290,"line_end":1290,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1567},{"krate":0,"index":1568}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":128006,"byte_end":128013,"line_start":1303,"line_end":1303,"column_start":51,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1572}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":128231,"byte_end":128238,"line_start":1312,"line_end":1312,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1576},{"krate":0,"index":1577}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":128507,"byte_end":128514,"line_start":1321,"line_end":1321,"column_start":69,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":1581}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":128664,"byte_end":128671,"line_start":1328,"line_end":1328,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1585},{"krate":0,"index":1586}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":128946,"byte_end":128953,"line_start":1341,"line_end":1341,"column_start":47,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1590}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":129155,"byte_end":129162,"line_start":1350,"line_end":1350,"column_start":55,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1595},{"krate":0,"index":1596}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":129473,"byte_end":129480,"line_start":1363,"line_end":1363,"column_start":60,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":1600}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":129626,"byte_end":129633,"line_start":1370,"line_end":1370,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1604},{"krate":0,"index":1605}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":129908,"byte_end":129915,"line_start":1383,"line_end":1383,"column_start":47,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1609}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":130117,"byte_end":130124,"line_start":1392,"line_end":1392,"column_start":55,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1614},{"krate":0,"index":1615}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":130435,"byte_end":130442,"line_start":1405,"line_end":1405,"column_start":60,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":1619}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":130580,"byte_end":130587,"line_start":1412,"line_end":1412,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1623}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":130694,"byte_end":130701,"line_start":1419,"line_end":1419,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1627}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":130855,"byte_end":130862,"line_start":1427,"line_end":1427,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1631}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":131014,"byte_end":131021,"line_start":1435,"line_end":1435,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1635}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":131201,"byte_end":131208,"line_start":1443,"line_end":1443,"column_start":53,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1639},{"krate":0,"index":1640}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":131667,"byte_end":131674,"line_start":1461,"line_end":1461,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1645}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":131783,"byte_end":131790,"line_start":1467,"line_end":1467,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1651}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":131904,"byte_end":131911,"line_start":1473,"line_end":1473,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1656}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":132026,"byte_end":132033,"line_start":1479,"line_end":1479,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1660}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":147735,"byte_end":147739,"line_start":72,"line_end":72,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1743}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":147882,"byte_end":147886,"line_start":79,"line_end":79,"column_start":27,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":147925,"byte_end":147929,"line_start":81,"line_end":81,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1751}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":148071,"byte_end":148075,"line_start":87,"line_end":87,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1755}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":148223,"byte_end":148227,"line_start":93,"line_end":93,"column_start":23,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":148276,"byte_end":148280,"line_start":95,"line_end":95,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1762}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":148553,"byte_end":148557,"line_start":105,"line_end":105,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1766}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":148671,"byte_end":148675,"line_start":111,"line_end":111,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1770}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":148843,"byte_end":148847,"line_start":119,"line_end":119,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1774},{"krate":0,"index":1775}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":149248,"byte_end":149252,"line_start":139,"line_end":139,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1779},{"krate":0,"index":1780},{"krate":0,"index":1781},{"krate":0,"index":1782},{"krate":0,"index":1783},{"krate":0,"index":1784},{"krate":0,"index":1785},{"krate":0,"index":1786},{"krate":0,"index":1787},{"krate":0,"index":1788},{"krate":0,"index":1789},{"krate":0,"index":1790}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":150520,"byte_end":150524,"line_start":209,"line_end":209,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1794},{"krate":0,"index":1795}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":151043,"byte_end":151047,"line_start":227,"line_end":227,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1799}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":151403,"byte_end":151407,"line_start":243,"line_end":243,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1803}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":151827,"byte_end":151831,"line_start":260,"line_end":260,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1807}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":152401,"byte_end":152405,"line_start":277,"line_end":277,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1811}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":153252,"byte_end":153256,"line_start":300,"line_end":300,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1815}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":153874,"byte_end":153878,"line_start":319,"line_end":319,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1819}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":154691,"byte_end":154695,"line_start":341,"line_end":341,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1824}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":155063,"byte_end":155067,"line_start":355,"line_end":355,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1828}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":155290,"byte_end":155294,"line_start":365,"line_end":365,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1832}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":155678,"byte_end":155682,"line_start":382,"line_end":382,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1836}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":156020,"byte_end":156024,"line_start":395,"line_end":395,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1841}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":156148,"byte_end":156152,"line_start":402,"line_end":402,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1845}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":156287,"byte_end":156291,"line_start":409,"line_end":409,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1849}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":156491,"byte_end":156495,"line_start":420,"line_end":420,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1853},{"krate":0,"index":1854}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":156715,"byte_end":156719,"line_start":429,"line_end":429,"column_start":47,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1858}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":156862,"byte_end":156866,"line_start":436,"line_end":436,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1862},{"krate":0,"index":1863}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":157094,"byte_end":157098,"line_start":445,"line_end":445,"column_start":47,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1867}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":157261,"byte_end":157265,"line_start":452,"line_end":452,"column_start":55,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1872},{"krate":0,"index":1873}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":157523,"byte_end":157527,"line_start":461,"line_end":461,"column_start":60,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":1877}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":157733,"byte_end":157737,"line_start":469,"line_end":469,"column_start":55,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1882},{"krate":0,"index":1883}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":157995,"byte_end":157999,"line_start":478,"line_end":478,"column_start":60,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":1887}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":158168,"byte_end":158172,"line_start":486,"line_end":486,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1891},{"krate":0,"index":1892},{"krate":0,"index":1893}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":158813,"byte_end":158817,"line_start":509,"line_end":509,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1898},{"krate":0,"index":1900},{"krate":0,"index":1902},{"krate":0,"index":1903},{"krate":0,"index":1904},{"krate":0,"index":1905},{"krate":0,"index":1906},{"krate":0,"index":1907},{"krate":0,"index":1908}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":162104,"byte_end":162108,"line_start":597,"line_end":597,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1912}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":162357,"byte_end":162361,"line_start":605,"line_end":605,"column_start":76,"column_end":80},"value":"","parent":null,"children":[{"krate":0,"index":1916},{"krate":0,"index":1917},{"krate":0,"index":1918}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":164423,"byte_end":164427,"line_start":656,"line_end":656,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1922}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rigid.rs","byte_start":174950,"byte_end":174966,"line_start":28,"line_end":28,"column_start":19,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1953}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rigid.rs","byte_start":175279,"byte_end":175295,"line_start":39,"line_end":39,"column_start":25,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1958}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rigid.rs","byte_start":175577,"byte_end":175593,"line_start":48,"line_end":48,"column_start":40,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1965},{"krate":0,"index":1966},{"krate":0,"index":1967},{"krate":0,"index":1968},{"krate":0,"index":1969},{"krate":0,"index":1970},{"krate":0,"index":1972},{"krate":0,"index":1973},{"krate":0,"index":1974},{"krate":0,"index":1975}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rigid.rs","byte_start":179979,"byte_end":179995,"line_start":187,"line_end":187,"column_start":9,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1980}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rigid.rs","byte_start":180171,"byte_end":180187,"line_start":194,"line_end":194,"column_start":67,"column_end":83},"value":"","parent":null,"children":[{"krate":0,"index":1985}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":184076,"byte_end":184086,"line_start":40,"line_end":40,"column_start":34,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":184139,"byte_end":184149,"line_start":42,"line_end":42,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2084}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":184331,"byte_end":184341,"line_start":51,"line_end":51,"column_start":26,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":184403,"byte_end":184413,"line_start":53,"line_end":53,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2093}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":184564,"byte_end":184574,"line_start":62,"line_end":62,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2098}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":184719,"byte_end":184729,"line_start":71,"line_end":71,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2104},{"krate":0,"index":2105},{"krate":0,"index":2106}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":185280,"byte_end":185290,"line_start":96,"line_end":96,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2111},{"krate":0,"index":2114},{"krate":0,"index":2115}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":186935,"byte_end":186945,"line_start":159,"line_end":159,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2120}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":187150,"byte_end":187160,"line_start":169,"line_end":169,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2125},{"krate":0,"index":2126},{"krate":0,"index":2127},{"krate":0,"index":2129},{"krate":0,"index":2130}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":188559,"byte_end":188569,"line_start":209,"line_end":209,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2135}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":189989,"byte_end":189999,"line_start":251,"line_end":251,"column_start":34,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":190052,"byte_end":190062,"line_start":253,"line_end":253,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2153}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":190329,"byte_end":190339,"line_start":265,"line_end":265,"column_start":26,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":190401,"byte_end":190411,"line_start":267,"line_end":267,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2162}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":190617,"byte_end":190627,"line_start":276,"line_end":276,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2167}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":190840,"byte_end":190850,"line_start":288,"line_end":288,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2173},{"krate":0,"index":2174}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":191721,"byte_end":191731,"line_start":319,"line_end":319,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2179},{"krate":0,"index":2180},{"krate":0,"index":2183},{"krate":0,"index":2184}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":194278,"byte_end":194288,"line_start":403,"line_end":403,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2189},{"krate":0,"index":2190},{"krate":0,"index":2191},{"krate":0,"index":2192},{"krate":0,"index":2193},{"krate":0,"index":2194},{"krate":0,"index":2195},{"krate":0,"index":2196},{"krate":0,"index":2197},{"krate":0,"index":2198},{"krate":0,"index":2199},{"krate":0,"index":2200},{"krate":0,"index":2201},{"krate":0,"index":2202},{"krate":0,"index":2203},{"krate":0,"index":2204},{"krate":0,"index":2205},{"krate":0,"index":2206},{"krate":0,"index":2207},{"krate":0,"index":2209},{"krate":0,"index":2210},{"krate":0,"index":2211}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":203926,"byte_end":203936,"line_start":706,"line_end":706,"column_start":46,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2216}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":204191,"byte_end":204201,"line_start":716,"line_end":716,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2221},{"krate":0,"index":2222}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":214801,"byte_end":214806,"line_start":53,"line_end":53,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2292},{"krate":0,"index":2293},{"krate":0,"index":2294},{"krate":0,"index":2295},{"krate":0,"index":2296},{"krate":0,"index":2297},{"krate":0,"index":2298},{"krate":0,"index":2299},{"krate":0,"index":2300},{"krate":0,"index":2301},{"krate":0,"index":2302},{"krate":0,"index":2303}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":219468,"byte_end":219473,"line_start":241,"line_end":241,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2308},{"krate":0,"index":2310}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":221359,"byte_end":221364,"line_start":300,"line_end":300,"column_start":47,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2317},{"krate":0,"index":2318}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":221587,"byte_end":221592,"line_start":310,"line_end":310,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2323},{"krate":0,"index":2324}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":221827,"byte_end":221832,"line_start":320,"line_end":320,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2329},{"krate":0,"index":2330}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":222190,"byte_end":222195,"line_start":332,"line_end":332,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2335}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":222330,"byte_end":222335,"line_start":338,"line_end":338,"column_start":30,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":222398,"byte_end":222403,"line_start":340,"line_end":340,"column_start":46,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2344}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":222558,"byte_end":222563,"line_start":346,"line_end":346,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2349}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":222698,"byte_end":222703,"line_start":352,"line_end":352,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2354}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":222840,"byte_end":222845,"line_start":358,"line_end":358,"column_start":34,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":222908,"byte_end":222913,"line_start":360,"line_end":360,"column_start":46,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2363}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":223058,"byte_end":223063,"line_start":366,"line_end":366,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2368}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":223180,"byte_end":223185,"line_start":372,"line_end":372,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2373}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":223315,"byte_end":223320,"line_start":378,"line_end":378,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2379}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\side_offsets.rs","byte_start":226315,"byte_end":226328,"line_start":60,"line_end":60,"column_start":27,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\side_offsets.rs","byte_start":226367,"byte_end":226380,"line_start":62,"line_end":62,"column_start":29,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2442}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\side_offsets.rs","byte_start":226664,"byte_end":226677,"line_start":74,"line_end":74,"column_start":19,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\side_offsets.rs","byte_start":226725,"byte_end":226738,"line_start":76,"line_end":76,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2449}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\side_offsets.rs","byte_start":226994,"byte_end":227007,"line_start":88,"line_end":88,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2453}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\side_offsets.rs","byte_start":227247,"byte_end":227260,"line_start":100,"line_end":100,"column_start":39,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2458}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\side_offsets.rs","byte_start":227504,"byte_end":227517,"line_start":110,"line_end":110,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2462}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\side_offsets.rs","byte_start":227793,"byte_end":227806,"line_start":122,"line_end":122,"column_start":12,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2466},{"krate":0,"index":2467},{"krate":0,"index":2468},{"krate":0,"index":2469},{"krate":0,"index":2470},{"krate":0,"index":2471},{"krate":0,"index":2472},{"krate":0,"index":2473},{"krate":0,"index":2474},{"krate":0,"index":2475}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\side_offsets.rs","byte_start":230884,"byte_end":230897,"line_start":229,"line_end":229,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2479},{"krate":0,"index":2480}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\side_offsets.rs","byte_start":231232,"byte_end":231245,"line_start":244,"line_end":244,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2484},{"krate":0,"index":2485}],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\side_offsets.rs","byte_start":231580,"byte_end":231593,"line_start":258,"line_end":258,"column_start":47,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2489}],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\side_offsets.rs","byte_start":231834,"byte_end":231847,"line_start":268,"line_end":268,"column_start":55,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":2494},{"krate":0,"index":2495}],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\side_offsets.rs","byte_start":232220,"byte_end":232233,"line_start":282,"line_end":282,"column_start":60,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":2499}],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\side_offsets.rs","byte_start":232379,"byte_end":232392,"line_start":289,"line_end":289,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2503},{"krate":0,"index":2504}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\side_offsets.rs","byte_start":232727,"byte_end":232740,"line_start":303,"line_end":303,"column_start":47,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2508}],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\side_offsets.rs","byte_start":232981,"byte_end":232994,"line_start":313,"line_end":313,"column_start":55,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":2513},{"krate":0,"index":2514}],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\side_offsets.rs","byte_start":233367,"byte_end":233380,"line_start":327,"line_end":327,"column_start":60,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":2518}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":237829,"byte_end":237835,"line_start":41,"line_end":41,"column_start":27,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":237874,"byte_end":237880,"line_start":43,"line_end":43,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2626}],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":239312,"byte_end":239318,"line_start":102,"line_end":102,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":239366,"byte_end":239372,"line_start":104,"line_end":104,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2633}],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":239540,"byte_end":239546,"line_start":113,"line_end":113,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2637}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":239733,"byte_end":239739,"line_start":123,"line_end":123,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2642}],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":239956,"byte_end":239962,"line_start":131,"line_end":131,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2646}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":240078,"byte_end":240084,"line_start":137,"line_end":137,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2650},{"krate":0,"index":2651},{"krate":0,"index":2652},{"krate":0,"index":2653},{"krate":0,"index":2654}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":241215,"byte_end":241221,"line_start":184,"line_end":184,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2658},{"krate":0,"index":2660},{"krate":0,"index":2661},{"krate":0,"index":2662},{"krate":0,"index":2663},{"krate":0,"index":2665},{"krate":0,"index":2666},{"krate":0,"index":2667},{"krate":0,"index":2668},{"krate":0,"index":2669}],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":244588,"byte_end":244594,"line_start":307,"line_end":307,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2673},{"krate":0,"index":2675},{"krate":0,"index":2677},{"krate":0,"index":2678},{"krate":0,"index":2679},{"krate":0,"index":2680},{"krate":0,"index":2681},{"krate":0,"index":2682},{"krate":0,"index":2683}],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":247761,"byte_end":247767,"line_start":395,"line_end":395,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2687}],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":247961,"byte_end":247967,"line_start":403,"line_end":403,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2691},{"krate":0,"index":2692}],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":248560,"byte_end":248566,"line_start":419,"line_end":419,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2696},{"krate":0,"index":2697},{"krate":0,"index":2698},{"krate":0,"index":2699},{"krate":0,"index":2700},{"krate":0,"index":2701},{"krate":0,"index":2702}],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":250462,"byte_end":250468,"line_start":478,"line_end":478,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2706},{"krate":0,"index":2707}],"docs":"","sig":null,"attributes":[]},{"id":353,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":251027,"byte_end":251033,"line_start":496,"line_end":496,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2711}],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":251189,"byte_end":251195,"line_start":504,"line_end":504,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2715}],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":251349,"byte_end":251355,"line_start":512,"line_end":512,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2719}],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":251511,"byte_end":251517,"line_start":520,"line_end":520,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2723}],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":251645,"byte_end":251651,"line_start":527,"line_end":527,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2727},{"krate":0,"index":2728}],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":251830,"byte_end":251836,"line_start":536,"line_end":536,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2732},{"krate":0,"index":2733}],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":252084,"byte_end":252090,"line_start":545,"line_end":545,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2737},{"krate":0,"index":2738}],"docs":"","sig":null,"attributes":[]},{"id":360,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":252290,"byte_end":252296,"line_start":552,"line_end":552,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2742}],"docs":"","sig":null,"attributes":[]},{"id":361,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":252483,"byte_end":252489,"line_start":558,"line_end":558,"column_start":74,"column_end":80},"value":"","parent":null,"children":[{"krate":0,"index":2748}],"docs":"","sig":null,"attributes":[]},{"id":362,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":252643,"byte_end":252649,"line_start":564,"line_end":564,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2753}],"docs":"","sig":null,"attributes":[]},{"id":363,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":252821,"byte_end":252827,"line_start":572,"line_end":572,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2757},{"krate":0,"index":2758}],"docs":"","sig":null,"attributes":[]},{"id":364,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":253058,"byte_end":253064,"line_start":581,"line_end":581,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2762}],"docs":"","sig":null,"attributes":[]},{"id":365,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":253246,"byte_end":253252,"line_start":589,"line_end":589,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2766},{"krate":0,"index":2767}],"docs":"","sig":null,"attributes":[]},{"id":366,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":253477,"byte_end":253483,"line_start":598,"line_end":598,"column_start":47,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2771}],"docs":"","sig":null,"attributes":[]},{"id":367,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":253669,"byte_end":253675,"line_start":606,"line_end":606,"column_start":55,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":2776},{"krate":0,"index":2777}],"docs":"","sig":null,"attributes":[]},{"id":368,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":253934,"byte_end":253940,"line_start":615,"line_end":615,"column_start":60,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":2781}],"docs":"","sig":null,"attributes":[]},{"id":369,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":254086,"byte_end":254092,"line_start":622,"line_end":622,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2785},{"krate":0,"index":2786}],"docs":"","sig":null,"attributes":[]},{"id":370,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":254317,"byte_end":254323,"line_start":631,"line_end":631,"column_start":47,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2790}],"docs":"","sig":null,"attributes":[]},{"id":371,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":254509,"byte_end":254515,"line_start":639,"line_end":639,"column_start":55,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":2795},{"krate":0,"index":2796}],"docs":"","sig":null,"attributes":[]},{"id":372,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":254774,"byte_end":254780,"line_start":648,"line_end":648,"column_start":60,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":2800}],"docs":"","sig":null,"attributes":[]},{"id":373,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":255538,"byte_end":255544,"line_start":683,"line_end":683,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2807}],"docs":"","sig":null,"attributes":[]},{"id":374,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":255669,"byte_end":255675,"line_start":690,"line_end":690,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2812}],"docs":"","sig":null,"attributes":[]},{"id":375,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":255799,"byte_end":255805,"line_start":697,"line_end":697,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2818}],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":255923,"byte_end":255929,"line_start":704,"line_end":704,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2823}],"docs":"","sig":null,"attributes":[]},{"id":377,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":256053,"byte_end":256059,"line_start":711,"line_end":711,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2827}],"docs":"","sig":null,"attributes":[]},{"id":378,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":262816,"byte_end":262822,"line_start":948,"line_end":948,"column_start":27,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":379,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":262861,"byte_end":262867,"line_start":950,"line_end":950,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2841}],"docs":"","sig":null,"attributes":[]},{"id":380,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":263866,"byte_end":263872,"line_start":993,"line_end":993,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":381,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":263920,"byte_end":263926,"line_start":995,"line_end":995,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2848}],"docs":"","sig":null,"attributes":[]},{"id":382,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":264123,"byte_end":264129,"line_start":1004,"line_end":1004,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2852}],"docs":"","sig":null,"attributes":[]},{"id":383,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":264344,"byte_end":264350,"line_start":1015,"line_end":1015,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2857}],"docs":"","sig":null,"attributes":[]},{"id":384,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":264634,"byte_end":264640,"line_start":1025,"line_end":1025,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2861}],"docs":"","sig":null,"attributes":[]},{"id":385,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":264776,"byte_end":264782,"line_start":1031,"line_end":1031,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2865},{"krate":0,"index":2866},{"krate":0,"index":2867},{"krate":0,"index":2868},{"krate":0,"index":2869}],"docs":"","sig":null,"attributes":[]},{"id":386,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":266011,"byte_end":266017,"line_start":1079,"line_end":1079,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2873},{"krate":0,"index":2875},{"krate":0,"index":2876},{"krate":0,"index":2877},{"krate":0,"index":2878},{"krate":0,"index":2880},{"krate":0,"index":2881},{"krate":0,"index":2882},{"krate":0,"index":2883},{"krate":0,"index":2884}],"docs":"","sig":null,"attributes":[]},{"id":387,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":269605,"byte_end":269611,"line_start":1202,"line_end":1202,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2888},{"krate":0,"index":2890},{"krate":0,"index":2892},{"krate":0,"index":2893},{"krate":0,"index":2894},{"krate":0,"index":2895},{"krate":0,"index":2896},{"krate":0,"index":2897}],"docs":"","sig":null,"attributes":[]},{"id":388,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":272510,"byte_end":272516,"line_start":1284,"line_end":1284,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2901}],"docs":"","sig":null,"attributes":[]},{"id":389,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":272736,"byte_end":272742,"line_start":1292,"line_end":1292,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2905},{"krate":0,"index":2906}],"docs":"","sig":null,"attributes":[]},{"id":390,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":273380,"byte_end":273386,"line_start":1308,"line_end":1308,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2910},{"krate":0,"index":2911},{"krate":0,"index":2912},{"krate":0,"index":2913},{"krate":0,"index":2914},{"krate":0,"index":2915},{"krate":0,"index":2916}],"docs":"","sig":null,"attributes":[]},{"id":391,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":275462,"byte_end":275468,"line_start":1376,"line_end":1376,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2920},{"krate":0,"index":2921}],"docs":"","sig":null,"attributes":[]},{"id":392,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":276111,"byte_end":276117,"line_start":1396,"line_end":1396,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2925}],"docs":"","sig":null,"attributes":[]},{"id":393,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":276273,"byte_end":276279,"line_start":1404,"line_end":1404,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2929}],"docs":"","sig":null,"attributes":[]},{"id":394,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":276433,"byte_end":276439,"line_start":1412,"line_end":1412,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2933}],"docs":"","sig":null,"attributes":[]},{"id":395,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":276595,"byte_end":276601,"line_start":1420,"line_end":1420,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2937}],"docs":"","sig":null,"attributes":[]},{"id":396,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":276743,"byte_end":276749,"line_start":1427,"line_end":1427,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2941},{"krate":0,"index":2942}],"docs":"","sig":null,"attributes":[]},{"id":397,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":276941,"byte_end":276947,"line_start":1436,"line_end":1436,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2946},{"krate":0,"index":2947}],"docs":"","sig":null,"attributes":[]},{"id":398,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":277268,"byte_end":277274,"line_start":1449,"line_end":1449,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2951},{"krate":0,"index":2952}],"docs":"","sig":null,"attributes":[]},{"id":399,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":277547,"byte_end":277553,"line_start":1460,"line_end":1460,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2956}],"docs":"","sig":null,"attributes":[]},{"id":400,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":277740,"byte_end":277746,"line_start":1466,"line_end":1466,"column_start":74,"column_end":80},"value":"","parent":null,"children":[{"krate":0,"index":2962}],"docs":"","sig":null,"attributes":[]},{"id":401,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":277900,"byte_end":277906,"line_start":1472,"line_end":1472,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2967}],"docs":"","sig":null,"attributes":[]},{"id":402,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":278113,"byte_end":278119,"line_start":1481,"line_end":1481,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2971},{"krate":0,"index":2972}],"docs":"","sig":null,"attributes":[]},{"id":403,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":278423,"byte_end":278429,"line_start":1494,"line_end":1494,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2976}],"docs":"","sig":null,"attributes":[]},{"id":404,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":278646,"byte_end":278652,"line_start":1503,"line_end":1503,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2980},{"krate":0,"index":2981}],"docs":"","sig":null,"attributes":[]},{"id":405,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":278944,"byte_end":278950,"line_start":1516,"line_end":1516,"column_start":47,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2985}],"docs":"","sig":null,"attributes":[]},{"id":406,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":279165,"byte_end":279171,"line_start":1525,"line_end":1525,"column_start":55,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":2990},{"krate":0,"index":2991}],"docs":"","sig":null,"attributes":[]},{"id":407,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":279499,"byte_end":279505,"line_start":1538,"line_end":1538,"column_start":60,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":2995}],"docs":"","sig":null,"attributes":[]},{"id":408,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":279651,"byte_end":279657,"line_start":1545,"line_end":1545,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2999},{"krate":0,"index":3000}],"docs":"","sig":null,"attributes":[]},{"id":409,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":279949,"byte_end":279955,"line_start":1558,"line_end":1558,"column_start":47,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3004}],"docs":"","sig":null,"attributes":[]},{"id":410,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":280170,"byte_end":280176,"line_start":1567,"line_end":1567,"column_start":55,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":3009},{"krate":0,"index":3010}],"docs":"","sig":null,"attributes":[]},{"id":411,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":280504,"byte_end":280510,"line_start":1580,"line_end":1580,"column_start":60,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":3014}],"docs":"","sig":null,"attributes":[]},{"id":412,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":281087,"byte_end":281093,"line_start":1606,"line_end":1606,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3018}],"docs":"","sig":null,"attributes":[]},{"id":413,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":281223,"byte_end":281229,"line_start":1613,"line_end":1613,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3023}],"docs":"","sig":null,"attributes":[]},{"id":414,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":281365,"byte_end":281371,"line_start":1620,"line_end":1620,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3029}],"docs":"","sig":null,"attributes":[]},{"id":415,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":281498,"byte_end":281504,"line_start":1627,"line_end":1627,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3034}],"docs":"","sig":null,"attributes":[]},{"id":416,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":281646,"byte_end":281652,"line_start":1634,"line_end":1634,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3038}],"docs":"","sig":null,"attributes":[]},{"id":417,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":291330,"byte_end":291341,"line_start":87,"line_end":87,"column_start":34,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":418,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":291394,"byte_end":291405,"line_start":89,"line_end":89,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3138}],"docs":"","sig":null,"attributes":[]},{"id":419,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":291759,"byte_end":291770,"line_start":103,"line_end":103,"column_start":26,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":420,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":291832,"byte_end":291843,"line_start":105,"line_end":105,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3147}],"docs":"","sig":null,"attributes":[]},{"id":421,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":292174,"byte_end":292185,"line_start":118,"line_end":118,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3152}],"docs":"","sig":null,"attributes":[]},{"id":422,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":292458,"byte_end":292469,"line_start":132,"line_end":132,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3158},{"krate":0,"index":3159},{"krate":0,"index":3160}],"docs":"","sig":null,"attributes":[]},{"id":423,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":294134,"byte_end":294145,"line_start":182,"line_end":182,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3165},{"krate":0,"index":3167},{"krate":0,"index":3169},{"krate":0,"index":3172},{"krate":0,"index":3174},{"krate":0,"index":3177},{"krate":0,"index":3178},{"krate":0,"index":3179},{"krate":0,"index":3181},{"krate":0,"index":3183}],"docs":"","sig":null,"attributes":[]},{"id":424,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":297893,"byte_end":297904,"line_start":306,"line_end":306,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3188},{"krate":0,"index":3190}],"docs":"","sig":null,"attributes":[]},{"id":425,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":298823,"byte_end":298834,"line_start":332,"line_end":332,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3196},{"krate":0,"index":3197}],"docs":"","sig":null,"attributes":[]},{"id":426,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":299468,"byte_end":299479,"line_start":361,"line_end":361,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3202}],"docs":"","sig":null,"attributes":[]},{"id":427,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":300266,"byte_end":300277,"line_start":383,"line_end":383,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3208},{"krate":0,"index":3211},{"krate":0,"index":3212}],"docs":"","sig":null,"attributes":[]},{"id":428,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":301379,"byte_end":301390,"line_start":428,"line_end":428,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3217},{"krate":0,"index":3218},{"krate":0,"index":3219}],"docs":"","sig":null,"attributes":[]},{"id":429,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":302358,"byte_end":302369,"line_start":461,"line_end":461,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3224},{"krate":0,"index":3226},{"krate":0,"index":3227}],"docs":"","sig":null,"attributes":[]},{"id":430,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":303461,"byte_end":303472,"line_start":509,"line_end":509,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3232},{"krate":0,"index":3233},{"krate":0,"index":3234},{"krate":0,"index":3235}],"docs":"","sig":null,"attributes":[]},{"id":431,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":305296,"byte_end":305307,"line_start":568,"line_end":568,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3240},{"krate":0,"index":3241},{"krate":0,"index":3242}],"docs":"","sig":null,"attributes":[]},{"id":432,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":306442,"byte_end":306453,"line_start":607,"line_end":607,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3247}],"docs":"","sig":null,"attributes":[]},{"id":433,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":306661,"byte_end":306672,"line_start":616,"line_end":616,"column_start":48,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":3252},{"krate":0,"index":3253}],"docs":"","sig":null,"attributes":[]},{"id":434,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":307258,"byte_end":307269,"line_start":629,"line_end":629,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3258}],"docs":"","sig":null,"attributes":[]},{"id":435,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":316094,"byte_end":316105,"line_start":108,"line_end":108,"column_start":34,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":436,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":316158,"byte_end":316169,"line_start":110,"line_end":110,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3389}],"docs":"","sig":null,"attributes":[]},{"id":437,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":316873,"byte_end":316884,"line_start":134,"line_end":134,"column_start":26,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":438,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":316946,"byte_end":316957,"line_start":136,"line_end":136,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3398}],"docs":"","sig":null,"attributes":[]},{"id":439,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":317658,"byte_end":317669,"line_start":159,"line_end":159,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3403}],"docs":"","sig":null,"attributes":[]},{"id":440,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":318202,"byte_end":318213,"line_start":183,"line_end":183,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3409},{"krate":0,"index":3410},{"krate":0,"index":3413}],"docs":"","sig":null,"attributes":[]},{"id":441,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":320621,"byte_end":320632,"line_start":264,"line_end":264,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3418},{"krate":0,"index":3420},{"krate":0,"index":3422},{"krate":0,"index":3425},{"krate":0,"index":3428},{"krate":0,"index":3430},{"krate":0,"index":3433},{"krate":0,"index":3434},{"krate":0,"index":3435},{"krate":0,"index":3437},{"krate":0,"index":3439}],"docs":"","sig":null,"attributes":[]},{"id":442,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":326077,"byte_end":326088,"line_start":416,"line_end":416,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3444},{"krate":0,"index":3445},{"krate":0,"index":3446},{"krate":0,"index":3449}],"docs":"","sig":null,"attributes":[]},{"id":443,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":327927,"byte_end":327938,"line_start":491,"line_end":491,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3456}],"docs":"","sig":null,"attributes":[]},{"id":444,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":330206,"byte_end":330217,"line_start":526,"line_end":526,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3462},{"krate":0,"index":3465},{"krate":0,"index":3466}],"docs":"","sig":null,"attributes":[]},{"id":445,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":331387,"byte_end":331398,"line_start":571,"line_end":571,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3471},{"krate":0,"index":3472},{"krate":0,"index":3473}],"docs":"","sig":null,"attributes":[]},{"id":446,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":333074,"byte_end":333085,"line_start":627,"line_end":627,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3478},{"krate":0,"index":3481},{"krate":0,"index":3482}],"docs":"","sig":null,"attributes":[]},{"id":447,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":334434,"byte_end":334445,"line_start":677,"line_end":677,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3487},{"krate":0,"index":3488},{"krate":0,"index":3489},{"krate":0,"index":3490},{"krate":0,"index":3491},{"krate":0,"index":3492},{"krate":0,"index":3493},{"krate":0,"index":3494},{"krate":0,"index":3495}],"docs":"","sig":null,"attributes":[]},{"id":448,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":340133,"byte_end":340144,"line_start":817,"line_end":817,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3500},{"krate":0,"index":3501},{"krate":0,"index":3502},{"krate":0,"index":3503},{"krate":0,"index":3504},{"krate":0,"index":3505},{"krate":0,"index":3506}],"docs":"","sig":null,"attributes":[]},{"id":449,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":347694,"byte_end":347705,"line_start":988,"line_end":988,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3511}],"docs":"","sig":null,"attributes":[]},{"id":450,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":349251,"byte_end":349262,"line_start":1029,"line_end":1029,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3516},{"krate":0,"index":3518}],"docs":"","sig":null,"attributes":[]},{"id":451,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":350761,"byte_end":350772,"line_start":1060,"line_end":1060,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3524},{"krate":0,"index":3525}],"docs":"","sig":null,"attributes":[]},{"id":452,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":351740,"byte_end":351751,"line_start":1085,"line_end":1085,"column_start":48,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":3530},{"krate":0,"index":3531}],"docs":"","sig":null,"attributes":[]},{"id":453,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":352685,"byte_end":352696,"line_start":1101,"line_end":1101,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3536}],"docs":"","sig":null,"attributes":[]},{"id":454,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":352890,"byte_end":352901,"line_start":1110,"line_end":1110,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3541}],"docs":"","sig":null,"attributes":[]},{"id":455,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":366261,"byte_end":366274,"line_start":74,"line_end":74,"column_start":34,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":456,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":366327,"byte_end":366340,"line_start":76,"line_end":76,"column_start":36,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3638}],"docs":"","sig":null,"attributes":[]},{"id":457,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":366548,"byte_end":366561,"line_start":86,"line_end":86,"column_start":26,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":458,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":366623,"byte_end":366636,"line_start":88,"line_end":88,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3647}],"docs":"","sig":null,"attributes":[]},{"id":459,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":366800,"byte_end":366813,"line_start":97,"line_end":97,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3652}],"docs":"","sig":null,"attributes":[]},{"id":460,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":366978,"byte_end":366991,"line_start":107,"line_end":107,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3658},{"krate":0,"index":3659},{"krate":0,"index":3660},{"krate":0,"index":3661},{"krate":0,"index":3662}],"docs":"","sig":null,"attributes":[]},{"id":461,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":368347,"byte_end":368360,"line_start":164,"line_end":164,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3667},{"krate":0,"index":3668},{"krate":0,"index":3670},{"krate":0,"index":3671},{"krate":0,"index":3672},{"krate":0,"index":3673},{"krate":0,"index":3674},{"krate":0,"index":3675},{"krate":0,"index":3676},{"krate":0,"index":3677}],"docs":"","sig":null,"attributes":[]},{"id":462,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":370585,"byte_end":370598,"line_start":255,"line_end":255,"column_start":69,"column_end":82},"value":"","parent":null,"children":[{"krate":0,"index":3683},{"krate":0,"index":3684}],"docs":"","sig":null,"attributes":[]},{"id":463,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":370886,"byte_end":370899,"line_start":263,"line_end":263,"column_start":72,"column_end":85},"value":"","parent":null,"children":[{"krate":0,"index":3689}],"docs":"","sig":null,"attributes":[]},{"id":464,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":371112,"byte_end":371125,"line_start":270,"line_end":270,"column_start":69,"column_end":82},"value":"","parent":null,"children":[{"krate":0,"index":3695},{"krate":0,"index":3696}],"docs":"","sig":null,"attributes":[]},{"id":465,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":371413,"byte_end":371426,"line_start":278,"line_end":278,"column_start":72,"column_end":85},"value":"","parent":null,"children":[{"krate":0,"index":3701}],"docs":"","sig":null,"attributes":[]},{"id":466,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":371616,"byte_end":371629,"line_start":285,"line_end":285,"column_start":46,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":3706}],"docs":"","sig":null,"attributes":[]},{"id":467,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":371779,"byte_end":371792,"line_start":291,"line_end":291,"column_start":46,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":3711}],"docs":"","sig":null,"attributes":[]},{"id":468,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":371939,"byte_end":371952,"line_start":297,"line_end":297,"column_start":54,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":3716}],"docs":"","sig":null,"attributes":[]},{"id":469,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":372129,"byte_end":372142,"line_start":306,"line_end":306,"column_start":31,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3721}],"docs":"","sig":null,"attributes":[]},{"id":470,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":372283,"byte_end":372296,"line_start":315,"line_end":315,"column_start":46,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":3726}],"docs":"","sig":null,"attributes":[]},{"id":471,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":372836,"byte_end":372849,"line_start":334,"line_end":334,"column_start":34,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":472,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":372902,"byte_end":372915,"line_start":336,"line_end":336,"column_start":36,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3743}],"docs":"","sig":null,"attributes":[]},{"id":473,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":373919,"byte_end":373932,"line_start":379,"line_end":379,"column_start":26,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":474,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":373994,"byte_end":374007,"line_start":381,"line_end":381,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3752}],"docs":"","sig":null,"attributes":[]},{"id":475,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":374192,"byte_end":374205,"line_start":390,"line_end":390,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3757}],"docs":"","sig":null,"attributes":[]},{"id":476,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":374394,"byte_end":374407,"line_start":401,"line_end":401,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3763},{"krate":0,"index":3764},{"krate":0,"index":3765},{"krate":0,"index":3766},{"krate":0,"index":3767}],"docs":"","sig":null,"attributes":[]},{"id":477,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":375928,"byte_end":375941,"line_start":461,"line_end":461,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3772},{"krate":0,"index":3773},{"krate":0,"index":3775},{"krate":0,"index":3776},{"krate":0,"index":3777},{"krate":0,"index":3778},{"krate":0,"index":3779},{"krate":0,"index":3780},{"krate":0,"index":3781},{"krate":0,"index":3782},{"krate":0,"index":3783},{"krate":0,"index":3784}],"docs":"","sig":null,"attributes":[]},{"id":478,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":378797,"byte_end":378810,"line_start":575,"line_end":575,"column_start":69,"column_end":82},"value":"","parent":null,"children":[{"krate":0,"index":3790},{"krate":0,"index":3791}],"docs":"","sig":null,"attributes":[]},{"id":479,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":379116,"byte_end":379129,"line_start":583,"line_end":583,"column_start":72,"column_end":85},"value":"","parent":null,"children":[{"krate":0,"index":3796}],"docs":"","sig":null,"attributes":[]},{"id":480,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":379369,"byte_end":379382,"line_start":591,"line_end":591,"column_start":69,"column_end":82},"value":"","parent":null,"children":[{"krate":0,"index":3802},{"krate":0,"index":3803}],"docs":"","sig":null,"attributes":[]},{"id":481,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":379688,"byte_end":379701,"line_start":599,"line_end":599,"column_start":72,"column_end":85},"value":"","parent":null,"children":[{"krate":0,"index":3808}],"docs":"","sig":null,"attributes":[]},{"id":482,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":379918,"byte_end":379931,"line_start":607,"line_end":607,"column_start":46,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":3813}],"docs":"","sig":null,"attributes":[]},{"id":483,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":380086,"byte_end":380099,"line_start":613,"line_end":613,"column_start":46,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":3818}],"docs":"","sig":null,"attributes":[]},{"id":484,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":380254,"byte_end":380267,"line_start":619,"line_end":619,"column_start":54,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":3823}],"docs":"","sig":null,"attributes":[]},{"id":485,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":380452,"byte_end":380465,"line_start":628,"line_end":628,"column_start":31,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3828}],"docs":"","sig":null,"attributes":[]},{"id":486,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":380606,"byte_end":380619,"line_start":637,"line_end":637,"column_start":46,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":3833}],"docs":"","sig":null,"attributes":[]},{"id":487,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":392272,"byte_end":392280,"line_start":47,"line_end":47,"column_start":27,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":488,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":392319,"byte_end":392327,"line_start":49,"line_end":49,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3971}],"docs":"","sig":null,"attributes":[]},{"id":489,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":393594,"byte_end":393602,"line_start":106,"line_end":106,"column_start":23,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":490,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":393649,"byte_end":393657,"line_start":108,"line_end":108,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3978}],"docs":"","sig":null,"attributes":[]},{"id":491,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":393789,"byte_end":393797,"line_start":114,"line_end":114,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3982}],"docs":"","sig":null,"attributes":[]},{"id":492,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":393944,"byte_end":393952,"line_start":121,"line_end":121,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3987}],"docs":"","sig":null,"attributes":[]},{"id":493,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":394149,"byte_end":394157,"line_start":129,"line_end":129,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3991}],"docs":"","sig":null,"attributes":[]},{"id":494,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":394331,"byte_end":394339,"line_start":135,"line_end":135,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3995}],"docs":"","sig":null,"attributes":[]},{"id":495,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":394457,"byte_end":394465,"line_start":141,"line_end":141,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3999},{"krate":0,"index":4000},{"krate":0,"index":4001},{"krate":0,"index":4002},{"krate":0,"index":4003},{"krate":0,"index":4004},{"krate":0,"index":4005},{"krate":0,"index":4006},{"krate":0,"index":4007},{"krate":0,"index":4008},{"krate":0,"index":4009},{"krate":0,"index":4010}],"docs":"","sig":null,"attributes":[]},{"id":496,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":397481,"byte_end":397489,"line_start":267,"line_end":267,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4014},{"krate":0,"index":4015},{"krate":0,"index":4016},{"krate":0,"index":4017},{"krate":0,"index":4018},{"krate":0,"index":4019},{"krate":0,"index":4021},{"krate":0,"index":4023},{"krate":0,"index":4024},{"krate":0,"index":4025},{"krate":0,"index":4026},{"krate":0,"index":4027},{"krate":0,"index":4028},{"krate":0,"index":4029}],"docs":"","sig":null,"attributes":[]},{"id":497,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":401004,"byte_end":401012,"line_start":410,"line_end":410,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4033},{"krate":0,"index":4034},{"krate":0,"index":4035}],"docs":"","sig":null,"attributes":[]},{"id":498,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":401898,"byte_end":401906,"line_start":442,"line_end":442,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4039},{"krate":0,"index":4040},{"krate":0,"index":4041},{"krate":0,"index":4042},{"krate":0,"index":4043},{"krate":0,"index":4044},{"krate":0,"index":4045},{"krate":0,"index":4046}],"docs":"","sig":null,"attributes":[]},{"id":499,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":404050,"byte_end":404058,"line_start":520,"line_end":520,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4050},{"krate":0,"index":4051}],"docs":"","sig":null,"attributes":[]},{"id":500,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":405170,"byte_end":405178,"line_start":555,"line_end":555,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4055},{"krate":0,"index":4056},{"krate":0,"index":4057},{"krate":0,"index":4058},{"krate":0,"index":4059}],"docs":"","sig":null,"attributes":[]},{"id":501,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":406480,"byte_end":406488,"line_start":599,"line_end":599,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4063},{"krate":0,"index":4064}],"docs":"","sig":null,"attributes":[]},{"id":502,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":407038,"byte_end":407046,"line_start":619,"line_end":619,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4068},{"krate":0,"index":4070},{"krate":0,"index":4072},{"krate":0,"index":4073},{"krate":0,"index":4074},{"krate":0,"index":4075},{"krate":0,"index":4076},{"krate":0,"index":4077}],"docs":"","sig":null,"attributes":[]},{"id":503,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":409898,"byte_end":409906,"line_start":697,"line_end":697,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4081},{"krate":0,"index":4082}],"docs":"","sig":null,"attributes":[]},{"id":504,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":410071,"byte_end":410079,"line_start":706,"line_end":706,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4086},{"krate":0,"index":4087}],"docs":"","sig":null,"attributes":[]},{"id":505,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":410298,"byte_end":410306,"line_start":715,"line_end":715,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":4091},{"krate":0,"index":4092}],"docs":"","sig":null,"attributes":[]},{"id":506,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":410531,"byte_end":410539,"line_start":724,"line_end":724,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":4096}],"docs":"","sig":null,"attributes":[]},{"id":507,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":410726,"byte_end":410734,"line_start":730,"line_end":730,"column_start":74,"column_end":82},"value":"","parent":null,"children":[{"krate":0,"index":4102}],"docs":"","sig":null,"attributes":[]},{"id":508,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":410904,"byte_end":410912,"line_start":736,"line_end":736,"column_start":53,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":4107}],"docs":"","sig":null,"attributes":[]},{"id":509,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":411042,"byte_end":411050,"line_start":743,"line_end":743,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4111},{"krate":0,"index":4112}],"docs":"","sig":null,"attributes":[]},{"id":510,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":411290,"byte_end":411298,"line_start":752,"line_end":752,"column_start":69,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":4116}],"docs":"","sig":null,"attributes":[]},{"id":511,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":411438,"byte_end":411446,"line_start":759,"line_end":759,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4120},{"krate":0,"index":4121}],"docs":"","sig":null,"attributes":[]},{"id":512,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":411666,"byte_end":411674,"line_start":768,"line_end":768,"column_start":56,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":4125}],"docs":"","sig":null,"attributes":[]},{"id":513,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":411831,"byte_end":411839,"line_start":775,"line_end":775,"column_start":55,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":4130},{"krate":0,"index":4131}],"docs":"","sig":null,"attributes":[]},{"id":514,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":412084,"byte_end":412092,"line_start":784,"line_end":784,"column_start":60,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":4135}],"docs":"","sig":null,"attributes":[]},{"id":515,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":412266,"byte_end":412274,"line_start":792,"line_end":792,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4139},{"krate":0,"index":4140}],"docs":"","sig":null,"attributes":[]},{"id":516,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":412494,"byte_end":412502,"line_start":801,"line_end":801,"column_start":56,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":4144}],"docs":"","sig":null,"attributes":[]},{"id":517,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":412659,"byte_end":412667,"line_start":808,"line_end":808,"column_start":55,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":4149},{"krate":0,"index":4150}],"docs":"","sig":null,"attributes":[]},{"id":518,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":412912,"byte_end":412920,"line_start":817,"line_end":817,"column_start":60,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":4154}],"docs":"","sig":null,"attributes":[]},{"id":519,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":413088,"byte_end":413096,"line_start":825,"line_end":825,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4158}],"docs":"","sig":null,"attributes":[]},{"id":520,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":413253,"byte_end":413261,"line_start":833,"line_end":833,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4162}],"docs":"","sig":null,"attributes":[]},{"id":521,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":413416,"byte_end":413424,"line_start":841,"line_end":841,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4166}],"docs":"","sig":null,"attributes":[]},{"id":522,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":413608,"byte_end":413616,"line_start":849,"line_end":849,"column_start":54,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":4170},{"krate":0,"index":4171}],"docs":"","sig":null,"attributes":[]},{"id":523,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":413939,"byte_end":413947,"line_start":861,"line_end":861,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4176}],"docs":"","sig":null,"attributes":[]},{"id":524,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":414048,"byte_end":414056,"line_start":867,"line_end":867,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4182}],"docs":"","sig":null,"attributes":[]},{"id":525,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":414159,"byte_end":414167,"line_start":873,"line_end":873,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4187}],"docs":"","sig":null,"attributes":[]},{"id":526,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":414268,"byte_end":414276,"line_start":879,"line_end":879,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4191}],"docs":"","sig":null,"attributes":[]},{"id":527,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":414396,"byte_end":414404,"line_start":885,"line_end":885,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4195}],"docs":"","sig":null,"attributes":[]},{"id":528,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":414900,"byte_end":414908,"line_start":906,"line_end":906,"column_start":27,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":529,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":414947,"byte_end":414955,"line_start":908,"line_end":908,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4209}],"docs":"","sig":null,"attributes":[]},{"id":530,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":415901,"byte_end":415909,"line_start":951,"line_end":951,"column_start":23,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":531,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":415956,"byte_end":415964,"line_start":953,"line_end":953,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4216}],"docs":"","sig":null,"attributes":[]},{"id":532,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":416117,"byte_end":416125,"line_start":959,"line_end":959,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4220}],"docs":"","sig":null,"attributes":[]},{"id":533,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":416296,"byte_end":416304,"line_start":967,"line_end":967,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4225}],"docs":"","sig":null,"attributes":[]},{"id":534,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":416506,"byte_end":416514,"line_start":975,"line_end":975,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":4229}],"docs":"","sig":null,"attributes":[]},{"id":535,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":416755,"byte_end":416763,"line_start":985,"line_end":985,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4233}],"docs":"","sig":null,"attributes":[]},{"id":536,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":416901,"byte_end":416909,"line_start":991,"line_end":991,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4237},{"krate":0,"index":4238},{"krate":0,"index":4239},{"krate":0,"index":4240},{"krate":0,"index":4241},{"krate":0,"index":4242},{"krate":0,"index":4243},{"krate":0,"index":4244}],"docs":"","sig":null,"attributes":[]},{"id":537,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":419115,"byte_end":419123,"line_start":1084,"line_end":1084,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4248},{"krate":0,"index":4249},{"krate":0,"index":4250},{"krate":0,"index":4251},{"krate":0,"index":4252},{"krate":0,"index":4253},{"krate":0,"index":4254},{"krate":0,"index":4255},{"krate":0,"index":4257},{"krate":0,"index":4259},{"krate":0,"index":4260},{"krate":0,"index":4261},{"krate":0,"index":4262},{"krate":0,"index":4264},{"krate":0,"index":4265},{"krate":0,"index":4266},{"krate":0,"index":4267},{"krate":0,"index":4268}],"docs":"","sig":null,"attributes":[]},{"id":538,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":423494,"byte_end":423502,"line_start":1257,"line_end":1257,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4272},{"krate":0,"index":4273}],"docs":"","sig":null,"attributes":[]},{"id":539,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":424089,"byte_end":424097,"line_start":1279,"line_end":1279,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4277},{"krate":0,"index":4278},{"krate":0,"index":4279},{"krate":0,"index":4280},{"krate":0,"index":4281},{"krate":0,"index":4282},{"krate":0,"index":4283},{"krate":0,"index":4284},{"krate":0,"index":4285}],"docs":"","sig":null,"attributes":[]},{"id":540,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":426605,"byte_end":426613,"line_start":1370,"line_end":1370,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4289},{"krate":0,"index":4290}],"docs":"","sig":null,"attributes":[]},{"id":541,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":427767,"byte_end":427775,"line_start":1405,"line_end":1405,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4294},{"krate":0,"index":4295},{"krate":0,"index":4296},{"krate":0,"index":4297},{"krate":0,"index":4298}],"docs":"","sig":null,"attributes":[]},{"id":542,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":429281,"byte_end":429289,"line_start":1459,"line_end":1459,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4302},{"krate":0,"index":4303}],"docs":"","sig":null,"attributes":[]},{"id":543,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":429907,"byte_end":429915,"line_start":1481,"line_end":1481,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4307},{"krate":0,"index":4309},{"krate":0,"index":4311},{"krate":0,"index":4312},{"krate":0,"index":4313},{"krate":0,"index":4314},{"krate":0,"index":4315},{"krate":0,"index":4316}],"docs":"","sig":null,"attributes":[]},{"id":544,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":432844,"byte_end":432852,"line_start":1563,"line_end":1563,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4320},{"krate":0,"index":4321}],"docs":"","sig":null,"attributes":[]},{"id":545,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":433026,"byte_end":433034,"line_start":1572,"line_end":1572,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4325},{"krate":0,"index":4326}],"docs":"","sig":null,"attributes":[]},{"id":546,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":433275,"byte_end":433283,"line_start":1581,"line_end":1581,"column_start":52,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":4331},{"krate":0,"index":4332}],"docs":"","sig":null,"attributes":[]},{"id":547,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":433517,"byte_end":433525,"line_start":1590,"line_end":1590,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":4336}],"docs":"","sig":null,"attributes":[]},{"id":548,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":433712,"byte_end":433720,"line_start":1596,"line_end":1596,"column_start":74,"column_end":82},"value":"","parent":null,"children":[{"krate":0,"index":4342}],"docs":"","sig":null,"attributes":[]},{"id":549,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":433890,"byte_end":433898,"line_start":1602,"line_end":1602,"column_start":53,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":4347}],"docs":"","sig":null,"attributes":[]},{"id":550,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":434028,"byte_end":434036,"line_start":1609,"line_end":1609,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4351},{"krate":0,"index":4352}],"docs":"","sig":null,"attributes":[]},{"id":551,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":434294,"byte_end":434302,"line_start":1618,"line_end":1618,"column_start":69,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":4356}],"docs":"","sig":null,"attributes":[]},{"id":552,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":434442,"byte_end":434450,"line_start":1625,"line_end":1625,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4360},{"krate":0,"index":4361}],"docs":"","sig":null,"attributes":[]},{"id":553,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":434733,"byte_end":434741,"line_start":1638,"line_end":1638,"column_start":56,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":4365}],"docs":"","sig":null,"attributes":[]},{"id":554,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":434898,"byte_end":434906,"line_start":1645,"line_end":1645,"column_start":55,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":4370},{"krate":0,"index":4371}],"docs":"","sig":null,"attributes":[]},{"id":555,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":435216,"byte_end":435224,"line_start":1658,"line_end":1658,"column_start":60,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":4375}],"docs":"","sig":null,"attributes":[]},{"id":556,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":435425,"byte_end":435433,"line_start":1667,"line_end":1667,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4379},{"krate":0,"index":4380}],"docs":"","sig":null,"attributes":[]},{"id":557,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":435716,"byte_end":435724,"line_start":1680,"line_end":1680,"column_start":56,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":4384}],"docs":"","sig":null,"attributes":[]},{"id":558,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":435881,"byte_end":435889,"line_start":1687,"line_end":1687,"column_start":55,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":4389},{"krate":0,"index":4390}],"docs":"","sig":null,"attributes":[]},{"id":559,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":436199,"byte_end":436207,"line_start":1700,"line_end":1700,"column_start":60,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":4394}],"docs":"","sig":null,"attributes":[]},{"id":560,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":436402,"byte_end":436410,"line_start":1709,"line_end":1709,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4398}],"docs":"","sig":null,"attributes":[]},{"id":561,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":436567,"byte_end":436575,"line_start":1717,"line_end":1717,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4402}],"docs":"","sig":null,"attributes":[]},{"id":562,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":436730,"byte_end":436738,"line_start":1725,"line_end":1725,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4406}],"docs":"","sig":null,"attributes":[]},{"id":563,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":436922,"byte_end":436930,"line_start":1733,"line_end":1733,"column_start":54,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":4410},{"krate":0,"index":4411}],"docs":"","sig":null,"attributes":[]},{"id":564,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":437387,"byte_end":437395,"line_start":1751,"line_end":1751,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4416}],"docs":"","sig":null,"attributes":[]},{"id":565,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":437504,"byte_end":437512,"line_start":1757,"line_end":1757,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4422}],"docs":"","sig":null,"attributes":[]},{"id":566,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":437624,"byte_end":437632,"line_start":1763,"line_end":1763,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4427}],"docs":"","sig":null,"attributes":[]},{"id":567,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":437747,"byte_end":437755,"line_start":1769,"line_end":1769,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4431}],"docs":"","sig":null,"attributes":[]},{"id":568,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":438249,"byte_end":438261,"line_start":1790,"line_end":1790,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":4433},{"krate":0,"index":4434},{"krate":0,"index":4435},{"krate":0,"index":4436},{"krate":0,"index":4437},{"krate":0,"index":4438},{"krate":0,"index":4439},{"krate":0,"index":4442},{"krate":0,"index":4445}],"docs":"","sig":null,"attributes":[]},{"id":569,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":440693,"byte_end":440705,"line_start":1867,"line_end":1867,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":4449},{"krate":0,"index":4450},{"krate":0,"index":4451},{"krate":0,"index":4452},{"krate":0,"index":4453},{"krate":0,"index":4454},{"krate":0,"index":4455},{"krate":0,"index":4458},{"krate":0,"index":4461},{"krate":0,"index":4464},{"krate":0,"index":4465},{"krate":0,"index":4466}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","byte_start":2692,"byte_end":2700,"line_start":67,"line_end":67,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":275}},{"kind":"Mod","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","byte_start":2710,"byte_end":2719,"line_start":68,"line_end":68,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":282}},{"kind":"Mod","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\lib.rs","byte_start":2776,"byte_end":2779,"line_start":73,"line_end":73,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1112}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\angle.rs","byte_start":6672,"byte_end":6677,"line_start":28,"line_end":28,"column_start":9,"column_end":14},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":4519},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\angle.rs","byte_start":6851,"byte_end":6856,"line_start":40,"line_end":40,"column_start":9,"column_end":14},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":4519},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\angle.rs","byte_start":7124,"byte_end":7129,"line_start":57,"line_end":57,"column_start":9,"column_end":14},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":4519},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\angle.rs","byte_start":7668,"byte_end":7673,"line_start":77,"line_end":77,"column_start":9,"column_end":14},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":4519},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\angle.rs","byte_start":8358,"byte_end":8363,"line_start":104,"line_end":104,"column_start":9,"column_end":14},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":4519},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\angle.rs","byte_start":8659,"byte_end":8664,"line_start":120,"line_end":120,"column_start":9,"column_end":14},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":4519},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\angle.rs","byte_start":8768,"byte_end":8773,"line_start":129,"line_end":129,"column_start":9,"column_end":14},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":4519},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\angle.rs","byte_start":9213,"byte_end":9218,"line_start":154,"line_end":154,"column_start":9,"column_end":14},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":4519},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\angle.rs","byte_start":9933,"byte_end":9938,"line_start":184,"line_end":184,"column_start":37,"column_end":42},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":4519},"to":{"krate":1,"index":2897}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\angle.rs","byte_start":10119,"byte_end":10124,"line_start":191,"line_end":191,"column_start":51,"column_end":56},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":4519},"to":{"krate":1,"index":2897}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\angle.rs","byte_start":10284,"byte_end":10289,"line_start":198,"line_end":198,"column_start":29,"column_end":34},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":4519},"to":{"krate":1,"index":7045}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\angle.rs","byte_start":10454,"byte_end":10459,"line_start":204,"line_end":204,"column_start":55,"column_end":60},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":4519},"to":{"krate":1,"index":7045}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\angle.rs","byte_start":10610,"byte_end":10615,"line_start":210,"line_end":210,"column_start":37,"column_end":42},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":4519},"to":{"krate":1,"index":2928}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\angle.rs","byte_start":10763,"byte_end":10768,"line_start":216,"line_end":216,"column_start":47,"column_end":52},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":4519},"to":{"krate":1,"index":2902}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\angle.rs","byte_start":10961,"byte_end":10966,"line_start":223,"line_end":223,"column_start":37,"column_end":42},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":4519},"to":{"krate":1,"index":2932}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\angle.rs","byte_start":11114,"byte_end":11119,"line_start":229,"line_end":229,"column_start":47,"column_end":52},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":4519},"to":{"krate":1,"index":2912}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\angle.rs","byte_start":11286,"byte_end":11291,"line_start":237,"line_end":237,"column_start":40,"column_end":45},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":4519},"to":{"krate":1,"index":2912}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\angle.rs","byte_start":11475,"byte_end":11480,"line_start":245,"line_end":245,"column_start":40,"column_end":45},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":4519},"to":{"krate":1,"index":2940}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\angle.rs","byte_start":11608,"byte_end":11613,"line_start":251,"line_end":251,"column_start":40,"column_end":45},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":4519},"to":{"krate":1,"index":2907}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\angle.rs","byte_start":11797,"byte_end":11802,"line_start":259,"line_end":259,"column_start":40,"column_end":45},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":4519},"to":{"krate":1,"index":2936}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\angle.rs","byte_start":11924,"byte_end":11929,"line_start":265,"line_end":265,"column_start":34,"column_end":39},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":4519},"to":{"krate":1,"index":2924}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\angle.rs","byte_start":12070,"byte_end":12075,"line_start":272,"line_end":272,"column_start":38,"column_end":43},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":4519},"to":{"krate":0,"index":276}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":19743,"byte_end":19748,"line_start":70,"line_end":70,"column_start":27,"column_end":32},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":370},"to":{"krate":1,"index":9025}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":19887,"byte_end":19892,"line_start":77,"line_end":77,"column_start":27,"column_end":32},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":370},"to":{"krate":1,"index":2840}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":19931,"byte_end":19936,"line_start":79,"line_end":79,"column_start":29,"column_end":34},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":370},"to":{"krate":1,"index":2451}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":20074,"byte_end":20079,"line_start":85,"line_end":85,"column_start":37,"column_end":42},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":370},"to":{"krate":1,"index":2481}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":20219,"byte_end":20224,"line_start":91,"line_end":91,"column_start":23,"column_end":28},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":370},"to":{"krate":1,"index":2486}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":20273,"byte_end":20278,"line_start":93,"line_end":93,"column_start":39,"column_end":44},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":370},"to":{"krate":1,"index":8819}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":20479,"byte_end":20484,"line_start":102,"line_end":102,"column_start":12,"column_end":17},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":370},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":21129,"byte_end":21134,"line_start":128,"line_end":128,"column_start":12,"column_end":17},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":370},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":22846,"byte_end":22851,"line_start":177,"line_end":177,"column_start":12,"column_end":17},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":370},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":24293,"byte_end":24298,"line_start":225,"line_end":225,"column_start":12,"column_end":17},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":370},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":24583,"byte_end":24588,"line_start":239,"line_end":239,"column_start":12,"column_end":17},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":370},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":25070,"byte_end":25075,"line_start":267,"line_end":267,"column_start":12,"column_end":17},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":370},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":26290,"byte_end":26295,"line_start":303,"line_end":303,"column_start":12,"column_end":17},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":370},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":27292,"byte_end":27297,"line_start":344,"line_end":344,"column_start":12,"column_end":17},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":370},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":27610,"byte_end":27615,"line_start":355,"line_end":355,"column_start":12,"column_end":17},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":370},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":27836,"byte_end":27841,"line_start":365,"line_end":365,"column_start":12,"column_end":17},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":370},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":28040,"byte_end":28045,"line_start":376,"line_end":376,"column_start":12,"column_end":17},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":370},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":28245,"byte_end":28250,"line_start":386,"line_end":386,"column_start":35,"column_end":40},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":370},"to":{"krate":1,"index":2907}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":28468,"byte_end":28473,"line_start":395,"line_end":395,"column_start":47,"column_end":52},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":370},"to":{"krate":1,"index":2936}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":28616,"byte_end":28621,"line_start":402,"line_end":402,"column_start":35,"column_end":40},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":370},"to":{"krate":1,"index":2912}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":28839,"byte_end":28844,"line_start":411,"line_end":411,"column_start":47,"column_end":52},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":370},"to":{"krate":1,"index":2940}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":29007,"byte_end":29012,"line_start":418,"line_end":418,"column_start":55,"column_end":60},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":370},"to":{"krate":1,"index":2907}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":29260,"byte_end":29265,"line_start":427,"line_end":427,"column_start":60,"column_end":65},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":370},"to":{"krate":1,"index":2936}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":29459,"byte_end":29464,"line_start":435,"line_end":435,"column_start":55,"column_end":60},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":370},"to":{"krate":1,"index":2912}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":29712,"byte_end":29717,"line_start":444,"line_end":444,"column_start":60,"column_end":65},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":370},"to":{"krate":1,"index":2940}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":29868,"byte_end":29873,"line_start":452,"line_end":452,"column_start":12,"column_end":17},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":370},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":30939,"byte_end":30944,"line_start":496,"line_end":496,"column_start":28,"column_end":33},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":370},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":33790,"byte_end":33795,"line_start":574,"line_end":574,"column_start":19,"column_end":24},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":370},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":33976,"byte_end":33981,"line_start":582,"line_end":582,"column_start":12,"column_end":17},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":370},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":34656,"byte_end":34661,"line_start":601,"line_end":601,"column_start":12,"column_end":17},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":370},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":35323,"byte_end":35328,"line_start":624,"line_end":624,"column_start":35,"column_end":40},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":370},"to":{"krate":1,"index":2736}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box2d.rs","byte_start":35483,"byte_end":35488,"line_start":633,"line_end":633,"column_start":33,"column_end":38},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":370},"to":{"krate":1,"index":2808}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":43922,"byte_end":43927,"line_start":40,"line_end":40,"column_start":27,"column_end":32},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":613},"to":{"krate":1,"index":9025}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":44066,"byte_end":44071,"line_start":47,"line_end":47,"column_start":27,"column_end":32},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":613},"to":{"krate":1,"index":2840}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":44110,"byte_end":44115,"line_start":49,"line_end":49,"column_start":29,"column_end":34},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":613},"to":{"krate":1,"index":2451}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":44253,"byte_end":44258,"line_start":55,"line_end":55,"column_start":37,"column_end":42},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":613},"to":{"krate":1,"index":2481}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":44398,"byte_end":44403,"line_start":61,"line_end":61,"column_start":23,"column_end":28},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":613},"to":{"krate":1,"index":2486}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":44452,"byte_end":44457,"line_start":63,"line_end":63,"column_start":39,"column_end":44},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":613},"to":{"krate":1,"index":8819}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":44658,"byte_end":44663,"line_start":72,"line_end":72,"column_start":12,"column_end":17},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":613},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":45092,"byte_end":45097,"line_start":89,"line_end":89,"column_start":12,"column_end":17},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":613},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":47123,"byte_end":47128,"line_start":146,"line_end":146,"column_start":12,"column_end":17},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":613},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":48574,"byte_end":48579,"line_start":204,"line_end":204,"column_start":12,"column_end":17},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":613},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":48882,"byte_end":48887,"line_start":219,"line_end":219,"column_start":12,"column_end":17},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":613},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":49406,"byte_end":49411,"line_start":248,"line_end":248,"column_start":12,"column_end":17},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":613},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":49877,"byte_end":49882,"line_start":263,"line_end":263,"column_start":12,"column_end":17},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":613},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":51064,"byte_end":51069,"line_start":310,"line_end":310,"column_start":12,"column_end":17},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":613},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":51386,"byte_end":51391,"line_start":321,"line_end":321,"column_start":12,"column_end":17},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":613},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":51612,"byte_end":51617,"line_start":331,"line_end":331,"column_start":12,"column_end":17},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":613},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":52187,"byte_end":52192,"line_start":360,"line_end":360,"column_start":12,"column_end":17},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":613},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":52392,"byte_end":52397,"line_start":370,"line_end":370,"column_start":35,"column_end":40},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":613},"to":{"krate":1,"index":2907}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":52615,"byte_end":52620,"line_start":379,"line_end":379,"column_start":47,"column_end":52},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":613},"to":{"krate":1,"index":2936}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":52781,"byte_end":52786,"line_start":387,"line_end":387,"column_start":35,"column_end":40},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":613},"to":{"krate":1,"index":2912}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":53012,"byte_end":53017,"line_start":396,"line_end":396,"column_start":47,"column_end":52},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":613},"to":{"krate":1,"index":2940}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":53198,"byte_end":53203,"line_start":404,"line_end":404,"column_start":55,"column_end":60},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":613},"to":{"krate":1,"index":2907}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":53459,"byte_end":53464,"line_start":413,"line_end":413,"column_start":60,"column_end":65},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":613},"to":{"krate":1,"index":2936}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":53666,"byte_end":53671,"line_start":421,"line_end":421,"column_start":55,"column_end":60},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":613},"to":{"krate":1,"index":2912}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":53927,"byte_end":53932,"line_start":430,"line_end":430,"column_start":60,"column_end":65},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":613},"to":{"krate":1,"index":2940}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":54091,"byte_end":54096,"line_start":438,"line_end":438,"column_start":12,"column_end":17},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":613},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":55380,"byte_end":55385,"line_start":493,"line_end":493,"column_start":28,"column_end":33},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":613},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":58251,"byte_end":58256,"line_start":571,"line_end":571,"column_start":19,"column_end":24},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":613},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":58437,"byte_end":58442,"line_start":579,"line_end":579,"column_start":12,"column_end":17},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":613},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":59121,"byte_end":59126,"line_start":598,"line_end":598,"column_start":12,"column_end":17},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":613},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":59794,"byte_end":59799,"line_start":623,"line_end":623,"column_start":35,"column_end":40},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":613},"to":{"krate":1,"index":2736}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\box3d.rs","byte_start":59954,"byte_end":59959,"line_start":632,"line_end":632,"column_start":33,"column_end":38},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":613},"to":{"krate":1,"index":2808}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\homogen.rs","byte_start":70216,"byte_end":70233,"line_start":34,"line_end":34,"column_start":27,"column_end":44},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":828},"to":{"krate":1,"index":2840}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\homogen.rs","byte_start":70272,"byte_end":70289,"line_start":36,"line_end":36,"column_start":29,"column_end":46},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":828},"to":{"krate":1,"index":2451}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\homogen.rs","byte_start":71325,"byte_end":71342,"line_start":81,"line_end":81,"column_start":19,"column_end":36},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":828},"to":{"krate":1,"index":2486}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\homogen.rs","byte_start":71390,"byte_end":71407,"line_start":83,"line_end":83,"column_start":26,"column_end":43},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":828},"to":{"krate":1,"index":2481}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\homogen.rs","byte_start":71599,"byte_end":71616,"line_start":92,"line_end":92,"column_start":21,"column_end":38},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":828},"to":{"krate":1,"index":9025}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\homogen.rs","byte_start":71815,"byte_end":71832,"line_start":104,"line_end":104,"column_start":12,"column_end":29},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":828},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\homogen.rs","byte_start":72158,"byte_end":72175,"line_start":118,"line_end":118,"column_start":59,"column_end":76},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":828},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\homogen.rs","byte_start":72980,"byte_end":72997,"line_start":148,"line_end":148,"column_start":43,"column_end":60},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":828},"to":{"krate":1,"index":2736}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\homogen.rs","byte_start":73175,"byte_end":73192,"line_start":155,"line_end":155,"column_start":43,"column_end":60},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":828},"to":{"krate":1,"index":2736}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\homogen.rs","byte_start":73369,"byte_end":73386,"line_start":162,"line_end":162,"column_start":48,"column_end":65},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":828},"to":{"krate":1,"index":2736}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\homogen.rs","byte_start":73560,"byte_end":73577,"line_start":169,"line_end":169,"column_start":41,"column_end":58},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":828},"to":{"krate":1,"index":2736}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\homogen.rs","byte_start":73743,"byte_end":73760,"line_start":176,"line_end":176,"column_start":39,"column_end":56},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":828},"to":{"krate":1,"index":8819}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":76500,"byte_end":76506,"line_start":44,"line_end":44,"column_start":29,"column_end":35},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":959},"to":{"krate":1,"index":2451}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":76624,"byte_end":76630,"line_start":50,"line_end":50,"column_start":27,"column_end":33},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":959},"to":{"krate":1,"index":2840}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":77198,"byte_end":77204,"line_start":78,"line_end":78,"column_start":12,"column_end":18},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":959},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":77372,"byte_end":77378,"line_start":86,"line_end":86,"column_start":19,"column_end":25},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":959},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":78447,"byte_end":78453,"line_start":124,"line_end":124,"column_start":24,"column_end":30},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":959},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":78800,"byte_end":78806,"line_start":138,"line_end":138,"column_start":29,"column_end":35},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":959},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":79258,"byte_end":79264,"line_start":151,"line_end":151,"column_start":39,"column_end":45},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":959},"to":{"krate":1,"index":8819}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":79395,"byte_end":79401,"line_start":157,"line_end":157,"column_start":33,"column_end":39},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":959},"to":{"krate":1,"index":2808}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":79526,"byte_end":79532,"line_start":164,"line_end":164,"column_start":27,"column_end":33},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":959},"to":{"krate":1,"index":9025}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":79660,"byte_end":79666,"line_start":171,"line_end":171,"column_start":25,"column_end":31},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":959},"to":{"krate":1,"index":2897}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":79869,"byte_end":79875,"line_start":180,"line_end":180,"column_start":39,"column_end":45},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":959},"to":{"krate":1,"index":2897}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":80094,"byte_end":80100,"line_start":189,"line_end":189,"column_start":44,"column_end":50},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":959},"to":{"krate":1,"index":7045}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":80308,"byte_end":80314,"line_start":196,"line_end":196,"column_start":74,"column_end":80},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":959},"to":{"krate":1,"index":7045}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":80488,"byte_end":80494,"line_start":203,"line_end":203,"column_start":37,"column_end":43},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":959},"to":{"krate":1,"index":2928}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":80626,"byte_end":80632,"line_start":210,"line_end":210,"column_start":25,"column_end":31},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":959},"to":{"krate":1,"index":2902}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":80841,"byte_end":80847,"line_start":219,"line_end":219,"column_start":37,"column_end":43},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":959},"to":{"krate":1,"index":2932}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":81025,"byte_end":81031,"line_start":226,"line_end":226,"column_start":39,"column_end":45},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":959},"to":{"krate":4,"index":723}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":81328,"byte_end":81334,"line_start":237,"line_end":237,"column_start":48,"column_end":54},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":959},"to":{"krate":1,"index":2912}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":81556,"byte_end":81562,"line_start":247,"line_end":247,"column_start":28,"column_end":34},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":959},"to":{"krate":1,"index":2907}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":81791,"byte_end":81797,"line_start":257,"line_end":257,"column_start":56,"column_end":62},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":959},"to":{"krate":1,"index":2936}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":81946,"byte_end":81952,"line_start":265,"line_end":265,"column_start":28,"column_end":34},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":959},"to":{"krate":1,"index":2912}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":82181,"byte_end":82187,"line_start":275,"line_end":275,"column_start":56,"column_end":62},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":959},"to":{"krate":1,"index":2940}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":82365,"byte_end":82371,"line_start":283,"line_end":283,"column_start":52,"column_end":58},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":959},"to":{"krate":1,"index":2907}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":82623,"byte_end":82629,"line_start":293,"line_end":293,"column_start":52,"column_end":58},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":959},"to":{"krate":1,"index":2912}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":82841,"byte_end":82847,"line_start":303,"line_end":303,"column_start":25,"column_end":31},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":959},"to":{"krate":1,"index":2924}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":83020,"byte_end":83026,"line_start":312,"line_end":312,"column_start":37,"column_end":43},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":959},"to":{"krate":1,"index":2481}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":83151,"byte_end":83157,"line_start":318,"line_end":318,"column_start":39,"column_end":45},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":959},"to":{"krate":1,"index":2528}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":83296,"byte_end":83302,"line_start":324,"line_end":324,"column_start":23,"column_end":29},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":959},"to":{"krate":1,"index":2486}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":83337,"byte_end":83343,"line_start":326,"line_end":326,"column_start":25,"column_end":31},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":959},"to":{"krate":1,"index":2517}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":83462,"byte_end":83468,"line_start":332,"line_end":332,"column_start":27,"column_end":33},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":959},"to":{"krate":0,"index":1116}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\length.rs","byte_start":83598,"byte_end":83604,"line_start":339,"line_end":339,"column_start":41,"column_end":47},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":959},"to":{"krate":0,"index":276}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\num.rs","byte_start":92367,"byte_end":92368,"line_start":32,"line_end":32,"column_start":36,"column_end":37},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":1119},"to":{"krate":0,"index":1116}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\num.rs","byte_start":92508,"byte_end":92509,"line_start":42,"line_end":42,"column_start":34,"column_end":35},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":1124},"to":{"krate":0,"index":1121}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\num.rs","byte_start":92650,"byte_end":92654,"line_start":49,"line_end":49,"column_start":18,"column_end":22},"kind":"SuperTrait","from":{"krate":1,"index":2840},"to":{"krate":0,"index":1126}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\num.rs","byte_start":92925,"byte_end":92929,"line_start":57,"line_end":57,"column_start":18,"column_end":22},"kind":"SuperTrait","from":{"krate":1,"index":2840},"to":{"krate":0,"index":1128}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\num.rs","byte_start":93235,"byte_end":93239,"line_start":65,"line_end":65,"column_start":17,"column_end":21},"kind":"SuperTrait","from":{"krate":1,"index":2840},"to":{"krate":0,"index":1130}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":95723,"byte_end":95730,"line_start":38,"line_end":38,"column_start":27,"column_end":34},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":1226},"to":{"krate":1,"index":2840}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":95769,"byte_end":95776,"line_start":40,"line_end":40,"column_start":29,"column_end":36},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":1226},"to":{"krate":1,"index":2451}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":97032,"byte_end":97039,"line_start":96,"line_end":96,"column_start":19,"column_end":26},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":1226},"to":{"krate":1,"index":2486}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":97087,"byte_end":97094,"line_start":98,"line_end":98,"column_start":26,"column_end":33},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":1226},"to":{"krate":1,"index":2481}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":97244,"byte_end":97251,"line_start":107,"line_end":107,"column_start":21,"column_end":28},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":1226},"to":{"krate":1,"index":9025}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":97465,"byte_end":97472,"line_start":119,"line_end":119,"column_start":39,"column_end":46},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":1226},"to":{"krate":1,"index":8819}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":97646,"byte_end":97653,"line_start":125,"line_end":125,"column_start":33,"column_end":40},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":1226},"to":{"krate":1,"index":2808}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":97770,"byte_end":97777,"line_start":131,"line_end":131,"column_start":12,"column_end":19},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":1226},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":98926,"byte_end":98933,"line_start":186,"line_end":186,"column_start":18,"column_end":25},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":1226},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":103995,"byte_end":104002,"line_start":386,"line_end":386,"column_start":24,"column_end":31},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":1226},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":104603,"byte_end":104610,"line_start":410,"line_end":410,"column_start":28,"column_end":35},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":1226},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":107424,"byte_end":107431,"line_start":488,"line_end":488,"column_start":19,"column_end":26},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":1226},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":107635,"byte_end":107642,"line_start":496,"line_end":496,"column_start":39,"column_end":46},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":1226},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":107831,"byte_end":107838,"line_start":503,"line_end":503,"column_start":40,"column_end":47},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":1226},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":107975,"byte_end":107982,"line_start":510,"line_end":510,"column_start":25,"column_end":32},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":1226},"to":{"krate":1,"index":2924}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":108162,"byte_end":108169,"line_start":519,"line_end":519,"column_start":39,"column_end":46},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":1226},"to":{"krate":1,"index":2897}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":108409,"byte_end":108416,"line_start":528,"line_end":528,"column_start":51,"column_end":58},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":1226},"to":{"krate":1,"index":2928}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":108603,"byte_end":108610,"line_start":536,"line_end":536,"column_start":41,"column_end":48},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":1226},"to":{"krate":1,"index":2897}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":108861,"byte_end":108868,"line_start":545,"line_end":545,"column_start":69,"column_end":76},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":1226},"to":{"krate":1,"index":2928}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":109008,"byte_end":109015,"line_start":552,"line_end":552,"column_start":25,"column_end":32},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":1226},"to":{"krate":1,"index":2902}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":109225,"byte_end":109232,"line_start":561,"line_end":561,"column_start":39,"column_end":46},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":1226},"to":{"krate":1,"index":2902}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":109472,"byte_end":109479,"line_start":570,"line_end":570,"column_start":51,"column_end":58},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":1226},"to":{"krate":1,"index":2932}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":109666,"byte_end":109673,"line_start":578,"line_end":578,"column_start":41,"column_end":48},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":1226},"to":{"krate":1,"index":2902}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":109924,"byte_end":109931,"line_start":587,"line_end":587,"column_start":69,"column_end":76},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":1226},"to":{"krate":1,"index":2932}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":110081,"byte_end":110088,"line_start":594,"line_end":594,"column_start":35,"column_end":42},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":1226},"to":{"krate":1,"index":2907}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":110309,"byte_end":110316,"line_start":603,"line_end":603,"column_start":56,"column_end":63},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":1226},"to":{"krate":1,"index":2936}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":110473,"byte_end":110480,"line_start":610,"line_end":610,"column_start":55,"column_end":62},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":1226},"to":{"krate":1,"index":2907}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":110726,"byte_end":110733,"line_start":619,"line_end":619,"column_start":60,"column_end":67},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":1226},"to":{"krate":1,"index":2936}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":110907,"byte_end":110914,"line_start":627,"line_end":627,"column_start":35,"column_end":42},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":1226},"to":{"krate":1,"index":2912}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":111135,"byte_end":111142,"line_start":636,"line_end":636,"column_start":56,"column_end":63},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":1226},"to":{"krate":1,"index":2940}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":111299,"byte_end":111306,"line_start":643,"line_end":643,"column_start":55,"column_end":62},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":1226},"to":{"krate":1,"index":2912}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":111552,"byte_end":111559,"line_start":652,"line_end":652,"column_start":60,"column_end":67},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":1226},"to":{"krate":1,"index":2940}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":111725,"byte_end":111732,"line_start":660,"line_end":660,"column_start":27,"column_end":34},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":1226},"to":{"krate":0,"index":1116}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":111839,"byte_end":111846,"line_start":667,"line_end":667,"column_start":29,"column_end":36},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":1226},"to":{"krate":0,"index":1126}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":112000,"byte_end":112007,"line_start":675,"line_end":675,"column_start":27,"column_end":34},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":1226},"to":{"krate":0,"index":1130}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":112159,"byte_end":112166,"line_start":683,"line_end":683,"column_start":29,"column_end":36},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":1226},"to":{"krate":0,"index":1128}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":112346,"byte_end":112353,"line_start":691,"line_end":691,"column_start":53,"column_end":60},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":1226},"to":{"krate":0,"index":276}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":112678,"byte_end":112685,"line_start":703,"line_end":703,"column_start":29,"column_end":36},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":1226},"to":{"krate":1,"index":2733}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":112786,"byte_end":112793,"line_start":709,"line_end":709,"column_start":29,"column_end":36},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":1226},"to":{"krate":1,"index":2736}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":112898,"byte_end":112905,"line_start":715,"line_end":715,"column_start":29,"column_end":36},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":1226},"to":{"krate":1,"index":2733}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":113006,"byte_end":113013,"line_start":721,"line_end":721,"column_start":29,"column_end":36},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":1226},"to":{"krate":1,"index":2736}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":113334,"byte_end":113341,"line_start":739,"line_end":739,"column_start":27,"column_end":34},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":1441},"to":{"krate":1,"index":2840}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":113380,"byte_end":113387,"line_start":741,"line_end":741,"column_start":29,"column_end":36},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":1441},"to":{"krate":1,"index":2451}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":114325,"byte_end":114332,"line_start":784,"line_end":784,"column_start":19,"column_end":26},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":1441},"to":{"krate":1,"index":2486}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":114380,"byte_end":114387,"line_start":786,"line_end":786,"column_start":26,"column_end":33},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":1441},"to":{"krate":1,"index":2481}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":114558,"byte_end":114565,"line_start":795,"line_end":795,"column_start":21,"column_end":28},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":1441},"to":{"krate":1,"index":9025}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":114767,"byte_end":114774,"line_start":806,"line_end":806,"column_start":39,"column_end":46},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":1441},"to":{"krate":1,"index":8819}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":115015,"byte_end":115022,"line_start":816,"line_end":816,"column_start":33,"column_end":40},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":1441},"to":{"krate":1,"index":2808}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":115159,"byte_end":115166,"line_start":822,"line_end":822,"column_start":12,"column_end":19},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":1441},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":116403,"byte_end":116410,"line_start":879,"line_end":879,"column_start":18,"column_end":25},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":1441},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":122001,"byte_end":122008,"line_start":1094,"line_end":1094,"column_start":24,"column_end":31},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":1441},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":122747,"byte_end":122754,"line_start":1126,"line_end":1126,"column_start":28,"column_end":35},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":1441},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":125654,"byte_end":125661,"line_start":1208,"line_end":1208,"column_start":19,"column_end":26},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":1441},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":125887,"byte_end":125894,"line_start":1216,"line_end":1216,"column_start":39,"column_end":46},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":1441},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":126151,"byte_end":126158,"line_start":1227,"line_end":1227,"column_start":40,"column_end":47},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":1441},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":126295,"byte_end":126302,"line_start":1234,"line_end":1234,"column_start":25,"column_end":32},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":1441},"to":{"krate":1,"index":2924}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":126491,"byte_end":126498,"line_start":1243,"line_end":1243,"column_start":39,"column_end":46},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":1441},"to":{"krate":1,"index":2897}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":126807,"byte_end":126814,"line_start":1256,"line_end":1256,"column_start":51,"column_end":58},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":1441},"to":{"krate":1,"index":2928}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":127032,"byte_end":127039,"line_start":1265,"line_end":1265,"column_start":41,"column_end":48},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":1441},"to":{"krate":1,"index":2897}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":127308,"byte_end":127315,"line_start":1274,"line_end":1274,"column_start":69,"column_end":76},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":1441},"to":{"krate":1,"index":2928}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":127455,"byte_end":127462,"line_start":1281,"line_end":1281,"column_start":25,"column_end":32},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":1441},"to":{"krate":1,"index":2902}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":127690,"byte_end":127697,"line_start":1290,"line_end":1290,"column_start":39,"column_end":46},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":1441},"to":{"krate":1,"index":2902}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":128006,"byte_end":128013,"line_start":1303,"line_end":1303,"column_start":51,"column_end":58},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":1441},"to":{"krate":1,"index":2932}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":128231,"byte_end":128238,"line_start":1312,"line_end":1312,"column_start":41,"column_end":48},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":1441},"to":{"krate":1,"index":2902}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":128507,"byte_end":128514,"line_start":1321,"line_end":1321,"column_start":69,"column_end":76},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":1441},"to":{"krate":1,"index":2932}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":128664,"byte_end":128671,"line_start":1328,"line_end":1328,"column_start":35,"column_end":42},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":1441},"to":{"krate":1,"index":2907}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":128946,"byte_end":128953,"line_start":1341,"line_end":1341,"column_start":47,"column_end":54},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":1441},"to":{"krate":1,"index":2936}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":129155,"byte_end":129162,"line_start":1350,"line_end":1350,"column_start":55,"column_end":62},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":1441},"to":{"krate":1,"index":2907}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":129473,"byte_end":129480,"line_start":1363,"line_end":1363,"column_start":60,"column_end":67},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":1441},"to":{"krate":1,"index":2936}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":129626,"byte_end":129633,"line_start":1370,"line_end":1370,"column_start":35,"column_end":42},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":1441},"to":{"krate":1,"index":2912}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":129908,"byte_end":129915,"line_start":1383,"line_end":1383,"column_start":47,"column_end":54},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":1441},"to":{"krate":1,"index":2940}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":130117,"byte_end":130124,"line_start":1392,"line_end":1392,"column_start":55,"column_end":62},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":1441},"to":{"krate":1,"index":2912}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":130435,"byte_end":130442,"line_start":1405,"line_end":1405,"column_start":60,"column_end":67},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":1441},"to":{"krate":1,"index":2940}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":130580,"byte_end":130587,"line_start":1412,"line_end":1412,"column_start":27,"column_end":34},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":1441},"to":{"krate":0,"index":1116}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":130694,"byte_end":130701,"line_start":1419,"line_end":1419,"column_start":29,"column_end":36},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":1441},"to":{"krate":0,"index":1126}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":130855,"byte_end":130862,"line_start":1427,"line_end":1427,"column_start":27,"column_end":34},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":1441},"to":{"krate":0,"index":1130}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":131014,"byte_end":131021,"line_start":1435,"line_end":1435,"column_start":29,"column_end":36},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":1441},"to":{"krate":0,"index":1128}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":131201,"byte_end":131208,"line_start":1443,"line_end":1443,"column_start":53,"column_end":60},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":1441},"to":{"krate":0,"index":276}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":131667,"byte_end":131674,"line_start":1461,"line_end":1461,"column_start":29,"column_end":36},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":1441},"to":{"krate":1,"index":2733}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":131783,"byte_end":131790,"line_start":1467,"line_end":1467,"column_start":29,"column_end":36},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":1441},"to":{"krate":1,"index":2736}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":131904,"byte_end":131911,"line_start":1473,"line_end":1473,"column_start":32,"column_end":39},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":1441},"to":{"krate":1,"index":2733}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\point.rs","byte_start":132026,"byte_end":132033,"line_start":1479,"line_end":1479,"column_start":32,"column_end":39},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":1441},"to":{"krate":1,"index":2736}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":147735,"byte_end":147739,"line_start":72,"line_end":72,"column_start":27,"column_end":31},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":1735},"to":{"krate":1,"index":9025}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":147882,"byte_end":147886,"line_start":79,"line_end":79,"column_start":27,"column_end":31},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":1735},"to":{"krate":1,"index":2840}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":147925,"byte_end":147929,"line_start":81,"line_end":81,"column_start":29,"column_end":33},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":1735},"to":{"krate":1,"index":2451}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":148071,"byte_end":148075,"line_start":87,"line_end":87,"column_start":37,"column_end":41},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":1735},"to":{"krate":1,"index":2481}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":148223,"byte_end":148227,"line_start":93,"line_end":93,"column_start":23,"column_end":27},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":1735},"to":{"krate":1,"index":2486}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":148276,"byte_end":148280,"line_start":95,"line_end":95,"column_start":39,"column_end":43},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":1735},"to":{"krate":1,"index":8819}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":148553,"byte_end":148557,"line_start":105,"line_end":105,"column_start":33,"column_end":37},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":1735},"to":{"krate":1,"index":2808}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":148671,"byte_end":148675,"line_start":111,"line_end":111,"column_start":12,"column_end":16},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":1735},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":148843,"byte_end":148847,"line_start":119,"line_end":119,"column_start":12,"column_end":16},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":1735},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":149248,"byte_end":149252,"line_start":139,"line_end":139,"column_start":12,"column_end":16},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":1735},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":150520,"byte_end":150524,"line_start":209,"line_end":209,"column_start":12,"column_end":16},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":1735},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":151043,"byte_end":151047,"line_start":227,"line_end":227,"column_start":12,"column_end":16},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":1735},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":151403,"byte_end":151407,"line_start":243,"line_end":243,"column_start":12,"column_end":16},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":1735},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":151827,"byte_end":151831,"line_start":260,"line_end":260,"column_start":12,"column_end":16},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":1735},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":152401,"byte_end":152405,"line_start":277,"line_end":277,"column_start":12,"column_end":16},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":1735},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":153252,"byte_end":153256,"line_start":300,"line_end":300,"column_start":12,"column_end":16},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":1735},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":153874,"byte_end":153878,"line_start":319,"line_end":319,"column_start":12,"column_end":16},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":1735},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":154691,"byte_end":154695,"line_start":341,"line_end":341,"column_start":12,"column_end":16},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":1735},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":155063,"byte_end":155067,"line_start":355,"line_end":355,"column_start":12,"column_end":16},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":1735},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":155290,"byte_end":155294,"line_start":365,"line_end":365,"column_start":12,"column_end":16},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":1735},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":155678,"byte_end":155682,"line_start":382,"line_end":382,"column_start":12,"column_end":16},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":1735},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":156020,"byte_end":156024,"line_start":395,"line_end":395,"column_start":39,"column_end":43},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":1735},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":156148,"byte_end":156152,"line_start":402,"line_end":402,"column_start":38,"column_end":42},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":1735},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":156287,"byte_end":156291,"line_start":409,"line_end":409,"column_start":38,"column_end":42},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":1735},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":156491,"byte_end":156495,"line_start":420,"line_end":420,"column_start":35,"column_end":39},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":1735},"to":{"krate":1,"index":2907}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":156715,"byte_end":156719,"line_start":429,"line_end":429,"column_start":47,"column_end":51},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":1735},"to":{"krate":1,"index":2936}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":156862,"byte_end":156866,"line_start":436,"line_end":436,"column_start":35,"column_end":39},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":1735},"to":{"krate":1,"index":2912}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":157094,"byte_end":157098,"line_start":445,"line_end":445,"column_start":47,"column_end":51},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":1735},"to":{"krate":1,"index":2940}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":157261,"byte_end":157265,"line_start":452,"line_end":452,"column_start":55,"column_end":59},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":1735},"to":{"krate":1,"index":2907}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":157523,"byte_end":157527,"line_start":461,"line_end":461,"column_start":60,"column_end":64},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":1735},"to":{"krate":1,"index":2936}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":157733,"byte_end":157737,"line_start":469,"line_end":469,"column_start":55,"column_end":59},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":1735},"to":{"krate":1,"index":2912}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":157995,"byte_end":157999,"line_start":478,"line_end":478,"column_start":60,"column_end":64},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":1735},"to":{"krate":1,"index":2940}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":158168,"byte_end":158172,"line_start":486,"line_end":486,"column_start":18,"column_end":22},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":1735},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":158813,"byte_end":158817,"line_start":509,"line_end":509,"column_start":28,"column_end":32},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":1735},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":162104,"byte_end":162108,"line_start":597,"line_end":597,"column_start":19,"column_end":23},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":1735},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":162357,"byte_end":162361,"line_start":605,"line_end":605,"column_start":76,"column_end":80},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":1735},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rect.rs","byte_start":164423,"byte_end":164427,"line_start":656,"line_end":656,"column_start":35,"column_end":39},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":1735},"to":{"krate":1,"index":2736}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rigid.rs","byte_start":174950,"byte_end":174966,"line_start":28,"line_end":28,"column_start":19,"column_end":35},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":4617},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rigid.rs","byte_start":175279,"byte_end":175295,"line_start":39,"line_end":39,"column_start":25,"column_end":41},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":4617},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rigid.rs","byte_start":175577,"byte_end":175593,"line_start":48,"line_end":48,"column_start":40,"column_end":56},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":4617},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rigid.rs","byte_start":179979,"byte_end":179995,"line_start":187,"line_end":187,"column_start":9,"column_end":25},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":4617},"to":{"krate":1,"index":2736}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rigid.rs","byte_start":180171,"byte_end":180187,"line_start":194,"line_end":194,"column_start":67,"column_end":83},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":4617},"to":{"krate":1,"index":2736}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":184076,"byte_end":184086,"line_start":40,"line_end":40,"column_start":34,"column_end":44},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":2070},"to":{"krate":1,"index":2840}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":184139,"byte_end":184149,"line_start":42,"line_end":42,"column_start":36,"column_end":46},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":2070},"to":{"krate":1,"index":2451}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":184331,"byte_end":184341,"line_start":51,"line_end":51,"column_start":26,"column_end":36},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":2070},"to":{"krate":1,"index":2486}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":184403,"byte_end":184413,"line_start":53,"line_end":53,"column_start":33,"column_end":43},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":2070},"to":{"krate":1,"index":2481}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":184564,"byte_end":184574,"line_start":62,"line_end":62,"column_start":28,"column_end":38},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":2070},"to":{"krate":1,"index":9025}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":184719,"byte_end":184729,"line_start":71,"line_end":71,"column_start":19,"column_end":29},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":2070},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":185280,"byte_end":185290,"line_start":96,"line_end":96,"column_start":25,"column_end":35},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":2070},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":186935,"byte_end":186945,"line_start":159,"line_end":159,"column_start":19,"column_end":29},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":2070},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":187150,"byte_end":187160,"line_start":169,"line_end":169,"column_start":26,"column_end":36},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":2070},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":188559,"byte_end":188569,"line_start":209,"line_end":209,"column_start":19,"column_end":29},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":2070},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":189989,"byte_end":189999,"line_start":251,"line_end":251,"column_start":34,"column_end":44},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":2136},"to":{"krate":1,"index":2840}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":190052,"byte_end":190062,"line_start":253,"line_end":253,"column_start":36,"column_end":46},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":2136},"to":{"krate":1,"index":2451}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":190329,"byte_end":190339,"line_start":265,"line_end":265,"column_start":26,"column_end":36},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":2136},"to":{"krate":1,"index":2486}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":190401,"byte_end":190411,"line_start":267,"line_end":267,"column_start":33,"column_end":43},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":2136},"to":{"krate":1,"index":2481}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":190617,"byte_end":190627,"line_start":276,"line_end":276,"column_start":28,"column_end":38},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":2136},"to":{"krate":1,"index":9025}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":190840,"byte_end":190850,"line_start":288,"line_end":288,"column_start":19,"column_end":29},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":2136},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":191721,"byte_end":191731,"line_start":319,"line_end":319,"column_start":19,"column_end":29},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":2136},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":194278,"byte_end":194288,"line_start":403,"line_end":403,"column_start":19,"column_end":29},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":2136},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":203926,"byte_end":203936,"line_start":706,"line_end":706,"column_start":46,"column_end":56},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":2136},"to":{"krate":1,"index":8819}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\rotation.rs","byte_start":204191,"byte_end":204201,"line_start":716,"line_end":716,"column_start":35,"column_end":45},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":2136},"to":{"krate":0,"index":276}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":214801,"byte_end":214806,"line_start":53,"line_end":53,"column_start":19,"column_end":24},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":2281},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":219468,"byte_end":219473,"line_start":241,"line_end":241,"column_start":28,"column_end":33},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":2281},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":221359,"byte_end":221364,"line_start":300,"line_end":300,"column_start":47,"column_end":52},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":2281},"to":{"krate":1,"index":2907}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":221587,"byte_end":221592,"line_start":310,"line_end":310,"column_start":32,"column_end":37},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":2281},"to":{"krate":1,"index":2897}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":221827,"byte_end":221832,"line_start":320,"line_end":320,"column_start":32,"column_end":37},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":2281},"to":{"krate":1,"index":2902}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":222190,"byte_end":222195,"line_start":332,"line_end":332,"column_start":44,"column_end":49},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":2281},"to":{"krate":1,"index":2481}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":222330,"byte_end":222335,"line_start":338,"line_end":338,"column_start":30,"column_end":35},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":2281},"to":{"krate":1,"index":2486}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":222398,"byte_end":222403,"line_start":340,"line_end":340,"column_start":46,"column_end":51},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":2281},"to":{"krate":1,"index":2528}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":222558,"byte_end":222563,"line_start":346,"line_end":346,"column_start":32,"column_end":37},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":2281},"to":{"krate":1,"index":2517}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":222698,"byte_end":222703,"line_start":352,"line_end":352,"column_start":36,"column_end":41},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":2281},"to":{"krate":1,"index":2451}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":222840,"byte_end":222845,"line_start":358,"line_end":358,"column_start":34,"column_end":39},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":2281},"to":{"krate":1,"index":2840}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":222908,"byte_end":222913,"line_start":360,"line_end":360,"column_start":46,"column_end":51},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":2281},"to":{"krate":1,"index":8819}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":223058,"byte_end":223063,"line_start":366,"line_end":366,"column_start":40,"column_end":45},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":2281},"to":{"krate":1,"index":2808}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":223180,"byte_end":223185,"line_start":372,"line_end":372,"column_start":34,"column_end":39},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":2281},"to":{"krate":1,"index":9025}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\scale.rs","byte_start":223315,"byte_end":223320,"line_start":378,"line_end":378,"column_start":32,"column_end":37},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":2281},"to":{"krate":0,"index":1121}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\side_offsets.rs","byte_start":226315,"byte_end":226328,"line_start":60,"line_end":60,"column_start":27,"column_end":40},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":2428},"to":{"krate":1,"index":2840}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\side_offsets.rs","byte_start":226367,"byte_end":226380,"line_start":62,"line_end":62,"column_start":29,"column_end":42},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":2428},"to":{"krate":1,"index":2451}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\side_offsets.rs","byte_start":226664,"byte_end":226677,"line_start":74,"line_end":74,"column_start":19,"column_end":32},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":2428},"to":{"krate":1,"index":2486}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\side_offsets.rs","byte_start":226725,"byte_end":226738,"line_start":76,"line_end":76,"column_start":26,"column_end":39},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":2428},"to":{"krate":1,"index":2481}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\side_offsets.rs","byte_start":226994,"byte_end":227007,"line_start":88,"line_end":88,"column_start":21,"column_end":34},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":2428},"to":{"krate":1,"index":9025}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\side_offsets.rs","byte_start":227247,"byte_end":227260,"line_start":100,"line_end":100,"column_start":39,"column_end":52},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":2428},"to":{"krate":1,"index":8819}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\side_offsets.rs","byte_start":227504,"byte_end":227517,"line_start":110,"line_end":110,"column_start":33,"column_end":46},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":2428},"to":{"krate":1,"index":2808}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\side_offsets.rs","byte_start":227793,"byte_end":227806,"line_start":122,"line_end":122,"column_start":12,"column_end":25},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":2428},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\side_offsets.rs","byte_start":230884,"byte_end":230897,"line_start":229,"line_end":229,"column_start":20,"column_end":33},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":2428},"to":{"krate":1,"index":2897}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\side_offsets.rs","byte_start":231232,"byte_end":231245,"line_start":244,"line_end":244,"column_start":35,"column_end":48},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":2428},"to":{"krate":1,"index":2907}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\side_offsets.rs","byte_start":231580,"byte_end":231593,"line_start":258,"line_end":258,"column_start":47,"column_end":60},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":2428},"to":{"krate":1,"index":2936}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\side_offsets.rs","byte_start":231834,"byte_end":231847,"line_start":268,"line_end":268,"column_start":55,"column_end":68},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":2428},"to":{"krate":1,"index":2907}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\side_offsets.rs","byte_start":232220,"byte_end":232233,"line_start":282,"line_end":282,"column_start":60,"column_end":73},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":2428},"to":{"krate":1,"index":2936}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\side_offsets.rs","byte_start":232379,"byte_end":232392,"line_start":289,"line_end":289,"column_start":35,"column_end":48},"kind":{"Impl":{"id":335}},"from":{"krate":0,"index":2428},"to":{"krate":1,"index":2912}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\side_offsets.rs","byte_start":232727,"byte_end":232740,"line_start":303,"line_end":303,"column_start":47,"column_end":60},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":2428},"to":{"krate":1,"index":2940}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\side_offsets.rs","byte_start":232981,"byte_end":232994,"line_start":313,"line_end":313,"column_start":55,"column_end":68},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":2428},"to":{"krate":1,"index":2912}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\side_offsets.rs","byte_start":233367,"byte_end":233380,"line_start":327,"line_end":327,"column_start":60,"column_end":73},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":2428},"to":{"krate":1,"index":2940}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":237829,"byte_end":237835,"line_start":41,"line_end":41,"column_start":27,"column_end":33},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":2614},"to":{"krate":1,"index":2840}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":237874,"byte_end":237880,"line_start":43,"line_end":43,"column_start":29,"column_end":35},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":2614},"to":{"krate":1,"index":2451}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":239312,"byte_end":239318,"line_start":102,"line_end":102,"column_start":19,"column_end":25},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":2614},"to":{"krate":1,"index":2486}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":239366,"byte_end":239372,"line_start":104,"line_end":104,"column_start":26,"column_end":32},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":2614},"to":{"krate":1,"index":2481}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":239540,"byte_end":239546,"line_start":113,"line_end":113,"column_start":21,"column_end":27},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":2614},"to":{"krate":1,"index":9025}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":239733,"byte_end":239739,"line_start":123,"line_end":123,"column_start":39,"column_end":45},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":2614},"to":{"krate":1,"index":8819}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":239956,"byte_end":239962,"line_start":131,"line_end":131,"column_start":33,"column_end":39},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":2614},"to":{"krate":1,"index":2808}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":240078,"byte_end":240084,"line_start":137,"line_end":137,"column_start":12,"column_end":18},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":2614},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":241215,"byte_end":241221,"line_start":184,"line_end":184,"column_start":18,"column_end":24},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":2614},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":244588,"byte_end":244594,"line_start":307,"line_end":307,"column_start":28,"column_end":34},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":2614},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":247761,"byte_end":247767,"line_start":395,"line_end":395,"column_start":19,"column_end":25},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":2614},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":247961,"byte_end":247967,"line_start":403,"line_end":403,"column_start":20,"column_end":26},"kind":{"Impl":{"id":350}},"from":{"krate":0,"index":2614},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":248560,"byte_end":248566,"line_start":419,"line_end":419,"column_start":24,"column_end":30},"kind":{"Impl":{"id":351}},"from":{"krate":0,"index":2614},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":250462,"byte_end":250468,"line_start":478,"line_end":478,"column_start":23,"column_end":29},"kind":{"Impl":{"id":352}},"from":{"krate":0,"index":2614},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":251027,"byte_end":251033,"line_start":496,"line_end":496,"column_start":29,"column_end":35},"kind":{"Impl":{"id":353}},"from":{"krate":0,"index":2614},"to":{"krate":0,"index":1126}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":251189,"byte_end":251195,"line_start":504,"line_end":504,"column_start":27,"column_end":33},"kind":{"Impl":{"id":354}},"from":{"krate":0,"index":2614},"to":{"krate":0,"index":1130}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":251349,"byte_end":251355,"line_start":512,"line_end":512,"column_start":29,"column_end":35},"kind":{"Impl":{"id":355}},"from":{"krate":0,"index":2614},"to":{"krate":0,"index":1128}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":251511,"byte_end":251517,"line_start":520,"line_end":520,"column_start":27,"column_end":33},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":2614},"to":{"krate":0,"index":1116}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":251645,"byte_end":251651,"line_start":527,"line_end":527,"column_start":25,"column_end":31},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":2614},"to":{"krate":1,"index":2924}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":251830,"byte_end":251836,"line_start":536,"line_end":536,"column_start":25,"column_end":31},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":2614},"to":{"krate":1,"index":2897}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":252084,"byte_end":252090,"line_start":545,"line_end":545,"column_start":54,"column_end":60},"kind":{"Impl":{"id":359}},"from":{"krate":0,"index":2614},"to":{"krate":1,"index":2897}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":252290,"byte_end":252296,"line_start":552,"line_end":552,"column_start":44,"column_end":50},"kind":{"Impl":{"id":360}},"from":{"krate":0,"index":2614},"to":{"krate":1,"index":7045}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":252483,"byte_end":252489,"line_start":558,"line_end":558,"column_start":74,"column_end":80},"kind":{"Impl":{"id":361}},"from":{"krate":0,"index":2614},"to":{"krate":1,"index":7045}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":252643,"byte_end":252649,"line_start":564,"line_end":564,"column_start":37,"column_end":43},"kind":{"Impl":{"id":362}},"from":{"krate":0,"index":2614},"to":{"krate":1,"index":2928}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":252821,"byte_end":252827,"line_start":572,"line_end":572,"column_start":25,"column_end":31},"kind":{"Impl":{"id":363}},"from":{"krate":0,"index":2614},"to":{"krate":1,"index":2902}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":253058,"byte_end":253064,"line_start":581,"line_end":581,"column_start":37,"column_end":43},"kind":{"Impl":{"id":364}},"from":{"krate":0,"index":2614},"to":{"krate":1,"index":2932}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":253246,"byte_end":253252,"line_start":589,"line_end":589,"column_start":35,"column_end":41},"kind":{"Impl":{"id":365}},"from":{"krate":0,"index":2614},"to":{"krate":1,"index":2907}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":253477,"byte_end":253483,"line_start":598,"line_end":598,"column_start":47,"column_end":53},"kind":{"Impl":{"id":366}},"from":{"krate":0,"index":2614},"to":{"krate":1,"index":2936}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":253669,"byte_end":253675,"line_start":606,"line_end":606,"column_start":55,"column_end":61},"kind":{"Impl":{"id":367}},"from":{"krate":0,"index":2614},"to":{"krate":1,"index":2907}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":253934,"byte_end":253940,"line_start":615,"line_end":615,"column_start":60,"column_end":66},"kind":{"Impl":{"id":368}},"from":{"krate":0,"index":2614},"to":{"krate":1,"index":2936}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":254086,"byte_end":254092,"line_start":622,"line_end":622,"column_start":35,"column_end":41},"kind":{"Impl":{"id":369}},"from":{"krate":0,"index":2614},"to":{"krate":1,"index":2912}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":254317,"byte_end":254323,"line_start":631,"line_end":631,"column_start":47,"column_end":53},"kind":{"Impl":{"id":370}},"from":{"krate":0,"index":2614},"to":{"krate":1,"index":2940}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":254509,"byte_end":254515,"line_start":639,"line_end":639,"column_start":55,"column_end":61},"kind":{"Impl":{"id":371}},"from":{"krate":0,"index":2614},"to":{"krate":1,"index":2912}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":254774,"byte_end":254780,"line_start":648,"line_end":648,"column_start":60,"column_end":66},"kind":{"Impl":{"id":372}},"from":{"krate":0,"index":2614},"to":{"krate":1,"index":2940}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":255538,"byte_end":255544,"line_start":683,"line_end":683,"column_start":37,"column_end":43},"kind":{"Impl":{"id":373}},"from":{"krate":0,"index":2614},"to":{"krate":1,"index":2736}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":255669,"byte_end":255675,"line_start":690,"line_end":690,"column_start":29,"column_end":35},"kind":{"Impl":{"id":374}},"from":{"krate":0,"index":2614},"to":{"krate":1,"index":2733}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":255799,"byte_end":255805,"line_start":697,"line_end":697,"column_start":29,"column_end":35},"kind":{"Impl":{"id":375}},"from":{"krate":0,"index":2614},"to":{"krate":1,"index":2736}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":255923,"byte_end":255929,"line_start":704,"line_end":704,"column_start":29,"column_end":35},"kind":{"Impl":{"id":376}},"from":{"krate":0,"index":2614},"to":{"krate":1,"index":2733}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":256053,"byte_end":256059,"line_start":711,"line_end":711,"column_start":29,"column_end":35},"kind":{"Impl":{"id":377}},"from":{"krate":0,"index":2614},"to":{"krate":1,"index":2736}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":262816,"byte_end":262822,"line_start":948,"line_end":948,"column_start":27,"column_end":33},"kind":{"Impl":{"id":378}},"from":{"krate":0,"index":2828},"to":{"krate":1,"index":2840}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":262861,"byte_end":262867,"line_start":950,"line_end":950,"column_start":29,"column_end":35},"kind":{"Impl":{"id":379}},"from":{"krate":0,"index":2828},"to":{"krate":1,"index":2451}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":263866,"byte_end":263872,"line_start":993,"line_end":993,"column_start":19,"column_end":25},"kind":{"Impl":{"id":380}},"from":{"krate":0,"index":2828},"to":{"krate":1,"index":2486}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":263920,"byte_end":263926,"line_start":995,"line_end":995,"column_start":26,"column_end":32},"kind":{"Impl":{"id":381}},"from":{"krate":0,"index":2828},"to":{"krate":1,"index":2481}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":264123,"byte_end":264129,"line_start":1004,"line_end":1004,"column_start":21,"column_end":27},"kind":{"Impl":{"id":382}},"from":{"krate":0,"index":2828},"to":{"krate":1,"index":9025}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":264344,"byte_end":264350,"line_start":1015,"line_end":1015,"column_start":39,"column_end":45},"kind":{"Impl":{"id":383}},"from":{"krate":0,"index":2828},"to":{"krate":1,"index":8819}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":264634,"byte_end":264640,"line_start":1025,"line_end":1025,"column_start":33,"column_end":39},"kind":{"Impl":{"id":384}},"from":{"krate":0,"index":2828},"to":{"krate":1,"index":2808}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":264776,"byte_end":264782,"line_start":1031,"line_end":1031,"column_start":12,"column_end":18},"kind":{"Impl":{"id":385}},"from":{"krate":0,"index":2828},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":266011,"byte_end":266017,"line_start":1079,"line_end":1079,"column_start":18,"column_end":24},"kind":{"Impl":{"id":386}},"from":{"krate":0,"index":2828},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":269605,"byte_end":269611,"line_start":1202,"line_end":1202,"column_start":28,"column_end":34},"kind":{"Impl":{"id":387}},"from":{"krate":0,"index":2828},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":272510,"byte_end":272516,"line_start":1284,"line_end":1284,"column_start":19,"column_end":25},"kind":{"Impl":{"id":388}},"from":{"krate":0,"index":2828},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":272736,"byte_end":272742,"line_start":1292,"line_end":1292,"column_start":20,"column_end":26},"kind":{"Impl":{"id":389}},"from":{"krate":0,"index":2828},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":273380,"byte_end":273386,"line_start":1308,"line_end":1308,"column_start":24,"column_end":30},"kind":{"Impl":{"id":390}},"from":{"krate":0,"index":2828},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":275462,"byte_end":275468,"line_start":1376,"line_end":1376,"column_start":23,"column_end":29},"kind":{"Impl":{"id":391}},"from":{"krate":0,"index":2828},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":276111,"byte_end":276117,"line_start":1396,"line_end":1396,"column_start":29,"column_end":35},"kind":{"Impl":{"id":392}},"from":{"krate":0,"index":2828},"to":{"krate":0,"index":1126}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":276273,"byte_end":276279,"line_start":1404,"line_end":1404,"column_start":27,"column_end":33},"kind":{"Impl":{"id":393}},"from":{"krate":0,"index":2828},"to":{"krate":0,"index":1130}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":276433,"byte_end":276439,"line_start":1412,"line_end":1412,"column_start":29,"column_end":35},"kind":{"Impl":{"id":394}},"from":{"krate":0,"index":2828},"to":{"krate":0,"index":1128}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":276595,"byte_end":276601,"line_start":1420,"line_end":1420,"column_start":27,"column_end":33},"kind":{"Impl":{"id":395}},"from":{"krate":0,"index":2828},"to":{"krate":0,"index":1116}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":276743,"byte_end":276749,"line_start":1427,"line_end":1427,"column_start":25,"column_end":31},"kind":{"Impl":{"id":396}},"from":{"krate":0,"index":2828},"to":{"krate":1,"index":2924}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":276941,"byte_end":276947,"line_start":1436,"line_end":1436,"column_start":25,"column_end":31},"kind":{"Impl":{"id":397}},"from":{"krate":0,"index":2828},"to":{"krate":1,"index":2897}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":277268,"byte_end":277274,"line_start":1449,"line_end":1449,"column_start":54,"column_end":60},"kind":{"Impl":{"id":398}},"from":{"krate":0,"index":2828},"to":{"krate":1,"index":2897}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":277547,"byte_end":277553,"line_start":1460,"line_end":1460,"column_start":44,"column_end":50},"kind":{"Impl":{"id":399}},"from":{"krate":0,"index":2828},"to":{"krate":1,"index":7045}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":277740,"byte_end":277746,"line_start":1466,"line_end":1466,"column_start":74,"column_end":80},"kind":{"Impl":{"id":400}},"from":{"krate":0,"index":2828},"to":{"krate":1,"index":7045}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":277900,"byte_end":277906,"line_start":1472,"line_end":1472,"column_start":37,"column_end":43},"kind":{"Impl":{"id":401}},"from":{"krate":0,"index":2828},"to":{"krate":1,"index":2928}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":278113,"byte_end":278119,"line_start":1481,"line_end":1481,"column_start":25,"column_end":31},"kind":{"Impl":{"id":402}},"from":{"krate":0,"index":2828},"to":{"krate":1,"index":2902}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":278423,"byte_end":278429,"line_start":1494,"line_end":1494,"column_start":37,"column_end":43},"kind":{"Impl":{"id":403}},"from":{"krate":0,"index":2828},"to":{"krate":1,"index":2932}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":278646,"byte_end":278652,"line_start":1503,"line_end":1503,"column_start":35,"column_end":41},"kind":{"Impl":{"id":404}},"from":{"krate":0,"index":2828},"to":{"krate":1,"index":2907}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":278944,"byte_end":278950,"line_start":1516,"line_end":1516,"column_start":47,"column_end":53},"kind":{"Impl":{"id":405}},"from":{"krate":0,"index":2828},"to":{"krate":1,"index":2936}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":279165,"byte_end":279171,"line_start":1525,"line_end":1525,"column_start":55,"column_end":61},"kind":{"Impl":{"id":406}},"from":{"krate":0,"index":2828},"to":{"krate":1,"index":2907}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":279499,"byte_end":279505,"line_start":1538,"line_end":1538,"column_start":60,"column_end":66},"kind":{"Impl":{"id":407}},"from":{"krate":0,"index":2828},"to":{"krate":1,"index":2936}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":279651,"byte_end":279657,"line_start":1545,"line_end":1545,"column_start":35,"column_end":41},"kind":{"Impl":{"id":408}},"from":{"krate":0,"index":2828},"to":{"krate":1,"index":2912}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":279949,"byte_end":279955,"line_start":1558,"line_end":1558,"column_start":47,"column_end":53},"kind":{"Impl":{"id":409}},"from":{"krate":0,"index":2828},"to":{"krate":1,"index":2940}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":280170,"byte_end":280176,"line_start":1567,"line_end":1567,"column_start":55,"column_end":61},"kind":{"Impl":{"id":410}},"from":{"krate":0,"index":2828},"to":{"krate":1,"index":2912}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":280504,"byte_end":280510,"line_start":1580,"line_end":1580,"column_start":60,"column_end":66},"kind":{"Impl":{"id":411}},"from":{"krate":0,"index":2828},"to":{"krate":1,"index":2940}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":281087,"byte_end":281093,"line_start":1606,"line_end":1606,"column_start":37,"column_end":43},"kind":{"Impl":{"id":412}},"from":{"krate":0,"index":2828},"to":{"krate":1,"index":2736}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":281223,"byte_end":281229,"line_start":1613,"line_end":1613,"column_start":29,"column_end":35},"kind":{"Impl":{"id":413}},"from":{"krate":0,"index":2828},"to":{"krate":1,"index":2733}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":281365,"byte_end":281371,"line_start":1620,"line_end":1620,"column_start":29,"column_end":35},"kind":{"Impl":{"id":414}},"from":{"krate":0,"index":2828},"to":{"krate":1,"index":2736}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":281498,"byte_end":281504,"line_start":1627,"line_end":1627,"column_start":32,"column_end":38},"kind":{"Impl":{"id":415}},"from":{"krate":0,"index":2828},"to":{"krate":1,"index":2733}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\size.rs","byte_start":281646,"byte_end":281652,"line_start":1634,"line_end":1634,"column_start":32,"column_end":38},"kind":{"Impl":{"id":416}},"from":{"krate":0,"index":2828},"to":{"krate":1,"index":2736}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":291330,"byte_end":291341,"line_start":87,"line_end":87,"column_start":34,"column_end":45},"kind":{"Impl":{"id":417}},"from":{"krate":0,"index":3119},"to":{"krate":1,"index":2840}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":291394,"byte_end":291405,"line_start":89,"line_end":89,"column_start":36,"column_end":47},"kind":{"Impl":{"id":418}},"from":{"krate":0,"index":3119},"to":{"krate":1,"index":2451}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":291759,"byte_end":291770,"line_start":103,"line_end":103,"column_start":26,"column_end":37},"kind":{"Impl":{"id":419}},"from":{"krate":0,"index":3119},"to":{"krate":1,"index":2486}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":291832,"byte_end":291843,"line_start":105,"line_end":105,"column_start":33,"column_end":44},"kind":{"Impl":{"id":420}},"from":{"krate":0,"index":3119},"to":{"krate":1,"index":2481}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":292174,"byte_end":292185,"line_start":118,"line_end":118,"column_start":28,"column_end":39},"kind":{"Impl":{"id":421}},"from":{"krate":0,"index":3119},"to":{"krate":1,"index":9025}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":292458,"byte_end":292469,"line_start":132,"line_end":132,"column_start":19,"column_end":30},"kind":{"Impl":{"id":422}},"from":{"krate":0,"index":3119},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":294134,"byte_end":294145,"line_start":182,"line_end":182,"column_start":25,"column_end":36},"kind":{"Impl":{"id":423}},"from":{"krate":0,"index":3119},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":297893,"byte_end":297904,"line_start":306,"line_end":306,"column_start":35,"column_end":46},"kind":{"Impl":{"id":424}},"from":{"krate":0,"index":3119},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":298823,"byte_end":298834,"line_start":332,"line_end":332,"column_start":19,"column_end":30},"kind":{"Impl":{"id":425}},"from":{"krate":0,"index":3119},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":299468,"byte_end":299479,"line_start":361,"line_end":361,"column_start":19,"column_end":30},"kind":{"Impl":{"id":426}},"from":{"krate":0,"index":3119},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":300266,"byte_end":300277,"line_start":383,"line_end":383,"column_start":19,"column_end":30},"kind":{"Impl":{"id":427}},"from":{"krate":0,"index":3119},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":301379,"byte_end":301390,"line_start":428,"line_end":428,"column_start":19,"column_end":30},"kind":{"Impl":{"id":428}},"from":{"krate":0,"index":3119},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":302358,"byte_end":302369,"line_start":461,"line_end":461,"column_start":19,"column_end":30},"kind":{"Impl":{"id":429}},"from":{"krate":0,"index":3119},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":303461,"byte_end":303472,"line_start":509,"line_end":509,"column_start":19,"column_end":30},"kind":{"Impl":{"id":430}},"from":{"krate":0,"index":3119},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":305296,"byte_end":305307,"line_start":568,"line_end":568,"column_start":19,"column_end":30},"kind":{"Impl":{"id":431}},"from":{"krate":0,"index":3119},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":306442,"byte_end":306453,"line_start":607,"line_end":607,"column_start":32,"column_end":43},"kind":{"Impl":{"id":432}},"from":{"krate":0,"index":3119},"to":{"krate":1,"index":2808}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":306661,"byte_end":306672,"line_start":616,"line_end":616,"column_start":48,"column_end":59},"kind":{"Impl":{"id":433}},"from":{"krate":0,"index":3119},"to":{"krate":0,"index":276}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform2d.rs","byte_start":307258,"byte_end":307269,"line_start":629,"line_end":629,"column_start":34,"column_end":45},"kind":{"Impl":{"id":434}},"from":{"krate":0,"index":3119},"to":{"krate":1,"index":8819}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":316094,"byte_end":316105,"line_start":108,"line_end":108,"column_start":34,"column_end":45},"kind":{"Impl":{"id":435}},"from":{"krate":0,"index":3360},"to":{"krate":1,"index":2840}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":316158,"byte_end":316169,"line_start":110,"line_end":110,"column_start":36,"column_end":47},"kind":{"Impl":{"id":436}},"from":{"krate":0,"index":3360},"to":{"krate":1,"index":2451}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":316873,"byte_end":316884,"line_start":134,"line_end":134,"column_start":26,"column_end":37},"kind":{"Impl":{"id":437}},"from":{"krate":0,"index":3360},"to":{"krate":1,"index":2486}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":316946,"byte_end":316957,"line_start":136,"line_end":136,"column_start":33,"column_end":44},"kind":{"Impl":{"id":438}},"from":{"krate":0,"index":3360},"to":{"krate":1,"index":2481}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":317658,"byte_end":317669,"line_start":159,"line_end":159,"column_start":28,"column_end":39},"kind":{"Impl":{"id":439}},"from":{"krate":0,"index":3360},"to":{"krate":1,"index":9025}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":318202,"byte_end":318213,"line_start":183,"line_end":183,"column_start":19,"column_end":30},"kind":{"Impl":{"id":440}},"from":{"krate":0,"index":3360},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":320621,"byte_end":320632,"line_start":264,"line_end":264,"column_start":25,"column_end":36},"kind":{"Impl":{"id":441}},"from":{"krate":0,"index":3360},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":326077,"byte_end":326088,"line_start":416,"line_end":416,"column_start":20,"column_end":31},"kind":{"Impl":{"id":442}},"from":{"krate":0,"index":3360},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":327927,"byte_end":327938,"line_start":491,"line_end":491,"column_start":20,"column_end":31},"kind":{"Impl":{"id":443}},"from":{"krate":0,"index":3360},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":330206,"byte_end":330217,"line_start":526,"line_end":526,"column_start":20,"column_end":31},"kind":{"Impl":{"id":444}},"from":{"krate":0,"index":3360},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":331387,"byte_end":331398,"line_start":571,"line_end":571,"column_start":19,"column_end":30},"kind":{"Impl":{"id":445}},"from":{"krate":0,"index":3360},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":333074,"byte_end":333085,"line_start":627,"line_end":627,"column_start":19,"column_end":30},"kind":{"Impl":{"id":446}},"from":{"krate":0,"index":3360},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":334434,"byte_end":334445,"line_start":677,"line_end":677,"column_start":19,"column_end":30},"kind":{"Impl":{"id":447}},"from":{"krate":0,"index":3360},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":340133,"byte_end":340144,"line_start":817,"line_end":817,"column_start":20,"column_end":31},"kind":{"Impl":{"id":448}},"from":{"krate":0,"index":3360},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":347694,"byte_end":347705,"line_start":988,"line_end":988,"column_start":20,"column_end":31},"kind":{"Impl":{"id":449}},"from":{"krate":0,"index":3360},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":349251,"byte_end":349262,"line_start":1029,"line_end":1029,"column_start":35,"column_end":46},"kind":{"Impl":{"id":450}},"from":{"krate":0,"index":3360},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":350761,"byte_end":350772,"line_start":1060,"line_end":1060,"column_start":32,"column_end":43},"kind":{"Impl":{"id":451}},"from":{"krate":0,"index":3360},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":351740,"byte_end":351751,"line_start":1085,"line_end":1085,"column_start":48,"column_end":59},"kind":{"Impl":{"id":452}},"from":{"krate":0,"index":3360},"to":{"krate":0,"index":276}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":352685,"byte_end":352696,"line_start":1101,"line_end":1101,"column_start":32,"column_end":43},"kind":{"Impl":{"id":453}},"from":{"krate":0,"index":3360},"to":{"krate":1,"index":2808}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\transform3d.rs","byte_start":352890,"byte_end":352901,"line_start":1110,"line_end":1110,"column_start":34,"column_end":45},"kind":{"Impl":{"id":454}},"from":{"krate":0,"index":3360},"to":{"krate":1,"index":8819}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":366261,"byte_end":366274,"line_start":74,"line_end":74,"column_start":34,"column_end":47},"kind":{"Impl":{"id":455}},"from":{"krate":0,"index":3623},"to":{"krate":1,"index":2840}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":366327,"byte_end":366340,"line_start":76,"line_end":76,"column_start":36,"column_end":49},"kind":{"Impl":{"id":456}},"from":{"krate":0,"index":3623},"to":{"krate":1,"index":2451}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":366548,"byte_end":366561,"line_start":86,"line_end":86,"column_start":26,"column_end":39},"kind":{"Impl":{"id":457}},"from":{"krate":0,"index":3623},"to":{"krate":1,"index":2486}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":366623,"byte_end":366636,"line_start":88,"line_end":88,"column_start":33,"column_end":46},"kind":{"Impl":{"id":458}},"from":{"krate":0,"index":3623},"to":{"krate":1,"index":2481}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":366800,"byte_end":366813,"line_start":97,"line_end":97,"column_start":28,"column_end":41},"kind":{"Impl":{"id":459}},"from":{"krate":0,"index":3623},"to":{"krate":1,"index":9025}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":366978,"byte_end":366991,"line_start":107,"line_end":107,"column_start":19,"column_end":32},"kind":{"Impl":{"id":460}},"from":{"krate":0,"index":3623},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":368347,"byte_end":368360,"line_start":164,"line_end":164,"column_start":25,"column_end":38},"kind":{"Impl":{"id":461}},"from":{"krate":0,"index":3623},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":370585,"byte_end":370598,"line_start":255,"line_end":255,"column_start":69,"column_end":82},"kind":{"Impl":{"id":462}},"from":{"krate":0,"index":3623},"to":{"krate":1,"index":2897}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":370886,"byte_end":370899,"line_start":263,"line_end":263,"column_start":72,"column_end":85},"kind":{"Impl":{"id":463}},"from":{"krate":0,"index":3623},"to":{"krate":1,"index":2928}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":371112,"byte_end":371125,"line_start":270,"line_end":270,"column_start":69,"column_end":82},"kind":{"Impl":{"id":464}},"from":{"krate":0,"index":3623},"to":{"krate":1,"index":2902}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":371413,"byte_end":371426,"line_start":278,"line_end":278,"column_start":72,"column_end":85},"kind":{"Impl":{"id":465}},"from":{"krate":0,"index":3623},"to":{"krate":1,"index":2932}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":371616,"byte_end":371629,"line_start":285,"line_end":285,"column_start":46,"column_end":59},"kind":{"Impl":{"id":466}},"from":{"krate":0,"index":3623},"to":{"krate":1,"index":2736}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":371779,"byte_end":371792,"line_start":291,"line_end":291,"column_start":46,"column_end":59},"kind":{"Impl":{"id":467}},"from":{"krate":0,"index":3623},"to":{"krate":1,"index":2733}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":371939,"byte_end":371952,"line_start":297,"line_end":297,"column_start":54,"column_end":67},"kind":{"Impl":{"id":468}},"from":{"krate":0,"index":3623},"to":{"krate":1,"index":2733}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":372129,"byte_end":372142,"line_start":306,"line_end":306,"column_start":31,"column_end":44},"kind":{"Impl":{"id":469}},"from":{"krate":0,"index":3623},"to":{"krate":1,"index":2808}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":372283,"byte_end":372296,"line_start":315,"line_end":315,"column_start":46,"column_end":59},"kind":{"Impl":{"id":470}},"from":{"krate":0,"index":3623},"to":{"krate":1,"index":8819}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":372836,"byte_end":372849,"line_start":334,"line_end":334,"column_start":34,"column_end":47},"kind":{"Impl":{"id":471}},"from":{"krate":0,"index":3727},"to":{"krate":1,"index":2840}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":372902,"byte_end":372915,"line_start":336,"line_end":336,"column_start":36,"column_end":49},"kind":{"Impl":{"id":472}},"from":{"krate":0,"index":3727},"to":{"krate":1,"index":2451}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":373919,"byte_end":373932,"line_start":379,"line_end":379,"column_start":26,"column_end":39},"kind":{"Impl":{"id":473}},"from":{"krate":0,"index":3727},"to":{"krate":1,"index":2486}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":373994,"byte_end":374007,"line_start":381,"line_end":381,"column_start":33,"column_end":46},"kind":{"Impl":{"id":474}},"from":{"krate":0,"index":3727},"to":{"krate":1,"index":2481}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":374192,"byte_end":374205,"line_start":390,"line_end":390,"column_start":28,"column_end":41},"kind":{"Impl":{"id":475}},"from":{"krate":0,"index":3727},"to":{"krate":1,"index":9025}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":374394,"byte_end":374407,"line_start":401,"line_end":401,"column_start":19,"column_end":32},"kind":{"Impl":{"id":476}},"from":{"krate":0,"index":3727},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":375928,"byte_end":375941,"line_start":461,"line_end":461,"column_start":25,"column_end":38},"kind":{"Impl":{"id":477}},"from":{"krate":0,"index":3727},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":378797,"byte_end":378810,"line_start":575,"line_end":575,"column_start":69,"column_end":82},"kind":{"Impl":{"id":478}},"from":{"krate":0,"index":3727},"to":{"krate":1,"index":2897}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":379116,"byte_end":379129,"line_start":583,"line_end":583,"column_start":72,"column_end":85},"kind":{"Impl":{"id":479}},"from":{"krate":0,"index":3727},"to":{"krate":1,"index":2928}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":379369,"byte_end":379382,"line_start":591,"line_end":591,"column_start":69,"column_end":82},"kind":{"Impl":{"id":480}},"from":{"krate":0,"index":3727},"to":{"krate":1,"index":2902}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":379688,"byte_end":379701,"line_start":599,"line_end":599,"column_start":72,"column_end":85},"kind":{"Impl":{"id":481}},"from":{"krate":0,"index":3727},"to":{"krate":1,"index":2932}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":379918,"byte_end":379931,"line_start":607,"line_end":607,"column_start":46,"column_end":59},"kind":{"Impl":{"id":482}},"from":{"krate":0,"index":3727},"to":{"krate":1,"index":2736}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":380086,"byte_end":380099,"line_start":613,"line_end":613,"column_start":46,"column_end":59},"kind":{"Impl":{"id":483}},"from":{"krate":0,"index":3727},"to":{"krate":1,"index":2733}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":380254,"byte_end":380267,"line_start":619,"line_end":619,"column_start":54,"column_end":67},"kind":{"Impl":{"id":484}},"from":{"krate":0,"index":3727},"to":{"krate":1,"index":2733}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":380452,"byte_end":380465,"line_start":628,"line_end":628,"column_start":31,"column_end":44},"kind":{"Impl":{"id":485}},"from":{"krate":0,"index":3727},"to":{"krate":1,"index":2808}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\translation.rs","byte_start":380606,"byte_end":380619,"line_start":637,"line_end":637,"column_start":46,"column_end":59},"kind":{"Impl":{"id":486}},"from":{"krate":0,"index":3727},"to":{"krate":1,"index":8819}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":392272,"byte_end":392280,"line_start":47,"line_end":47,"column_start":27,"column_end":35},"kind":{"Impl":{"id":487}},"from":{"krate":0,"index":3959},"to":{"krate":1,"index":2840}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":392319,"byte_end":392327,"line_start":49,"line_end":49,"column_start":29,"column_end":37},"kind":{"Impl":{"id":488}},"from":{"krate":0,"index":3959},"to":{"krate":1,"index":2451}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":393594,"byte_end":393602,"line_start":106,"line_end":106,"column_start":23,"column_end":31},"kind":{"Impl":{"id":489}},"from":{"krate":0,"index":3959},"to":{"krate":1,"index":2486}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":393649,"byte_end":393657,"line_start":108,"line_end":108,"column_start":37,"column_end":45},"kind":{"Impl":{"id":490}},"from":{"krate":0,"index":3959},"to":{"krate":1,"index":2481}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":393789,"byte_end":393797,"line_start":114,"line_end":114,"column_start":27,"column_end":35},"kind":{"Impl":{"id":491}},"from":{"krate":0,"index":3959},"to":{"krate":1,"index":9025}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":393944,"byte_end":393952,"line_start":121,"line_end":121,"column_start":27,"column_end":35},"kind":{"Impl":{"id":492}},"from":{"krate":0,"index":3959},"to":{"krate":0,"index":1116}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":394149,"byte_end":394157,"line_start":129,"line_end":129,"column_start":39,"column_end":47},"kind":{"Impl":{"id":493}},"from":{"krate":0,"index":3959},"to":{"krate":1,"index":8819}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":394331,"byte_end":394339,"line_start":135,"line_end":135,"column_start":33,"column_end":41},"kind":{"Impl":{"id":494}},"from":{"krate":0,"index":3959},"to":{"krate":1,"index":2808}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":394457,"byte_end":394465,"line_start":141,"line_end":141,"column_start":12,"column_end":20},"kind":{"Impl":{"id":495}},"from":{"krate":0,"index":3959},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":397481,"byte_end":397489,"line_start":267,"line_end":267,"column_start":18,"column_end":26},"kind":{"Impl":{"id":496}},"from":{"krate":0,"index":3959},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":401004,"byte_end":401012,"line_start":410,"line_end":410,"column_start":12,"column_end":20},"kind":{"Impl":{"id":497}},"from":{"krate":0,"index":3959},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":401898,"byte_end":401906,"line_start":442,"line_end":442,"column_start":19,"column_end":27},"kind":{"Impl":{"id":498}},"from":{"krate":0,"index":3959},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":404050,"byte_end":404058,"line_start":520,"line_end":520,"column_start":12,"column_end":20},"kind":{"Impl":{"id":499}},"from":{"krate":0,"index":3959},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":405170,"byte_end":405178,"line_start":555,"line_end":555,"column_start":24,"column_end":32},"kind":{"Impl":{"id":500}},"from":{"krate":0,"index":3959},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":406480,"byte_end":406488,"line_start":599,"line_end":599,"column_start":23,"column_end":31},"kind":{"Impl":{"id":501}},"from":{"krate":0,"index":3959},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":407038,"byte_end":407046,"line_start":619,"line_end":619,"column_start":28,"column_end":36},"kind":{"Impl":{"id":502}},"from":{"krate":0,"index":3959},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":409898,"byte_end":409906,"line_start":697,"line_end":697,"column_start":25,"column_end":33},"kind":{"Impl":{"id":503}},"from":{"krate":0,"index":3959},"to":{"krate":1,"index":2924}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":410071,"byte_end":410079,"line_start":706,"line_end":706,"column_start":25,"column_end":33},"kind":{"Impl":{"id":504}},"from":{"krate":0,"index":3959},"to":{"krate":1,"index":2897}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":410298,"byte_end":410306,"line_start":715,"line_end":715,"column_start":39,"column_end":47},"kind":{"Impl":{"id":505}},"from":{"krate":0,"index":3959},"to":{"krate":1,"index":2897}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":410531,"byte_end":410539,"line_start":724,"line_end":724,"column_start":44,"column_end":52},"kind":{"Impl":{"id":506}},"from":{"krate":0,"index":3959},"to":{"krate":1,"index":7045}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":410726,"byte_end":410734,"line_start":730,"line_end":730,"column_start":74,"column_end":82},"kind":{"Impl":{"id":507}},"from":{"krate":0,"index":3959},"to":{"krate":1,"index":7045}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":410904,"byte_end":410912,"line_start":736,"line_end":736,"column_start":53,"column_end":61},"kind":{"Impl":{"id":508}},"from":{"krate":0,"index":3959},"to":{"krate":1,"index":2928}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":411042,"byte_end":411050,"line_start":743,"line_end":743,"column_start":25,"column_end":33},"kind":{"Impl":{"id":509}},"from":{"krate":0,"index":3959},"to":{"krate":1,"index":2902}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":411290,"byte_end":411298,"line_start":752,"line_end":752,"column_start":69,"column_end":77},"kind":{"Impl":{"id":510}},"from":{"krate":0,"index":3959},"to":{"krate":1,"index":2932}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":411438,"byte_end":411446,"line_start":759,"line_end":759,"column_start":35,"column_end":43},"kind":{"Impl":{"id":511}},"from":{"krate":0,"index":3959},"to":{"krate":1,"index":2907}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":411666,"byte_end":411674,"line_start":768,"line_end":768,"column_start":56,"column_end":64},"kind":{"Impl":{"id":512}},"from":{"krate":0,"index":3959},"to":{"krate":1,"index":2936}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":411831,"byte_end":411839,"line_start":775,"line_end":775,"column_start":55,"column_end":63},"kind":{"Impl":{"id":513}},"from":{"krate":0,"index":3959},"to":{"krate":1,"index":2907}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":412084,"byte_end":412092,"line_start":784,"line_end":784,"column_start":60,"column_end":68},"kind":{"Impl":{"id":514}},"from":{"krate":0,"index":3959},"to":{"krate":1,"index":2936}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":412266,"byte_end":412274,"line_start":792,"line_end":792,"column_start":35,"column_end":43},"kind":{"Impl":{"id":515}},"from":{"krate":0,"index":3959},"to":{"krate":1,"index":2912}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":412494,"byte_end":412502,"line_start":801,"line_end":801,"column_start":56,"column_end":64},"kind":{"Impl":{"id":516}},"from":{"krate":0,"index":3959},"to":{"krate":1,"index":2940}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":412659,"byte_end":412667,"line_start":808,"line_end":808,"column_start":55,"column_end":63},"kind":{"Impl":{"id":517}},"from":{"krate":0,"index":3959},"to":{"krate":1,"index":2912}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":412912,"byte_end":412920,"line_start":817,"line_end":817,"column_start":60,"column_end":68},"kind":{"Impl":{"id":518}},"from":{"krate":0,"index":3959},"to":{"krate":1,"index":2940}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":413088,"byte_end":413096,"line_start":825,"line_end":825,"column_start":29,"column_end":37},"kind":{"Impl":{"id":519}},"from":{"krate":0,"index":3959},"to":{"krate":0,"index":1126}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":413253,"byte_end":413261,"line_start":833,"line_end":833,"column_start":27,"column_end":35},"kind":{"Impl":{"id":520}},"from":{"krate":0,"index":3959},"to":{"krate":0,"index":1130}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":413416,"byte_end":413424,"line_start":841,"line_end":841,"column_start":29,"column_end":37},"kind":{"Impl":{"id":521}},"from":{"krate":0,"index":3959},"to":{"krate":0,"index":1128}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":413608,"byte_end":413616,"line_start":849,"line_end":849,"column_start":54,"column_end":62},"kind":{"Impl":{"id":522}},"from":{"krate":0,"index":3959},"to":{"krate":0,"index":276}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":413939,"byte_end":413947,"line_start":861,"line_end":861,"column_start":29,"column_end":37},"kind":{"Impl":{"id":523}},"from":{"krate":0,"index":3959},"to":{"krate":1,"index":2733}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":414048,"byte_end":414056,"line_start":867,"line_end":867,"column_start":29,"column_end":37},"kind":{"Impl":{"id":524}},"from":{"krate":0,"index":3959},"to":{"krate":1,"index":2736}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":414159,"byte_end":414167,"line_start":873,"line_end":873,"column_start":29,"column_end":37},"kind":{"Impl":{"id":525}},"from":{"krate":0,"index":3959},"to":{"krate":1,"index":2733}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":414268,"byte_end":414276,"line_start":879,"line_end":879,"column_start":29,"column_end":37},"kind":{"Impl":{"id":526}},"from":{"krate":0,"index":3959},"to":{"krate":1,"index":2736}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":414396,"byte_end":414404,"line_start":885,"line_end":885,"column_start":35,"column_end":43},"kind":{"Impl":{"id":527}},"from":{"krate":0,"index":3959},"to":{"krate":1,"index":2736}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":414900,"byte_end":414908,"line_start":906,"line_end":906,"column_start":27,"column_end":35},"kind":{"Impl":{"id":528}},"from":{"krate":0,"index":4196},"to":{"krate":1,"index":2840}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":414947,"byte_end":414955,"line_start":908,"line_end":908,"column_start":29,"column_end":37},"kind":{"Impl":{"id":529}},"from":{"krate":0,"index":4196},"to":{"krate":1,"index":2451}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":415901,"byte_end":415909,"line_start":951,"line_end":951,"column_start":23,"column_end":31},"kind":{"Impl":{"id":530}},"from":{"krate":0,"index":4196},"to":{"krate":1,"index":2486}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":415956,"byte_end":415964,"line_start":953,"line_end":953,"column_start":37,"column_end":45},"kind":{"Impl":{"id":531}},"from":{"krate":0,"index":4196},"to":{"krate":1,"index":2481}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":416117,"byte_end":416125,"line_start":959,"line_end":959,"column_start":27,"column_end":35},"kind":{"Impl":{"id":532}},"from":{"krate":0,"index":4196},"to":{"krate":1,"index":9025}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":416296,"byte_end":416304,"line_start":967,"line_end":967,"column_start":27,"column_end":35},"kind":{"Impl":{"id":533}},"from":{"krate":0,"index":4196},"to":{"krate":0,"index":1116}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":416506,"byte_end":416514,"line_start":975,"line_end":975,"column_start":39,"column_end":47},"kind":{"Impl":{"id":534}},"from":{"krate":0,"index":4196},"to":{"krate":1,"index":8819}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":416755,"byte_end":416763,"line_start":985,"line_end":985,"column_start":33,"column_end":41},"kind":{"Impl":{"id":535}},"from":{"krate":0,"index":4196},"to":{"krate":1,"index":2808}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":416901,"byte_end":416909,"line_start":991,"line_end":991,"column_start":12,"column_end":20},"kind":{"Impl":{"id":536}},"from":{"krate":0,"index":4196},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":419115,"byte_end":419123,"line_start":1084,"line_end":1084,"column_start":18,"column_end":26},"kind":{"Impl":{"id":537}},"from":{"krate":0,"index":4196},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":423494,"byte_end":423502,"line_start":1257,"line_end":1257,"column_start":12,"column_end":20},"kind":{"Impl":{"id":538}},"from":{"krate":0,"index":4196},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":424089,"byte_end":424097,"line_start":1279,"line_end":1279,"column_start":19,"column_end":27},"kind":{"Impl":{"id":539}},"from":{"krate":0,"index":4196},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":426605,"byte_end":426613,"line_start":1370,"line_end":1370,"column_start":12,"column_end":20},"kind":{"Impl":{"id":540}},"from":{"krate":0,"index":4196},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":427767,"byte_end":427775,"line_start":1405,"line_end":1405,"column_start":24,"column_end":32},"kind":{"Impl":{"id":541}},"from":{"krate":0,"index":4196},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":429281,"byte_end":429289,"line_start":1459,"line_end":1459,"column_start":23,"column_end":31},"kind":{"Impl":{"id":542}},"from":{"krate":0,"index":4196},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":429907,"byte_end":429915,"line_start":1481,"line_end":1481,"column_start":28,"column_end":36},"kind":{"Impl":{"id":543}},"from":{"krate":0,"index":4196},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":432844,"byte_end":432852,"line_start":1563,"line_end":1563,"column_start":25,"column_end":33},"kind":{"Impl":{"id":544}},"from":{"krate":0,"index":4196},"to":{"krate":1,"index":2924}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":433026,"byte_end":433034,"line_start":1572,"line_end":1572,"column_start":25,"column_end":33},"kind":{"Impl":{"id":545}},"from":{"krate":0,"index":4196},"to":{"krate":1,"index":2897}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":433275,"byte_end":433283,"line_start":1581,"line_end":1581,"column_start":52,"column_end":60},"kind":{"Impl":{"id":546}},"from":{"krate":0,"index":4196},"to":{"krate":1,"index":2897}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":433517,"byte_end":433525,"line_start":1590,"line_end":1590,"column_start":44,"column_end":52},"kind":{"Impl":{"id":547}},"from":{"krate":0,"index":4196},"to":{"krate":1,"index":7045}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":433712,"byte_end":433720,"line_start":1596,"line_end":1596,"column_start":74,"column_end":82},"kind":{"Impl":{"id":548}},"from":{"krate":0,"index":4196},"to":{"krate":1,"index":7045}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":433890,"byte_end":433898,"line_start":1602,"line_end":1602,"column_start":53,"column_end":61},"kind":{"Impl":{"id":549}},"from":{"krate":0,"index":4196},"to":{"krate":1,"index":2928}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":434028,"byte_end":434036,"line_start":1609,"line_end":1609,"column_start":25,"column_end":33},"kind":{"Impl":{"id":550}},"from":{"krate":0,"index":4196},"to":{"krate":1,"index":2902}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":434294,"byte_end":434302,"line_start":1618,"line_end":1618,"column_start":69,"column_end":77},"kind":{"Impl":{"id":551}},"from":{"krate":0,"index":4196},"to":{"krate":1,"index":2932}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":434442,"byte_end":434450,"line_start":1625,"line_end":1625,"column_start":35,"column_end":43},"kind":{"Impl":{"id":552}},"from":{"krate":0,"index":4196},"to":{"krate":1,"index":2907}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":434733,"byte_end":434741,"line_start":1638,"line_end":1638,"column_start":56,"column_end":64},"kind":{"Impl":{"id":553}},"from":{"krate":0,"index":4196},"to":{"krate":1,"index":2936}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":434898,"byte_end":434906,"line_start":1645,"line_end":1645,"column_start":55,"column_end":63},"kind":{"Impl":{"id":554}},"from":{"krate":0,"index":4196},"to":{"krate":1,"index":2907}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":435216,"byte_end":435224,"line_start":1658,"line_end":1658,"column_start":60,"column_end":68},"kind":{"Impl":{"id":555}},"from":{"krate":0,"index":4196},"to":{"krate":1,"index":2936}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":435425,"byte_end":435433,"line_start":1667,"line_end":1667,"column_start":35,"column_end":43},"kind":{"Impl":{"id":556}},"from":{"krate":0,"index":4196},"to":{"krate":1,"index":2912}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":435716,"byte_end":435724,"line_start":1680,"line_end":1680,"column_start":56,"column_end":64},"kind":{"Impl":{"id":557}},"from":{"krate":0,"index":4196},"to":{"krate":1,"index":2940}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":435881,"byte_end":435889,"line_start":1687,"line_end":1687,"column_start":55,"column_end":63},"kind":{"Impl":{"id":558}},"from":{"krate":0,"index":4196},"to":{"krate":1,"index":2912}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":436199,"byte_end":436207,"line_start":1700,"line_end":1700,"column_start":60,"column_end":68},"kind":{"Impl":{"id":559}},"from":{"krate":0,"index":4196},"to":{"krate":1,"index":2940}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":436402,"byte_end":436410,"line_start":1709,"line_end":1709,"column_start":29,"column_end":37},"kind":{"Impl":{"id":560}},"from":{"krate":0,"index":4196},"to":{"krate":0,"index":1126}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":436567,"byte_end":436575,"line_start":1717,"line_end":1717,"column_start":27,"column_end":35},"kind":{"Impl":{"id":561}},"from":{"krate":0,"index":4196},"to":{"krate":0,"index":1130}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":436730,"byte_end":436738,"line_start":1725,"line_end":1725,"column_start":29,"column_end":37},"kind":{"Impl":{"id":562}},"from":{"krate":0,"index":4196},"to":{"krate":0,"index":1128}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":436922,"byte_end":436930,"line_start":1733,"line_end":1733,"column_start":54,"column_end":62},"kind":{"Impl":{"id":563}},"from":{"krate":0,"index":4196},"to":{"krate":0,"index":276}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":437387,"byte_end":437395,"line_start":1751,"line_end":1751,"column_start":29,"column_end":37},"kind":{"Impl":{"id":564}},"from":{"krate":0,"index":4196},"to":{"krate":1,"index":2733}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":437504,"byte_end":437512,"line_start":1757,"line_end":1757,"column_start":29,"column_end":37},"kind":{"Impl":{"id":565}},"from":{"krate":0,"index":4196},"to":{"krate":1,"index":2736}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":437624,"byte_end":437632,"line_start":1763,"line_end":1763,"column_start":32,"column_end":40},"kind":{"Impl":{"id":566}},"from":{"krate":0,"index":4196},"to":{"krate":1,"index":2733}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":437747,"byte_end":437755,"line_start":1769,"line_end":1769,"column_start":32,"column_end":40},"kind":{"Impl":{"id":567}},"from":{"krate":0,"index":4196},"to":{"krate":1,"index":2736}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":438249,"byte_end":438261,"line_start":1790,"line_end":1790,"column_start":6,"column_end":18},"kind":{"Impl":{"id":568}},"from":{"krate":0,"index":4682},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.22.4\\src\\vector.rs","byte_start":440693,"byte_end":440705,"line_start":1867,"line_end":1867,"column_start":6,"column_end":18},"kind":{"Impl":{"id":569}},"from":{"krate":0,"index":4700},"to":{"krate":4294967295,"index":4294967295}}]}