{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15","program":"C:\\Users\\RBento\\.rustup\\toolchains\\nightly-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","futures_io","--edition=2018","C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","opt-level=1","-C","embed-bitcode=no","-C","debuginfo=2","-C","debug-assertions=on","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=139836ba9a4c69b9","-C","extra-filename=-139836ba9a4c69b9","--out-dir","c:\\Users\\RBento\\Documents\\GitHub\\rust-bevy-game\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\RBento\\Documents\\GitHub\\rust-bevy-game\\target\\rls\\debug\\deps","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\RBento\\.rustup/toolchains/nightly-x86_64-pc-windows-msvc"],"output":"c:\\Users\\RBento\\Documents\\GitHub\\rust-bevy-game\\target\\rls\\debug\\deps\\libfutures_io-139836ba9a4c69b9.rmeta"},"prelude":{"crate_id":{"name":"futures_io","disambiguator":[2197568985508401856,11345691703980343694]},"crate_root":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src","external_crates":[{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[15869266064849044270,13812703651219207899]}},{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[15148766368479893525,17497858971256376700]}},{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[16194220905313221195,6339449639258572938]}},{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[16728121507327789412,17936324348553370828]}},{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[8353546475527657673,16963020149250979420]}},{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[14145689099815379496,9077506326932238031]}},{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[6244492946486796811,5490964437503717086]}},{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[4957111798665788102,12670576939103314555]}},{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[9357994508122440114,8896505374189203733]}},{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[17341712432760991862,18372629839506156389]}},{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[2671884461253057496,4478164966631933143]}},{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[6741719769603984485,10712659696795682227]}},{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[15998493142843264248,17902295596389096714]}}],"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":0,"byte_end":22575,"line_start":1,"line_end":598,"column_start":1,"column_end":25}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":22573,"byte_end":22574,"line_start":598,"line_end":598,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":0,"byte_end":22575,"line_start":1,"line_end":598,"column_start":1,"column_end":25},"name":"","qualname":"::","value":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":95}],"decl_id":null,"docs":" Asynchronous I/O","sig":null,"attributes":[{"value":"/ Asynchronous I/O","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":0,"byte_end":20,"line_start":1,"line_end":1,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":21,"byte_end":24,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This crate contains the `AsyncRead`, `AsyncWrite`, `AsyncSeek`, and","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":25,"byte_end":96,"line_start":3,"line_end":3,"column_start":1,"column_end":72}},{"value":"/ `AsyncBufRead` traits, the asynchronous analogs to","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":97,"byte_end":151,"line_start":4,"line_end":4,"column_start":1,"column_end":55}},{"value":"/ `std::io::{Read, Write, Seek, BufRead}`. The primary difference is","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":152,"byte_end":222,"line_start":5,"line_end":5,"column_start":1,"column_end":71}},{"value":"/ that these traits integrate with the asynchronous task system.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":223,"byte_end":289,"line_start":6,"line_end":6,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":290,"byte_end":293,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ All items of this library are only available when the `std` feature of this","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":294,"byte_end":373,"line_start":8,"line_end":8,"column_start":1,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":374,"byte_end":431,"line_start":9,"line_end":9,"column_start":1,"column_end":58}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":568,"byte_end":656,"line_start":13,"line_end":13,"column_start":1,"column_end":89}},{"value":"warn(clippy :: all)","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":824,"byte_end":845,"line_start":16,"line_end":16,"column_start":1,"column_end":22}}]},{"kind":"Trait","id":{"krate":0,"index":39},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":2266,"byte_end":2275,"line_start":48,"line_end":48,"column_start":15,"column_end":24},"name":"AsyncRead","qualname":"::if_std::AsyncRead","value":"AsyncRead","parent":null,"children":[{"krate":0,"index":40},{"krate":0,"index":41}],"decl_id":null,"docs":" Read bytes asynchronously.","sig":null,"attributes":[{"value":"/ Read bytes asynchronously.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":1874,"byte_end":1904,"line_start":41,"line_end":41,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":1909,"byte_end":1912,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ This trait is analogous to the `std::io::Read` trait, but integrates","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":1917,"byte_end":1989,"line_start":43,"line_end":43,"column_start":5,"column_end":77}},{"value":"/ with the asynchronous task system. In particular, the `poll_read`","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":1994,"byte_end":2063,"line_start":44,"line_end":44,"column_start":5,"column_end":74}},{"value":"/ method, unlike `Read::read`, will automatically queue the current task","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":2068,"byte_end":2142,"line_start":45,"line_end":45,"column_start":5,"column_end":79}},{"value":"/ for wakeup and return if data is not yet available, rather than blocking","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":2147,"byte_end":2223,"line_start":46,"line_end":46,"column_start":5,"column_end":81}},{"value":"/ the calling thread.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":2228,"byte_end":2251,"line_start":47,"line_end":47,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":3835,"byte_end":3844,"line_start":85,"line_end":85,"column_start":12,"column_end":21},"name":"poll_read","qualname":"::if_std::AsyncRead::poll_read","value":"pub fn poll_read(Pin<&mut Self>, &mut Context, &mut [u8])\n-> Poll<Result<usize>>","parent":{"krate":0,"index":39},"children":[],"decl_id":null,"docs":" Attempt to read from the `AsyncRead` into `buf`.","sig":null,"attributes":[{"value":"/ Attempt to read from the `AsyncRead` into `buf`.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":3102,"byte_end":3154,"line_start":70,"line_end":70,"column_start":9,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":3163,"byte_end":3166,"line_start":71,"line_end":71,"column_start":9,"column_end":12}},{"value":"/ On success, returns `Poll::Ready(Ok(num_bytes_read))`.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":3175,"byte_end":3233,"line_start":72,"line_end":72,"column_start":9,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":3242,"byte_end":3245,"line_start":73,"line_end":73,"column_start":9,"column_end":12}},{"value":"/ If no data is available for reading, the method returns","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":3254,"byte_end":3313,"line_start":74,"line_end":74,"column_start":9,"column_end":68}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":3322,"byte_end":3380,"line_start":75,"line_end":75,"column_start":9,"column_end":67}},{"value":"/ `cx.waker().wake_by_ref()`) to receive a notification when the object becomes","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":3389,"byte_end":3470,"line_start":76,"line_end":76,"column_start":9,"column_end":90}},{"value":"/ readable or is closed.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":3479,"byte_end":3505,"line_start":77,"line_end":77,"column_start":9,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":3514,"byte_end":3517,"line_start":78,"line_end":78,"column_start":9,"column_end":12}},{"value":"/ # Implementation","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":3526,"byte_end":3546,"line_start":79,"line_end":79,"column_start":9,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":3555,"byte_end":3558,"line_start":80,"line_end":80,"column_start":9,"column_end":12}},{"value":"/ This function may not return errors of kind `WouldBlock` or","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":3567,"byte_end":3630,"line_start":81,"line_end":81,"column_start":9,"column_end":72}},{"value":"/ `Interrupted`.  Implementations must convert `WouldBlock` into","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":3639,"byte_end":3705,"line_start":82,"line_end":82,"column_start":9,"column_end":75}},{"value":"/ `Poll::Pending` and either internally retry or convert","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":3714,"byte_end":3772,"line_start":83,"line_end":83,"column_start":9,"column_end":67}},{"value":"/ `Interrupted` into another error kind.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":3781,"byte_end":3823,"line_start":84,"line_end":84,"column_start":9,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":5136,"byte_end":5154,"line_start":113,"line_end":113,"column_start":12,"column_end":30},"name":"poll_read_vectored","qualname":"::if_std::AsyncRead::poll_read_vectored","value":"pub fn poll_read_vectored(Pin<&mut Self>, &mut Context, &mut [IoSliceMut])\n-> Poll<Result<usize>>","parent":{"krate":0,"index":39},"children":[],"decl_id":null,"docs":" Attempt to read from the `AsyncRead` into `bufs` using vectored\n IO operations.","sig":null,"attributes":[{"value":"/ Attempt to read from the `AsyncRead` into `bufs` using vectored","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":3985,"byte_end":4052,"line_start":91,"line_end":91,"column_start":9,"column_end":76}},{"value":"/ IO operations.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":4061,"byte_end":4079,"line_start":92,"line_end":92,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":4088,"byte_end":4091,"line_start":93,"line_end":93,"column_start":9,"column_end":12}},{"value":"/ This method is similar to `poll_read`, but allows data to be read","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":4100,"byte_end":4169,"line_start":94,"line_end":94,"column_start":9,"column_end":78}},{"value":"/ into multiple buffers using a single operation.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":4178,"byte_end":4229,"line_start":95,"line_end":95,"column_start":9,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":4238,"byte_end":4241,"line_start":96,"line_end":96,"column_start":9,"column_end":12}},{"value":"/ On success, returns `Poll::Ready(Ok(num_bytes_read))`.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":4250,"byte_end":4308,"line_start":97,"line_end":97,"column_start":9,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":4317,"byte_end":4320,"line_start":98,"line_end":98,"column_start":9,"column_end":12}},{"value":"/ If no data is available for reading, the method returns","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":4329,"byte_end":4388,"line_start":99,"line_end":99,"column_start":9,"column_end":68}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":4397,"byte_end":4455,"line_start":100,"line_end":100,"column_start":9,"column_end":67}},{"value":"/ `cx.waker().wake_by_ref()`) to receive a notification when the object becomes","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":4464,"byte_end":4545,"line_start":101,"line_end":101,"column_start":9,"column_end":90}},{"value":"/ readable or is closed.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":4554,"byte_end":4580,"line_start":102,"line_end":102,"column_start":9,"column_end":35}},{"value":"/ By default, this method delegates to using `poll_read` on the first","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":4589,"byte_end":4660,"line_start":103,"line_end":103,"column_start":9,"column_end":80}},{"value":"/ nonempty buffer in `bufs`, or an empty one if none exists. Objects which","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":4669,"byte_end":4745,"line_start":104,"line_end":104,"column_start":9,"column_end":85}},{"value":"/ support vectored IO should override this method.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":4754,"byte_end":4806,"line_start":105,"line_end":105,"column_start":9,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":4815,"byte_end":4818,"line_start":106,"line_end":106,"column_start":9,"column_end":12}},{"value":"/ # Implementation","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":4827,"byte_end":4847,"line_start":107,"line_end":107,"column_start":9,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":4856,"byte_end":4859,"line_start":108,"line_end":108,"column_start":9,"column_end":12}},{"value":"/ This function may not return errors of kind `WouldBlock` or","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":4868,"byte_end":4931,"line_start":109,"line_end":109,"column_start":9,"column_end":72}},{"value":"/ `Interrupted`.  Implementations must convert `WouldBlock` into","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":4940,"byte_end":5006,"line_start":110,"line_end":110,"column_start":9,"column_end":75}},{"value":"/ `Poll::Pending` and either internally retry or convert","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":5015,"byte_end":5073,"line_start":111,"line_end":111,"column_start":9,"column_end":67}},{"value":"/ `Interrupted` into another error kind.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":5082,"byte_end":5124,"line_start":112,"line_end":112,"column_start":9,"column_end":51}}]},{"kind":"Trait","id":{"krate":0,"index":42},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":5911,"byte_end":5921,"line_start":135,"line_end":135,"column_start":15,"column_end":25},"name":"AsyncWrite","qualname":"::if_std::AsyncWrite","value":"AsyncWrite","parent":null,"children":[{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46}],"decl_id":null,"docs":" Write bytes asynchronously.","sig":null,"attributes":[{"value":"/ Write bytes asynchronously.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":5507,"byte_end":5538,"line_start":128,"line_end":128,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":5543,"byte_end":5546,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ This trait is analogous to the `std::io::Write` trait, but integrates","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":5551,"byte_end":5624,"line_start":130,"line_end":130,"column_start":5,"column_end":78}},{"value":"/ with the asynchronous task system. In particular, the `poll_write`","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":5629,"byte_end":5699,"line_start":131,"line_end":131,"column_start":5,"column_end":75}},{"value":"/ method, unlike `Write::write`, will automatically queue the current task","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":5704,"byte_end":5780,"line_start":132,"line_end":132,"column_start":5,"column_end":81}},{"value":"/ for wakeup and return if the writer cannot take more data, rather than blocking","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":5785,"byte_end":5868,"line_start":133,"line_end":133,"column_start":5,"column_end":88}},{"value":"/ the calling thread.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":5873,"byte_end":5896,"line_start":134,"line_end":134,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":6855,"byte_end":6865,"line_start":154,"line_end":154,"column_start":12,"column_end":22},"name":"poll_write","qualname":"::if_std::AsyncWrite::poll_write","value":"pub fn poll_write(Pin<&mut Self>, &mut Context, &[u8]) -> Poll<Result<usize>>","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Attempt to write bytes from `buf` into the object.","sig":null,"attributes":[{"value":"/ Attempt to write bytes from `buf` into the object.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":5932,"byte_end":5986,"line_start":136,"line_end":136,"column_start":9,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":5995,"byte_end":5998,"line_start":137,"line_end":137,"column_start":9,"column_end":12}},{"value":"/ On success, returns `Poll::Ready(Ok(num_bytes_written))`.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":6007,"byte_end":6068,"line_start":138,"line_end":138,"column_start":9,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":6077,"byte_end":6080,"line_start":139,"line_end":139,"column_start":9,"column_end":12}},{"value":"/ If the object is not ready for writing, the method returns","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":6089,"byte_end":6151,"line_start":140,"line_end":140,"column_start":9,"column_end":71}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":6160,"byte_end":6218,"line_start":141,"line_end":141,"column_start":9,"column_end":67}},{"value":"/ `cx.waker().wake_by_ref()`) to receive a notification when the object becomes","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":6227,"byte_end":6308,"line_start":142,"line_end":142,"column_start":9,"column_end":90}},{"value":"/ writable or is closed.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":6317,"byte_end":6343,"line_start":143,"line_end":143,"column_start":9,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":6352,"byte_end":6355,"line_start":144,"line_end":144,"column_start":9,"column_end":12}},{"value":"/ # Implementation","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":6364,"byte_end":6384,"line_start":145,"line_end":145,"column_start":9,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":6393,"byte_end":6396,"line_start":146,"line_end":146,"column_start":9,"column_end":12}},{"value":"/ This function may not return errors of kind `WouldBlock` or","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":6405,"byte_end":6468,"line_start":147,"line_end":147,"column_start":9,"column_end":72}},{"value":"/ `Interrupted`.  Implementations must convert `WouldBlock` into","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":6477,"byte_end":6543,"line_start":148,"line_end":148,"column_start":9,"column_end":75}},{"value":"/ `Poll::Pending` and either internally retry or convert","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":6552,"byte_end":6610,"line_start":149,"line_end":149,"column_start":9,"column_end":67}},{"value":"/ `Interrupted` into another error kind.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":6619,"byte_end":6661,"line_start":150,"line_end":150,"column_start":9,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":6670,"byte_end":6673,"line_start":151,"line_end":151,"column_start":9,"column_end":12}},{"value":"/ `poll_write` must try to make progress by flushing the underlying object if","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":6682,"byte_end":6761,"line_start":152,"line_end":152,"column_start":9,"column_end":88}},{"value":"/ that is the only way the underlying object can become writable again.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":6770,"byte_end":6843,"line_start":153,"line_end":153,"column_start":9,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":8178,"byte_end":8197,"line_start":183,"line_end":183,"column_start":12,"column_end":31},"name":"poll_write_vectored","qualname":"::if_std::AsyncWrite::poll_write_vectored","value":"pub fn poll_write_vectored(Pin<&mut Self>, &mut Context, &[IoSlice])\n-> Poll<Result<usize>>","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Attempt to write bytes from `bufs` into the object using vectored\n IO operations.","sig":null,"attributes":[{"value":"/ Attempt to write bytes from `bufs` into the object using vectored","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":7002,"byte_end":7071,"line_start":160,"line_end":160,"column_start":9,"column_end":78}},{"value":"/ IO operations.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":7080,"byte_end":7098,"line_start":161,"line_end":161,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":7107,"byte_end":7110,"line_start":162,"line_end":162,"column_start":9,"column_end":12}},{"value":"/ This method is similar to `poll_write`, but allows data from multiple buffers to be written","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":7119,"byte_end":7214,"line_start":163,"line_end":163,"column_start":9,"column_end":104}},{"value":"/ using a single operation.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":7223,"byte_end":7252,"line_start":164,"line_end":164,"column_start":9,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":7261,"byte_end":7264,"line_start":165,"line_end":165,"column_start":9,"column_end":12}},{"value":"/ On success, returns `Poll::Ready(Ok(num_bytes_written))`.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":7273,"byte_end":7334,"line_start":166,"line_end":166,"column_start":9,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":7343,"byte_end":7346,"line_start":167,"line_end":167,"column_start":9,"column_end":12}},{"value":"/ If the object is not ready for writing, the method returns","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":7355,"byte_end":7417,"line_start":168,"line_end":168,"column_start":9,"column_end":71}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":7426,"byte_end":7484,"line_start":169,"line_end":169,"column_start":9,"column_end":67}},{"value":"/ `cx.waker().wake_by_ref()`) to receive a notification when the object becomes","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":7493,"byte_end":7574,"line_start":170,"line_end":170,"column_start":9,"column_end":90}},{"value":"/ writable or is closed.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":7583,"byte_end":7609,"line_start":171,"line_end":171,"column_start":9,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":7618,"byte_end":7621,"line_start":172,"line_end":172,"column_start":9,"column_end":12}},{"value":"/ By default, this method delegates to using `poll_write` on the first","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":7630,"byte_end":7702,"line_start":173,"line_end":173,"column_start":9,"column_end":81}},{"value":"/ nonempty buffer in `bufs`, or an empty one if none exists. Objects which","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":7711,"byte_end":7787,"line_start":174,"line_end":174,"column_start":9,"column_end":85}},{"value":"/ support vectored IO should override this method.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":7796,"byte_end":7848,"line_start":175,"line_end":175,"column_start":9,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":7857,"byte_end":7860,"line_start":176,"line_end":176,"column_start":9,"column_end":12}},{"value":"/ # Implementation","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":7869,"byte_end":7889,"line_start":177,"line_end":177,"column_start":9,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":7898,"byte_end":7901,"line_start":178,"line_end":178,"column_start":9,"column_end":12}},{"value":"/ This function may not return errors of kind `WouldBlock` or","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":7910,"byte_end":7973,"line_start":179,"line_end":179,"column_start":9,"column_end":72}},{"value":"/ `Interrupted`.  Implementations must convert `WouldBlock` into","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":7982,"byte_end":8048,"line_start":180,"line_end":180,"column_start":9,"column_end":75}},{"value":"/ `Poll::Pending` and either internally retry or convert","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":8057,"byte_end":8115,"line_start":181,"line_end":181,"column_start":9,"column_end":67}},{"value":"/ `Interrupted` into another error kind.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":8124,"byte_end":8166,"line_start":182,"line_end":182,"column_start":9,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":9412,"byte_end":9422,"line_start":215,"line_end":215,"column_start":12,"column_end":22},"name":"poll_flush","qualname":"::if_std::AsyncWrite::poll_flush","value":"pub fn poll_flush(Pin<&mut Self>, &mut Context) -> Poll<Result<()>>","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Attempt to flush the object, ensuring that any buffered data reach\n their destination.","sig":null,"attributes":[{"value":"/ Attempt to flush the object, ensuring that any buffered data reach","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":8539,"byte_end":8609,"line_start":197,"line_end":197,"column_start":9,"column_end":79}},{"value":"/ their destination.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":8618,"byte_end":8640,"line_start":198,"line_end":198,"column_start":9,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":8649,"byte_end":8652,"line_start":199,"line_end":199,"column_start":9,"column_end":12}},{"value":"/ On success, returns `Poll::Ready(Ok(()))`.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":8661,"byte_end":8707,"line_start":200,"line_end":200,"column_start":9,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":8716,"byte_end":8719,"line_start":201,"line_end":201,"column_start":9,"column_end":12}},{"value":"/ If flushing cannot immediately complete, this method returns","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":8728,"byte_end":8792,"line_start":202,"line_end":202,"column_start":9,"column_end":73}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":8801,"byte_end":8859,"line_start":203,"line_end":203,"column_start":9,"column_end":67}},{"value":"/ `cx.waker().wake_by_ref()`) to receive a notification when the object can make","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":8868,"byte_end":8950,"line_start":204,"line_end":204,"column_start":9,"column_end":91}},{"value":"/ progress towards flushing.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":8959,"byte_end":8989,"line_start":205,"line_end":205,"column_start":9,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":8998,"byte_end":9001,"line_start":206,"line_end":206,"column_start":9,"column_end":12}},{"value":"/ # Implementation","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":9010,"byte_end":9030,"line_start":207,"line_end":207,"column_start":9,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":9039,"byte_end":9042,"line_start":208,"line_end":208,"column_start":9,"column_end":12}},{"value":"/ This function may not return errors of kind `WouldBlock` or","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":9051,"byte_end":9114,"line_start":209,"line_end":209,"column_start":9,"column_end":72}},{"value":"/ `Interrupted`.  Implementations must convert `WouldBlock` into","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":9123,"byte_end":9189,"line_start":210,"line_end":210,"column_start":9,"column_end":75}},{"value":"/ `Poll::Pending` and either internally retry or convert","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":9198,"byte_end":9256,"line_start":211,"line_end":211,"column_start":9,"column_end":67}},{"value":"/ `Interrupted` into another error kind.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":9265,"byte_end":9307,"line_start":212,"line_end":212,"column_start":9,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":9316,"byte_end":9319,"line_start":213,"line_end":213,"column_start":9,"column_end":12}},{"value":"/ It only makes sense to do anything here if you actually buffer data.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":9328,"byte_end":9400,"line_start":214,"line_end":214,"column_start":9,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":10208,"byte_end":10218,"line_start":232,"line_end":232,"column_start":12,"column_end":22},"name":"poll_close","qualname":"::if_std::AsyncWrite::poll_close","value":"pub fn poll_close(Pin<&mut Self>, &mut Context) -> Poll<Result<()>>","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Attempt to close the object.","sig":null,"attributes":[{"value":"/ Attempt to close the object.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":9497,"byte_end":9529,"line_start":217,"line_end":217,"column_start":9,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":9538,"byte_end":9541,"line_start":218,"line_end":218,"column_start":9,"column_end":12}},{"value":"/ On success, returns `Poll::Ready(Ok(()))`.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":9550,"byte_end":9596,"line_start":219,"line_end":219,"column_start":9,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":9605,"byte_end":9608,"line_start":220,"line_end":220,"column_start":9,"column_end":12}},{"value":"/ If closing cannot immediately complete, this function returns","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":9617,"byte_end":9682,"line_start":221,"line_end":221,"column_start":9,"column_end":74}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":9691,"byte_end":9749,"line_start":222,"line_end":222,"column_start":9,"column_end":67}},{"value":"/ `cx.waker().wake_by_ref()`) to receive a notification when the object can make","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":9758,"byte_end":9840,"line_start":223,"line_end":223,"column_start":9,"column_end":91}},{"value":"/ progress towards closing.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":9849,"byte_end":9878,"line_start":224,"line_end":224,"column_start":9,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":9887,"byte_end":9890,"line_start":225,"line_end":225,"column_start":9,"column_end":12}},{"value":"/ # Implementation","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":9899,"byte_end":9919,"line_start":226,"line_end":226,"column_start":9,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":9928,"byte_end":9931,"line_start":227,"line_end":227,"column_start":9,"column_end":12}},{"value":"/ This function may not return errors of kind `WouldBlock` or","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":9940,"byte_end":10003,"line_start":228,"line_end":228,"column_start":9,"column_end":72}},{"value":"/ `Interrupted`.  Implementations must convert `WouldBlock` into","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":10012,"byte_end":10078,"line_start":229,"line_end":229,"column_start":9,"column_end":75}},{"value":"/ `Poll::Pending` and either internally retry or convert","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":10087,"byte_end":10145,"line_start":230,"line_end":230,"column_start":9,"column_end":67}},{"value":"/ `Interrupted` into another error kind.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":10154,"byte_end":10196,"line_start":231,"line_end":231,"column_start":9,"column_end":51}}]},{"kind":"Trait","id":{"krate":0,"index":47},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":10687,"byte_end":10696,"line_start":242,"line_end":242,"column_start":15,"column_end":24},"name":"AsyncSeek","qualname":"::if_std::AsyncSeek","value":"AsyncSeek","parent":null,"children":[{"krate":0,"index":48}],"decl_id":null,"docs":" Seek bytes asynchronously.","sig":null,"attributes":[{"value":"/ Seek bytes asynchronously.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":10295,"byte_end":10325,"line_start":235,"line_end":235,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":10330,"byte_end":10333,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ This trait is analogous to the `std::io::Seek` trait, but integrates","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":10338,"byte_end":10410,"line_start":237,"line_end":237,"column_start":5,"column_end":77}},{"value":"/ with the asynchronous task system. In particular, the `poll_seek`","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":10415,"byte_end":10484,"line_start":238,"line_end":238,"column_start":5,"column_end":74}},{"value":"/ method, unlike `Seek::seek`, will automatically queue the current task","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":10489,"byte_end":10563,"line_start":239,"line_end":239,"column_start":5,"column_end":79}},{"value":"/ for wakeup and return if data is not yet available, rather than blocking","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":10568,"byte_end":10644,"line_start":240,"line_end":240,"column_start":5,"column_end":81}},{"value":"/ the calling thread.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":10649,"byte_end":10672,"line_start":241,"line_end":241,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":11551,"byte_end":11560,"line_start":262,"line_end":262,"column_start":12,"column_end":21},"name":"poll_seek","qualname":"::if_std::AsyncSeek::poll_seek","value":"pub fn poll_seek(Pin<&mut Self>, &mut Context, SeekFrom) -> Poll<Result<u64>>","parent":{"krate":0,"index":47},"children":[],"decl_id":null,"docs":" Attempt to seek to an offset, in bytes, in a stream.","sig":null,"attributes":[{"value":"/ Attempt to seek to an offset, in bytes, in a stream.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":10707,"byte_end":10763,"line_start":243,"line_end":243,"column_start":9,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":10772,"byte_end":10775,"line_start":244,"line_end":244,"column_start":9,"column_end":12}},{"value":"/ A seek beyond the end of a stream is allowed, but behavior is defined","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":10784,"byte_end":10857,"line_start":245,"line_end":245,"column_start":9,"column_end":82}},{"value":"/ by the implementation.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":10866,"byte_end":10892,"line_start":246,"line_end":246,"column_start":9,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":10901,"byte_end":10904,"line_start":247,"line_end":247,"column_start":9,"column_end":12}},{"value":"/ If the seek operation completed successfully,","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":10913,"byte_end":10962,"line_start":248,"line_end":248,"column_start":9,"column_end":58}},{"value":"/ this method returns the new position from the start of the stream.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":10971,"byte_end":11041,"line_start":249,"line_end":249,"column_start":9,"column_end":79}},{"value":"/ That position can be used later with [`SeekFrom::Start`].","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":11050,"byte_end":11111,"line_start":250,"line_end":250,"column_start":9,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":11120,"byte_end":11123,"line_start":251,"line_end":251,"column_start":9,"column_end":12}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":11132,"byte_end":11144,"line_start":252,"line_end":252,"column_start":9,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":11153,"byte_end":11156,"line_start":253,"line_end":253,"column_start":9,"column_end":12}},{"value":"/ Seeking to a negative offset is considered an error.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":11165,"byte_end":11221,"line_start":254,"line_end":254,"column_start":9,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":11230,"byte_end":11233,"line_start":255,"line_end":255,"column_start":9,"column_end":12}},{"value":"/ # Implementation","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":11242,"byte_end":11262,"line_start":256,"line_end":256,"column_start":9,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":11271,"byte_end":11274,"line_start":257,"line_end":257,"column_start":9,"column_end":12}},{"value":"/ This function may not return errors of kind `WouldBlock` or","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":11283,"byte_end":11346,"line_start":258,"line_end":258,"column_start":9,"column_end":72}},{"value":"/ `Interrupted`.  Implementations must convert `WouldBlock` into","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":11355,"byte_end":11421,"line_start":259,"line_end":259,"column_start":9,"column_end":75}},{"value":"/ `Poll::Pending` and either internally retry or convert","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":11430,"byte_end":11488,"line_start":260,"line_end":260,"column_start":9,"column_end":67}},{"value":"/ `Interrupted` into another error kind.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":11497,"byte_end":11539,"line_start":261,"line_end":261,"column_start":9,"column_end":51}}]},{"kind":"Trait","id":{"krate":0,"index":49},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":12106,"byte_end":12118,"line_start":276,"line_end":276,"column_start":15,"column_end":27},"name":"AsyncBufRead","qualname":"::if_std::AsyncBufRead","value":"AsyncBufRead: AsyncRead","parent":null,"children":[{"krate":0,"index":50},{"krate":0,"index":51}],"decl_id":null,"docs":" Read bytes asynchronously.","sig":null,"attributes":[{"value":"/ Read bytes asynchronously.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":11700,"byte_end":11730,"line_start":269,"line_end":269,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":11735,"byte_end":11738,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ This trait is analogous to the `std::io::BufRead` trait, but integrates","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":11743,"byte_end":11818,"line_start":271,"line_end":271,"column_start":5,"column_end":80}},{"value":"/ with the asynchronous task system. In particular, the `poll_fill_buf`","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":11823,"byte_end":11896,"line_start":272,"line_end":272,"column_start":5,"column_end":78}},{"value":"/ method, unlike `BufRead::fill_buf`, will automatically queue the current task","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":11901,"byte_end":11982,"line_start":273,"line_end":273,"column_start":5,"column_end":86}},{"value":"/ for wakeup and return if data is not yet available, rather than blocking","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":11987,"byte_end":12063,"line_start":274,"line_end":274,"column_start":5,"column_end":81}},{"value":"/ the calling thread.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":12068,"byte_end":12091,"line_start":275,"line_end":275,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":13621,"byte_end":13634,"line_start":305,"line_end":305,"column_start":12,"column_end":25},"name":"poll_fill_buf","qualname":"::if_std::AsyncBufRead::poll_fill_buf","value":"pub fn poll_fill_buf(Pin<&mut Self>, &mut Context) -> Poll<Result<&[u8]>>","parent":{"krate":0,"index":49},"children":[],"decl_id":null,"docs":" Attempt to return the contents of the internal buffer, filling it with more data\n from the inner reader if it is empty.","sig":null,"attributes":[{"value":"/ Attempt to return the contents of the internal buffer, filling it with more data","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":12140,"byte_end":12224,"line_start":277,"line_end":277,"column_start":9,"column_end":93}},{"value":"/ from the inner reader if it is empty.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":12233,"byte_end":12274,"line_start":278,"line_end":278,"column_start":9,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":12283,"byte_end":12286,"line_start":279,"line_end":279,"column_start":9,"column_end":12}},{"value":"/ On success, returns `Poll::Ready(Ok(buf))`.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":12295,"byte_end":12342,"line_start":280,"line_end":280,"column_start":9,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":12351,"byte_end":12354,"line_start":281,"line_end":281,"column_start":9,"column_end":12}},{"value":"/ If no data is available for reading, the method returns","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":12363,"byte_end":12422,"line_start":282,"line_end":282,"column_start":9,"column_end":68}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":12431,"byte_end":12489,"line_start":283,"line_end":283,"column_start":9,"column_end":67}},{"value":"/ `cx.waker().wake_by_ref()`) to receive a notification when the object becomes","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":12498,"byte_end":12579,"line_start":284,"line_end":284,"column_start":9,"column_end":90}},{"value":"/ readable or is closed.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":12588,"byte_end":12614,"line_start":285,"line_end":285,"column_start":9,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":12623,"byte_end":12626,"line_start":286,"line_end":286,"column_start":9,"column_end":12}},{"value":"/ This function is a lower-level call. It needs to be paired with the","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":12635,"byte_end":12706,"line_start":287,"line_end":287,"column_start":9,"column_end":80}},{"value":"/ [`consume`] method to function properly. When calling this","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":12715,"byte_end":12777,"line_start":288,"line_end":288,"column_start":9,"column_end":71}},{"value":"/ method, none of the contents will be \"read\" in the sense that later","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":12786,"byte_end":12857,"line_start":289,"line_end":289,"column_start":9,"column_end":80}},{"value":"/ calling [`poll_read`] may return the same contents. As such, [`consume`] must","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":12866,"byte_end":12947,"line_start":290,"line_end":290,"column_start":9,"column_end":90}},{"value":"/ be called with the number of bytes that are consumed from this buffer to","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":12956,"byte_end":13032,"line_start":291,"line_end":291,"column_start":9,"column_end":85}},{"value":"/ ensure that the bytes are never returned twice.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":13041,"byte_end":13092,"line_start":292,"line_end":292,"column_start":9,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":13101,"byte_end":13104,"line_start":293,"line_end":293,"column_start":9,"column_end":12}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":13113,"byte_end":13152,"line_start":294,"line_end":294,"column_start":9,"column_end":48}},{"value":"/ [`consume`]: AsyncBufRead::consume","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":13161,"byte_end":13199,"line_start":295,"line_end":295,"column_start":9,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":13208,"byte_end":13211,"line_start":296,"line_end":296,"column_start":9,"column_end":12}},{"value":"/ An empty buffer returned indicates that the stream has reached EOF.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":13220,"byte_end":13291,"line_start":297,"line_end":297,"column_start":9,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":13300,"byte_end":13303,"line_start":298,"line_end":298,"column_start":9,"column_end":12}},{"value":"/ # Implementation","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":13312,"byte_end":13332,"line_start":299,"line_end":299,"column_start":9,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":13341,"byte_end":13344,"line_start":300,"line_end":300,"column_start":9,"column_end":12}},{"value":"/ This function may not return errors of kind `WouldBlock` or","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":13353,"byte_end":13416,"line_start":301,"line_end":301,"column_start":9,"column_end":72}},{"value":"/ `Interrupted`.  Implementations must convert `WouldBlock` into","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":13425,"byte_end":13491,"line_start":302,"line_end":302,"column_start":9,"column_end":75}},{"value":"/ `Poll::Pending` and either internally retry or convert","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":13500,"byte_end":13558,"line_start":303,"line_end":303,"column_start":9,"column_end":67}},{"value":"/ `Interrupted` into another error kind.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":13567,"byte_end":13609,"line_start":304,"line_end":304,"column_start":9,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":14597,"byte_end":14604,"line_start":322,"line_end":322,"column_start":12,"column_end":19},"name":"consume","qualname":"::if_std::AsyncBufRead::consume","value":"pub fn consume(Pin<&mut Self>, usize)","parent":{"krate":0,"index":49},"children":[],"decl_id":null,"docs":" Tells this buffer that `amt` bytes have been consumed from the buffer,\n so they should no longer be returned in calls to [`poll_read`].","sig":null,"attributes":[{"value":"/ Tells this buffer that `amt` bytes have been consumed from the buffer,","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":13712,"byte_end":13786,"line_start":307,"line_end":307,"column_start":9,"column_end":83}},{"value":"/ so they should no longer be returned in calls to [`poll_read`].","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":13795,"byte_end":13862,"line_start":308,"line_end":308,"column_start":9,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":13871,"byte_end":13874,"line_start":309,"line_end":309,"column_start":9,"column_end":12}},{"value":"/ This function is a lower-level call. It needs to be paired with the","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":13883,"byte_end":13954,"line_start":310,"line_end":310,"column_start":9,"column_end":80}},{"value":"/ [`poll_fill_buf`] method to function properly. This function does","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":13963,"byte_end":14032,"line_start":311,"line_end":311,"column_start":9,"column_end":78}},{"value":"/ not perform any I/O, it simply informs this object that some amount of","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":14041,"byte_end":14115,"line_start":312,"line_end":312,"column_start":9,"column_end":83}},{"value":"/ its buffer, returned from [`poll_fill_buf`], has been consumed and should","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":14124,"byte_end":14201,"line_start":313,"line_end":313,"column_start":9,"column_end":86}},{"value":"/ no longer be returned. As such, this function may do odd things if","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":14210,"byte_end":14280,"line_start":314,"line_end":314,"column_start":9,"column_end":79}},{"value":"/ [`poll_fill_buf`] isn't called before calling it.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":14289,"byte_end":14342,"line_start":315,"line_end":315,"column_start":9,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":14351,"byte_end":14354,"line_start":316,"line_end":316,"column_start":9,"column_end":12}},{"value":"/ The `amt` must be `<=` the number of bytes in the buffer returned by","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":14363,"byte_end":14435,"line_start":317,"line_end":317,"column_start":9,"column_end":81}},{"value":"/ [`poll_fill_buf`].","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":14444,"byte_end":14466,"line_start":318,"line_end":318,"column_start":9,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":14475,"byte_end":14478,"line_start":319,"line_end":319,"column_start":9,"column_end":12}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":14487,"byte_end":14526,"line_start":320,"line_end":320,"column_start":9,"column_end":48}},{"value":"/ [`poll_fill_buf`]: AsyncBufRead::poll_fill_buf","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":14535,"byte_end":14585,"line_start":321,"line_end":321,"column_start":9,"column_end":59}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":15461,"byte_end":15464,"line_start":350,"line_end":350,"column_start":55,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":96},{"krate":0,"index":97}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":15631,"byte_end":15634,"line_start":358,"line_end":358,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":59},{"krate":0,"index":60}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":18173,"byte_end":18176,"line_start":442,"line_end":442,"column_start":57,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":18348,"byte_end":18351,"line_start":450,"line_end":450,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":20148,"byte_end":20151,"line_start":508,"line_end":508,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":20576,"byte_end":20579,"line_start":524,"line_end":524,"column_start":55,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":114}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":20746,"byte_end":20749,"line_start":532,"line_end":532,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":83}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":21491,"byte_end":21494,"line_start":558,"line_end":558,"column_start":61,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":116},{"krate":0,"index":117}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":21678,"byte_end":21681,"line_start":566,"line_end":566,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":91},{"krate":0,"index":92}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":12120,"byte_end":12129,"line_start":276,"line_end":276,"column_start":29,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":39},"to":{"krate":0,"index":49}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":15461,"byte_end":15464,"line_start":350,"line_end":350,"column_start":55,"column_end":58},"kind":{"Impl":{"id":0}},"from":{"krate":5,"index":196},"to":{"krate":0,"index":39}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":15631,"byte_end":15634,"line_start":358,"line_end":358,"column_start":27,"column_end":30},"kind":{"Impl":{"id":1}},"from":{"krate":2,"index":39947},"to":{"krate":0,"index":39}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":18173,"byte_end":18176,"line_start":442,"line_end":442,"column_start":57,"column_end":60},"kind":{"Impl":{"id":2}},"from":{"krate":5,"index":196},"to":{"krate":0,"index":42}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":18348,"byte_end":18351,"line_start":450,"line_end":450,"column_start":28,"column_end":31},"kind":{"Impl":{"id":3}},"from":{"krate":2,"index":39947},"to":{"krate":0,"index":42}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":20148,"byte_end":20151,"line_start":508,"line_end":508,"column_start":25,"column_end":28},"kind":{"Impl":{"id":4}},"from":{"krate":5,"index":6806},"to":{"krate":0,"index":42}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":20576,"byte_end":20579,"line_start":524,"line_end":524,"column_start":55,"column_end":58},"kind":{"Impl":{"id":5}},"from":{"krate":5,"index":196},"to":{"krate":0,"index":47}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":20746,"byte_end":20749,"line_start":532,"line_end":532,"column_start":27,"column_end":30},"kind":{"Impl":{"id":6}},"from":{"krate":2,"index":39947},"to":{"krate":0,"index":47}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":21491,"byte_end":21494,"line_start":558,"line_end":558,"column_start":61,"column_end":64},"kind":{"Impl":{"id":7}},"from":{"krate":5,"index":196},"to":{"krate":0,"index":49}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.15\\src\\lib.rs","byte_start":21678,"byte_end":21681,"line_start":566,"line_end":566,"column_start":30,"column_end":33},"kind":{"Impl":{"id":8}},"from":{"krate":2,"index":39947},"to":{"krate":0,"index":49}}]}