{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15","program":"C:\\Users\\RBento\\.rustup\\toolchains\\nightly-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","futures_core","--edition=2018","C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","opt-level=1","-C","embed-bitcode=no","-C","debuginfo=2","-C","debug-assertions=on","--cfg","feature=\"alloc\"","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=c6d87d624614f219","-C","extra-filename=-c6d87d624614f219","--out-dir","c:\\Users\\RBento\\Documents\\GitHub\\rust-bevy-game\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\RBento\\Documents\\GitHub\\rust-bevy-game\\target\\rls\\debug\\deps","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\RBento\\.rustup/toolchains/nightly-x86_64-pc-windows-msvc"],"output":"c:\\Users\\RBento\\Documents\\GitHub\\rust-bevy-game\\target\\rls\\debug\\deps\\libfutures_core-c6d87d624614f219.rmeta"},"prelude":{"crate_id":{"name":"futures_core","disambiguator":[854175174072150716,15508761454012049250]},"crate_root":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src","external_crates":[{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[15869266064849044270,13812703651219207899]}},{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\future.rs","num":2,"id":{"name":"core","disambiguator":[15148766368479893525,17497858971256376700]}},{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[16194220905313221195,6339449639258572938]}},{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[16728121507327789412,17936324348553370828]}},{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[8353546475527657673,16963020149250979420]}},{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[14145689099815379496,9077506326932238031]}},{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[6244492946486796811,5490964437503717086]}},{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[4957111798665788102,12670576939103314555]}},{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[9357994508122440114,8896505374189203733]}},{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[17341712432760991862,18372629839506156389]}},{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[2671884461253057496,4478164966631933143]}},{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[6741719769603984485,10712659696795682227]}},{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[15998493142843264248,17902295596389096714]}}],"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\lib.rs","byte_start":0,"byte_end":814,"line_start":1,"line_end":28,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":2,"index":12033},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\future.rs","byte_start":949,"byte_end":955,"line_start":8,"line_end":8,"column_start":23,"column_end":29},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":4}},{"kind":"Use","ref_id":{"krate":0,"index":27},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\lib.rs","byte_start":579,"byte_end":590,"line_start":15,"line_end":15,"column_start":24,"column_end":35},"alias_span":null,"name":"FusedFuture","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":2,"index":12033},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\lib.rs","byte_start":592,"byte_end":598,"line_start":15,"line_end":15,"column_start":37,"column_end":43},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":44},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\lib.rs","byte_start":600,"byte_end":609,"line_start":15,"line_end":15,"column_start":45,"column_end":54},"alias_span":null,"name":"TryFuture","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":110},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\lib.rs","byte_start":667,"byte_end":678,"line_start":19,"line_end":19,"column_start":24,"column_end":35},"alias_span":null,"name":"FusedStream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":96},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\lib.rs","byte_start":680,"byte_end":686,"line_start":19,"line_end":19,"column_start":37,"column_end":43},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":127},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\lib.rs","byte_start":688,"byte_end":697,"line_start":19,"line_end":19,"column_start":45,"column_end":54},"alias_span":null,"name":"TryStream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":194},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\mod.rs","byte_start":12704,"byte_end":12715,"line_start":4,"line_end":4,"column_start":29,"column_end":40},"alias_span":null,"name":"AtomicWaker","value":"","parent":{"krate":0,"index":170}},{"kind":"Use","ref_id":{"krate":2,"index":12285},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\mod.rs","byte_start":12166,"byte_end":12173,"line_start":10,"line_end":10,"column_start":22,"column_end":29},"alias_span":null,"name":"Context","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":2,"index":42477},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\mod.rs","byte_start":12175,"byte_end":12179,"line_start":10,"line_end":10,"column_start":31,"column_end":35},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":2,"index":42513},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\mod.rs","byte_start":12181,"byte_end":12189,"line_start":10,"line_end":10,"column_start":37,"column_end":45},"alias_span":null,"name":"RawWaker","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":2,"index":42522},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\mod.rs","byte_start":12191,"byte_end":12205,"line_start":10,"line_end":10,"column_start":47,"column_end":61},"alias_span":null,"name":"RawWakerVTable","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":2,"index":12295},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\mod.rs","byte_start":12207,"byte_end":12212,"line_start":10,"line_end":10,"column_start":63,"column_end":68},"alias_span":null,"name":"Waker","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":2,"index":42477},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\lib.rs","byte_start":807,"byte_end":811,"line_start":27,"line_end":27,"column_start":25,"column_end":29},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":233}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\lib.rs","byte_start":0,"byte_end":814,"line_start":1,"line_end":28,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":70},{"krate":0,"index":73},{"krate":0,"index":76},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":161},{"krate":0,"index":164},{"krate":0,"index":167},{"krate":0,"index":233}],"decl_id":null,"docs":" Core traits and types for asynchronous operations in Rust.\n","sig":null,"attributes":[{"value":"/ Core traits and types for asynchronous operations in Rust.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\lib.rs","byte_start":0,"byte_end":62,"line_start":1,"line_end":1,"column_start":1,"column_end":63}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\lib.rs","byte_start":107,"byte_end":195,"line_start":4,"line_end":4,"column_start":1,"column_end":89}},{"value":"warn(clippy :: all)","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\lib.rs","byte_start":363,"byte_end":384,"line_start":7,"line_end":7,"column_start":1,"column_end":22}}]},{"kind":"Mod","id":{"krate":0,"index":4},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\future.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"future","qualname":"::future","value":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\future.rs","parent":null,"children":[{"krate":0,"index":5},{"krate":0,"index":8},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":15},{"krate":0,"index":18},{"krate":0,"index":21},{"krate":0,"index":24},{"krate":0,"index":27},{"krate":0,"index":29},{"krate":0,"index":32},{"krate":0,"index":35},{"krate":0,"index":44},{"krate":0,"index":48},{"krate":0,"index":55}],"decl_id":null,"docs":" Futures.\n","sig":null,"attributes":[{"value":"/ Futures.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\future.rs","byte_start":816,"byte_end":828,"line_start":1,"line_end":1,"column_start":1,"column_end":13}}]},{"kind":"Type","id":{"krate":0,"index":21},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\future.rs","byte_start":1133,"byte_end":1142,"line_start":13,"line_end":13,"column_start":10,"column_end":19},"name":"BoxFuture","qualname":"::future::BoxFuture","value":"Pin<alloc::boxed::Box<dyn Future<Output = T> + Send + 'a>>","parent":null,"children":[],"decl_id":null,"docs":" An owned dynamically typed [`Future`] for use in cases where you can't\n statically type your result or need to add some indirection.\n","sig":null,"attributes":[{"value":"/ An owned dynamically typed [`Future`] for use in cases where you can't","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\future.rs","byte_start":958,"byte_end":1032,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ statically type your result or need to add some indirection.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\future.rs","byte_start":1033,"byte_end":1097,"line_start":11,"line_end":11,"column_start":1,"column_end":65}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\future.rs","byte_start":1098,"byte_end":1123,"line_start":12,"line_end":12,"column_start":1,"column_end":26}}]},{"kind":"Type","id":{"krate":0,"index":24},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\future.rs","byte_start":1301,"byte_end":1315,"line_start":17,"line_end":17,"column_start":10,"column_end":24},"name":"LocalBoxFuture","qualname":"::future::LocalBoxFuture","value":"Pin<alloc::boxed::Box<dyn Future<Output = T> + 'a>>","parent":null,"children":[],"decl_id":null,"docs":" `BoxFuture`, but without the `Send` requirement.\n","sig":null,"attributes":[{"value":"/ `BoxFuture`, but without the `Send` requirement.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\future.rs","byte_start":1213,"byte_end":1265,"line_start":15,"line_end":15,"column_start":1,"column_end":53}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\future.rs","byte_start":1266,"byte_end":1291,"line_start":16,"line_end":16,"column_start":1,"column_end":26}}]},{"kind":"Trait","id":{"krate":0,"index":27},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\future.rs","byte_start":1842,"byte_end":1853,"line_start":27,"line_end":27,"column_start":11,"column_end":22},"name":"FusedFuture","qualname":"::future::FusedFuture","value":"FusedFuture: Future","parent":null,"children":[{"krate":0,"index":28}],"decl_id":null,"docs":" A future which tracks whether or not the underlying future\n should no longer be polled.","sig":null,"attributes":[{"value":"/ A future which tracks whether or not the underlying future","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\future.rs","byte_start":1379,"byte_end":1441,"line_start":19,"line_end":19,"column_start":1,"column_end":63}},{"value":"/ should no longer be polled.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\future.rs","byte_start":1442,"byte_end":1473,"line_start":20,"line_end":20,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\future.rs","byte_start":1474,"byte_end":1477,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ `is_terminated` will return `true` if a future should no longer be polled.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\future.rs","byte_start":1478,"byte_end":1556,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ Usually, this state occurs after `poll` (or `try_poll`) returned","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\future.rs","byte_start":1557,"byte_end":1625,"line_start":23,"line_end":23,"column_start":1,"column_end":69}},{"value":"/ `Poll::Ready`. However, `is_terminated` may also return `true` if a future","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\future.rs","byte_start":1626,"byte_end":1704,"line_start":24,"line_end":24,"column_start":1,"column_end":79}},{"value":"/ has become inactive and can no longer make progress and should be ignored","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\future.rs","byte_start":1705,"byte_end":1782,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/ or dropped rather than being `poll`ed again.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\future.rs","byte_start":1783,"byte_end":1831,"line_start":26,"line_end":26,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\future.rs","byte_start":1947,"byte_end":1960,"line_start":29,"line_end":29,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"::future::FusedFuture::is_terminated","value":"pub fn is_terminated(&Self) -> bool","parent":{"krate":0,"index":27},"children":[],"decl_id":null,"docs":" Returns `true` if the underlying future should no longer be polled.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the underlying future should no longer be polled.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\future.rs","byte_start":1868,"byte_end":1939,"line_start":28,"line_end":28,"column_start":5,"column_end":76}}]},{"kind":"Trait","id":{"krate":0,"index":39},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\future.rs","byte_start":2402,"byte_end":2408,"line_start":51,"line_end":51,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::future::private_try_future::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":44},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\future.rs","byte_start":2632,"byte_end":2641,"line_start":58,"line_end":58,"column_start":11,"column_end":20},"name":"TryFuture","qualname":"::future::TryFuture","value":"TryFuture: Future + private_try_future::Sealed","parent":null,"children":[{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47}],"decl_id":null,"docs":" A convenience for futures that return `Result` values that includes\n a variety of adapters tailored to such futures.\n","sig":null,"attributes":[{"value":"/ A convenience for futures that return `Result` values that includes","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\future.rs","byte_start":2498,"byte_end":2569,"line_start":56,"line_end":56,"column_start":1,"column_end":72}},{"value":"/ a variety of adapters tailored to such futures.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\future.rs","byte_start":2570,"byte_end":2621,"line_start":57,"line_end":57,"column_start":1,"column_end":52}}]},{"kind":"Type","id":{"krate":0,"index":45},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\future.rs","byte_start":2751,"byte_end":2753,"line_start":60,"line_end":60,"column_start":10,"column_end":12},"name":"Ok","qualname":"::future::TryFuture::Ok","value":"type Ok;","parent":{"krate":0,"index":44},"children":[],"decl_id":null,"docs":" The type of successful values yielded by this future\n","sig":null,"attributes":[{"value":"/ The type of successful values yielded by this future","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\future.rs","byte_start":2685,"byte_end":2741,"line_start":59,"line_end":59,"column_start":5,"column_end":61}}]},{"kind":"Type","id":{"krate":0,"index":46},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\future.rs","byte_start":2817,"byte_end":2822,"line_start":63,"line_end":63,"column_start":10,"column_end":15},"name":"Error","qualname":"::future::TryFuture::Error","value":"type Error;","parent":{"krate":0,"index":44},"children":[],"decl_id":null,"docs":" The type of failures yielded by this future\n","sig":null,"attributes":[{"value":"/ The type of failures yielded by this future","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\future.rs","byte_start":2760,"byte_end":2807,"line_start":62,"line_end":62,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\future.rs","byte_start":3072,"byte_end":3080,"line_start":70,"line_end":70,"column_start":8,"column_end":16},"name":"try_poll","qualname":"::future::TryFuture::try_poll","value":"pub fn try_poll(Pin<&mut Self>, &mut Context)\n-> Poll<Result<Self::Ok, Self::Error>>","parent":{"krate":0,"index":44},"children":[],"decl_id":null,"docs":" Poll this `TryFuture` as if it were a `Future`.","sig":null,"attributes":[{"value":"/ Poll this `TryFuture` as if it were a `Future`.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\future.rs","byte_start":2829,"byte_end":2880,"line_start":65,"line_end":65,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\future.rs","byte_start":2885,"byte_end":2888,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ This method is a stopgap for a compiler limitation that prevents us from","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\future.rs","byte_start":2893,"byte_end":2969,"line_start":67,"line_end":67,"column_start":5,"column_end":81}},{"value":"/ directly inheriting from the `Future` trait; in the future it won't be","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\future.rs","byte_start":2974,"byte_end":3048,"line_start":68,"line_end":68,"column_start":5,"column_end":79}},{"value":"/ needed.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\future.rs","byte_start":3053,"byte_end":3064,"line_start":69,"line_end":69,"column_start":5,"column_end":16}}]},{"kind":"Mod","id":{"krate":0,"index":76},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stream","qualname":"::stream","value":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","parent":null,"children":[{"krate":0,"index":77},{"krate":0,"index":80},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":87},{"krate":0,"index":90},{"krate":0,"index":93},{"krate":0,"index":96},{"krate":0,"index":100},{"krate":0,"index":105},{"krate":0,"index":110},{"krate":0,"index":112},{"krate":0,"index":115},{"krate":0,"index":118},{"krate":0,"index":127},{"krate":0,"index":131},{"krate":0,"index":138}],"decl_id":null,"docs":" Asynchronous streams.\n","sig":null,"attributes":[{"value":"/ Asynchronous streams.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":3907,"byte_end":3932,"line_start":1,"line_end":1,"column_start":1,"column_end":26}}]},{"kind":"Type","id":{"krate":0,"index":90},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":4188,"byte_end":4197,"line_start":10,"line_end":10,"column_start":10,"column_end":19},"name":"BoxStream","qualname":"::stream::BoxStream","value":"Pin<alloc::boxed::Box<dyn Stream<Item = T> + Send + 'a>>","parent":null,"children":[],"decl_id":null,"docs":" An owned dynamically typed [`Stream`] for use in cases where you can't\n statically type your result or need to add some indirection.\n","sig":null,"attributes":[{"value":"/ An owned dynamically typed [`Stream`] for use in cases where you can't","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":4013,"byte_end":4087,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"/ statically type your result or need to add some indirection.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":4088,"byte_end":4152,"line_start":8,"line_end":8,"column_start":1,"column_end":65}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":4153,"byte_end":4178,"line_start":9,"line_end":9,"column_start":1,"column_end":26}}]},{"kind":"Type","id":{"krate":0,"index":93},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":4354,"byte_end":4368,"line_start":14,"line_end":14,"column_start":10,"column_end":24},"name":"LocalBoxStream","qualname":"::stream::LocalBoxStream","value":"Pin<alloc::boxed::Box<dyn Stream<Item = T> + 'a>>","parent":null,"children":[],"decl_id":null,"docs":" `BoxStream`, but without the `Send` requirement.\n","sig":null,"attributes":[{"value":"/ `BoxStream`, but without the `Send` requirement.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":4266,"byte_end":4318,"line_start":12,"line_end":12,"column_start":1,"column_end":53}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":4319,"byte_end":4344,"line_start":13,"line_end":13,"column_start":1,"column_end":26}}]},{"kind":"Trait","id":{"krate":0,"index":96},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":4975,"byte_end":4981,"line_start":27,"line_end":27,"column_start":11,"column_end":17},"name":"Stream","qualname":"::stream::Stream","value":"Stream","parent":null,"children":[{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99}],"decl_id":null,"docs":" A stream of values produced asynchronously.","sig":null,"attributes":[{"value":"/ A stream of values produced asynchronously.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":4430,"byte_end":4477,"line_start":16,"line_end":16,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":4478,"byte_end":4481,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ If `Future<Output = T>` is an asynchronous version of `T`, then `Stream<Item","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":4482,"byte_end":4562,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"/ = T>` is an asynchronous version of `Iterator<Item = T>`. A stream","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":4563,"byte_end":4633,"line_start":19,"line_end":19,"column_start":1,"column_end":71}},{"value":"/ represents a sequence of value-producing events that occur asynchronously to","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":4634,"byte_end":4714,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ the caller.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":4715,"byte_end":4730,"line_start":21,"line_end":21,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":4731,"byte_end":4734,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ The trait is modeled after `Future`, but allows `poll_next` to be called","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":4735,"byte_end":4811,"line_start":23,"line_end":23,"column_start":1,"column_end":77}},{"value":"/ even after a value has been produced, yielding `None` once the stream has","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":4812,"byte_end":4889,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"/ been fully exhausted.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":4890,"byte_end":4915,"line_start":25,"line_end":25,"column_start":1,"column_end":26}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":4916,"byte_end":4964,"line_start":26,"line_end":26,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":97},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":5031,"byte_end":5035,"line_start":29,"line_end":29,"column_start":10,"column_end":14},"name":"Item","qualname":"::stream::Stream::Item","value":"type Item;","parent":{"krate":0,"index":96},"children":[],"decl_id":null,"docs":" Values yielded by the stream.\n","sig":null,"attributes":[{"value":"/ Values yielded by the stream.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":4988,"byte_end":5021,"line_start":28,"line_end":28,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":6751,"byte_end":6760,"line_start":66,"line_end":66,"column_start":8,"column_end":17},"name":"poll_next","qualname":"::stream::Stream::poll_next","value":"pub fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":0,"index":96},"children":[],"decl_id":null,"docs":" Attempt to pull out the next value of this stream, registering the\n current task for wakeup if the value is not yet available, and returning\n `None` if the stream is exhausted.","sig":null,"attributes":[{"value":"/ Attempt to pull out the next value of this stream, registering the","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":5042,"byte_end":5112,"line_start":31,"line_end":31,"column_start":5,"column_end":75}},{"value":"/ current task for wakeup if the value is not yet available, and returning","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":5117,"byte_end":5193,"line_start":32,"line_end":32,"column_start":5,"column_end":81}},{"value":"/ `None` if the stream is exhausted.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":5198,"byte_end":5236,"line_start":33,"line_end":33,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":5241,"byte_end":5244,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":5249,"byte_end":5267,"line_start":35,"line_end":35,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":5272,"byte_end":5275,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ There are several possible return values, each indicating a distinct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":5280,"byte_end":5352,"line_start":37,"line_end":37,"column_start":5,"column_end":77}},{"value":"/ stream state:","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":5357,"byte_end":5374,"line_start":38,"line_end":38,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":5379,"byte_end":5382,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ - `Poll::Pending` means that this stream's next value is not ready","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":5387,"byte_end":5457,"line_start":40,"line_end":40,"column_start":5,"column_end":75}},{"value":"/ yet. Implementations will ensure that the current task will be notified","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":5462,"byte_end":5537,"line_start":41,"line_end":41,"column_start":5,"column_end":80}},{"value":"/ when the next value may be ready.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":5542,"byte_end":5579,"line_start":42,"line_end":42,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":5584,"byte_end":5587,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ - `Poll::Ready(Some(val))` means that the stream has successfully","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":5592,"byte_end":5661,"line_start":44,"line_end":44,"column_start":5,"column_end":74}},{"value":"/ produced a value, `val`, and may produce further values on subsequent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":5666,"byte_end":5739,"line_start":45,"line_end":45,"column_start":5,"column_end":78}},{"value":"/ `poll_next` calls.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":5744,"byte_end":5766,"line_start":46,"line_end":46,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":5771,"byte_end":5774,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ - `Poll::Ready(None)` means that the stream has terminated, and","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":5779,"byte_end":5846,"line_start":48,"line_end":48,"column_start":5,"column_end":72}},{"value":"/ `poll_next` should not be invoked again.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":5851,"byte_end":5895,"line_start":49,"line_end":49,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":5900,"byte_end":5903,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":5908,"byte_end":5920,"line_start":51,"line_end":51,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":5925,"byte_end":5928,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ Once a stream has finished (returned `Ready(None)` from `poll_next`), calling its","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":5933,"byte_end":6018,"line_start":53,"line_end":53,"column_start":5,"column_end":90}},{"value":"/ `poll_next` method again may panic, block forever, or cause other kinds of","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":6023,"byte_end":6101,"line_start":54,"line_end":54,"column_start":5,"column_end":83}},{"value":"/ problems; the `Stream` trait places no requirements on the effects of","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":6106,"byte_end":6179,"line_start":55,"line_end":55,"column_start":5,"column_end":78}},{"value":"/ such a call. However, as the `poll_next` method is not marked `unsafe`,","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":6184,"byte_end":6259,"line_start":56,"line_end":56,"column_start":5,"column_end":80}},{"value":"/ Rust's usual rules apply: calls must never cause undefined behavior","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":6264,"byte_end":6335,"line_start":57,"line_end":57,"column_start":5,"column_end":76}},{"value":"/ (memory corruption, incorrect use of `unsafe` functions, or the like),","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":6340,"byte_end":6414,"line_start":58,"line_end":58,"column_start":5,"column_end":79}},{"value":"/ regardless of the stream's state.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":6419,"byte_end":6456,"line_start":59,"line_end":59,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":6461,"byte_end":6464,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ If this is difficult to guard against then the [`fuse`] adapter can be used","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":6469,"byte_end":6548,"line_start":61,"line_end":61,"column_start":5,"column_end":84}},{"value":"/ to ensure that `poll_next` always returns `Ready(None)` in subsequent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":6553,"byte_end":6626,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/ calls.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":6631,"byte_end":6641,"line_start":63,"line_end":63,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":6646,"byte_end":6649,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ [`fuse`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.fuse","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":6654,"byte_end":6743,"line_start":65,"line_end":65,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":8145,"byte_end":8154,"line_start":95,"line_end":95,"column_start":8,"column_end":17},"name":"size_hint","qualname":"::stream::Stream::size_hint","value":"pub fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":0,"index":96},"children":[],"decl_id":null,"docs":" Returns the bounds on the remaining length of the stream.","sig":null,"attributes":[{"value":"/ Returns the bounds on the remaining length of the stream.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":6839,"byte_end":6900,"line_start":68,"line_end":68,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":6905,"byte_end":6908,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ Specifically, `size_hint()` returns a tuple where the first element","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":6913,"byte_end":6984,"line_start":70,"line_end":70,"column_start":5,"column_end":76}},{"value":"/ is the lower bound, and the second element is the upper bound.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":6989,"byte_end":7055,"line_start":71,"line_end":71,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":7060,"byte_end":7063,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ The second half of the tuple that is returned is an [`Option`]`<`[`usize`]`>`.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":7068,"byte_end":7150,"line_start":73,"line_end":73,"column_start":5,"column_end":87}},{"value":"/ A [`None`] here means that either there is no known upper bound, or the","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":7155,"byte_end":7230,"line_start":74,"line_end":74,"column_start":5,"column_end":80}},{"value":"/ upper bound is larger than [`usize`].","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":7235,"byte_end":7276,"line_start":75,"line_end":75,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":7281,"byte_end":7284,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ # Implementation notes","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":7289,"byte_end":7315,"line_start":77,"line_end":77,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":7320,"byte_end":7323,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ It is not enforced that a stream implementation yields the declared","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":7328,"byte_end":7399,"line_start":79,"line_end":79,"column_start":5,"column_end":76}},{"value":"/ number of elements. A buggy stream may yield less than the lower bound","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":7404,"byte_end":7478,"line_start":80,"line_end":80,"column_start":5,"column_end":79}},{"value":"/ or more than the upper bound of elements.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":7483,"byte_end":7528,"line_start":81,"line_end":81,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":7533,"byte_end":7536,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ `size_hint()` is primarily intended to be used for optimizations such as","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":7541,"byte_end":7617,"line_start":83,"line_end":83,"column_start":5,"column_end":81}},{"value":"/ reserving space for the elements of the stream, but must not be","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":7622,"byte_end":7689,"line_start":84,"line_end":84,"column_start":5,"column_end":72}},{"value":"/ trusted to e.g., omit bounds checks in unsafe code. An incorrect","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":7694,"byte_end":7762,"line_start":85,"line_end":85,"column_start":5,"column_end":73}},{"value":"/ implementation of `size_hint()` should not lead to memory safety","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":7767,"byte_end":7835,"line_start":86,"line_end":86,"column_start":5,"column_end":73}},{"value":"/ violations.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":7840,"byte_end":7855,"line_start":87,"line_end":87,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":7860,"byte_end":7863,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ That said, the implementation should provide a correct estimation,","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":7868,"byte_end":7938,"line_start":89,"line_end":89,"column_start":5,"column_end":75}},{"value":"/ because otherwise it would be a violation of the trait's protocol.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":7943,"byte_end":8013,"line_start":90,"line_end":90,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":8018,"byte_end":8021,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ The default implementation returns `(0, `[`None`]`)` which is correct for any","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":8026,"byte_end":8107,"line_start":92,"line_end":92,"column_start":5,"column_end":86}},{"value":"/ stream.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":8112,"byte_end":8123,"line_start":93,"line_end":93,"column_start":5,"column_end":16}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":8128,"byte_end":8137,"line_start":94,"line_end":94,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":110},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":9375,"byte_end":9386,"line_start":136,"line_end":136,"column_start":11,"column_end":22},"name":"FusedStream","qualname":"::stream::FusedStream","value":"FusedStream: Stream","parent":null,"children":[{"krate":0,"index":111}],"decl_id":null,"docs":" A stream which tracks whether or not the underlying stream\n should no longer be polled.","sig":null,"attributes":[{"value":"/ A stream which tracks whether or not the underlying stream","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":8898,"byte_end":8960,"line_start":128,"line_end":128,"column_start":1,"column_end":63}},{"value":"/ should no longer be polled.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":8961,"byte_end":8992,"line_start":129,"line_end":129,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":8993,"byte_end":8996,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ `is_terminated` will return `true` if a future should no longer be polled.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":8997,"byte_end":9075,"line_start":131,"line_end":131,"column_start":1,"column_end":79}},{"value":"/ Usually, this state occurs after `poll_next` (or `try_poll_next`) returned","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":9076,"byte_end":9154,"line_start":132,"line_end":132,"column_start":1,"column_end":79}},{"value":"/ `Poll::Ready(None)`. However, `is_terminated` may also return `true` if a","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":9155,"byte_end":9232,"line_start":133,"line_end":133,"column_start":1,"column_end":78}},{"value":"/ stream has become inactive and can no longer make progress and should be","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":9233,"byte_end":9309,"line_start":134,"line_end":134,"column_start":1,"column_end":77}},{"value":"/ ignored or dropped rather than being polled again.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":9310,"byte_end":9364,"line_start":135,"line_end":135,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":9469,"byte_end":9482,"line_start":138,"line_end":138,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"::stream::FusedStream::is_terminated","value":"pub fn is_terminated(&Self) -> bool","parent":{"krate":0,"index":110},"children":[],"decl_id":null,"docs":" Returns `true` if the stream should no longer be polled.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the stream should no longer be polled.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":9401,"byte_end":9461,"line_start":137,"line_end":137,"column_start":5,"column_end":65}}]},{"kind":"Trait","id":{"krate":0,"index":122},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":9924,"byte_end":9930,"line_start":160,"line_end":160,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::stream::private_try_stream::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":127},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":10152,"byte_end":10161,"line_start":167,"line_end":167,"column_start":11,"column_end":20},"name":"TryStream","qualname":"::stream::TryStream","value":"TryStream: Stream + private_try_stream::Sealed","parent":null,"children":[{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130}],"decl_id":null,"docs":" A convenience for streams that return `Result` values that includes\n a variety of adapters tailored to such futures.\n","sig":null,"attributes":[{"value":"/ A convenience for streams that return `Result` values that includes","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":10018,"byte_end":10089,"line_start":165,"line_end":165,"column_start":1,"column_end":72}},{"value":"/ a variety of adapters tailored to such futures.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":10090,"byte_end":10141,"line_start":166,"line_end":166,"column_start":1,"column_end":52}}]},{"kind":"Type","id":{"krate":0,"index":128},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":10271,"byte_end":10273,"line_start":169,"line_end":169,"column_start":10,"column_end":12},"name":"Ok","qualname":"::stream::TryStream::Ok","value":"type Ok;","parent":{"krate":0,"index":127},"children":[],"decl_id":null,"docs":" The type of successful values yielded by this future\n","sig":null,"attributes":[{"value":"/ The type of successful values yielded by this future","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":10205,"byte_end":10261,"line_start":168,"line_end":168,"column_start":5,"column_end":61}}]},{"kind":"Type","id":{"krate":0,"index":129},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":10337,"byte_end":10342,"line_start":172,"line_end":172,"column_start":10,"column_end":15},"name":"Error","qualname":"::stream::TryStream::Error","value":"type Error;","parent":{"krate":0,"index":127},"children":[],"decl_id":null,"docs":" The type of failures yielded by this future\n","sig":null,"attributes":[{"value":"/ The type of failures yielded by this future","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":10280,"byte_end":10327,"line_start":171,"line_end":171,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":10592,"byte_end":10605,"line_start":179,"line_end":179,"column_start":8,"column_end":21},"name":"try_poll_next","qualname":"::stream::TryStream::try_poll_next","value":"pub fn try_poll_next(Pin<&mut Self>, &mut Context)\n-> Poll<Option<Result<Self::Ok, Self::Error>>>","parent":{"krate":0,"index":127},"children":[],"decl_id":null,"docs":" Poll this `TryStream` as if it were a `Stream`.","sig":null,"attributes":[{"value":"/ Poll this `TryStream` as if it were a `Stream`.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":10349,"byte_end":10400,"line_start":174,"line_end":174,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":10405,"byte_end":10408,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ This method is a stopgap for a compiler limitation that prevents us from","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":10413,"byte_end":10489,"line_start":176,"line_end":176,"column_start":5,"column_end":81}},{"value":"/ directly inheriting from the `Stream` trait; in the future it won't be","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":10494,"byte_end":10568,"line_start":177,"line_end":177,"column_start":5,"column_end":79}},{"value":"/ needed.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":10573,"byte_end":10584,"line_start":178,"line_end":178,"column_start":5,"column_end":16}}]},{"kind":"Mod","id":{"krate":0,"index":167},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"task","qualname":"::task","value":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\mod.rs","parent":null,"children":[{"krate":0,"index":168},{"krate":0,"index":170},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":221},{"krate":0,"index":224},{"krate":0,"index":227},{"krate":0,"index":230}],"decl_id":null,"docs":" Task notification.\n","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\lib.rs","byte_start":701,"byte_end":713,"line_start":21,"line_end":21,"column_start":1,"column_end":13}},{"value":"/ Task notification.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\mod.rs","byte_start":12043,"byte_end":12065,"line_start":1,"line_end":1,"column_start":1,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":170},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"__internal","qualname":"::task::__internal","value":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\mod.rs","parent":null,"children":[{"krate":0,"index":171},{"krate":0,"index":214}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":194},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":15619,"byte_end":15630,"line_start":89,"line_end":89,"column_start":12,"column_end":23},"name":"AtomicWaker","qualname":"::task::__internal::atomic_waker::AtomicWaker","value":"AtomicWaker {  }","parent":null,"children":[{"krate":0,"index":195},{"krate":0,"index":196}],"decl_id":null,"docs":" A synchronization primitive for task wakeup.","sig":null,"attributes":[{"value":"/ A synchronization primitive for task wakeup.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":12884,"byte_end":12932,"line_start":7,"line_end":7,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":12933,"byte_end":12936,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Sometimes the task interested in a given event will change over time.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":12937,"byte_end":13010,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"/ An `AtomicWaker` can coordinate concurrent notifications with the consumer","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":13011,"byte_end":13089,"line_start":10,"line_end":10,"column_start":1,"column_end":79}},{"value":"/ potentially \"updating\" the underlying task to wake up. This is useful in","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":13090,"byte_end":13166,"line_start":11,"line_end":11,"column_start":1,"column_end":77}},{"value":"/ scenarios where a computation completes in another thread and wants to","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":13167,"byte_end":13241,"line_start":12,"line_end":12,"column_start":1,"column_end":75}},{"value":"/ notify the consumer, but the consumer is in the process of being migrated to","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":13242,"byte_end":13322,"line_start":13,"line_end":13,"column_start":1,"column_end":81}},{"value":"/ a new logical task.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":13323,"byte_end":13346,"line_start":14,"line_end":14,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":13347,"byte_end":13350,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Consumers should call `register` before checking the result of a computation","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":13351,"byte_end":13431,"line_start":16,"line_end":16,"column_start":1,"column_end":81}},{"value":"/ and producers should call `wake` after producing the computation (this","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":13432,"byte_end":13506,"line_start":17,"line_end":17,"column_start":1,"column_end":75}},{"value":"/ differs from the usual `thread::park` pattern). It is also permitted for","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":13507,"byte_end":13583,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ `wake` to be called **before** `register`. This results in a no-op.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":13584,"byte_end":13655,"line_start":19,"line_end":19,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":13656,"byte_end":13659,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ A single `AtomicWaker` may be reused for any number of calls to `register` or","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":13660,"byte_end":13741,"line_start":21,"line_end":21,"column_start":1,"column_end":82}},{"value":"/ `wake`.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":13742,"byte_end":13753,"line_start":22,"line_end":22,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":13754,"byte_end":13757,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Memory ordering","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":13758,"byte_end":13779,"line_start":24,"line_end":24,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":13780,"byte_end":13783,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Calling `register` \"acquires\" all memory \"released\" by calls to `wake`","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":13784,"byte_end":13858,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/ before the call to `register`.  Later calls to `wake` will wake the","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":13859,"byte_end":13930,"line_start":27,"line_end":27,"column_start":1,"column_end":72}},{"value":"/ registered waker (on contention this wake might be triggered in `register`).","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":13931,"byte_end":14011,"line_start":28,"line_end":28,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":14012,"byte_end":14015,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ For concurrent calls to `register` (should be avoided) the ordering is only","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":14016,"byte_end":14095,"line_start":30,"line_end":30,"column_start":1,"column_end":80}},{"value":"/ guaranteed for the winning call.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":14096,"byte_end":14132,"line_start":31,"line_end":31,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":14133,"byte_end":14136,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":14137,"byte_end":14151,"line_start":33,"line_end":33,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":14152,"byte_end":14155,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ Here is a simple example providing a `Flag` that can be signalled manually","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":14156,"byte_end":14234,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ when it is ready.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":14235,"byte_end":14256,"line_start":36,"line_end":36,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":14257,"byte_end":14260,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":14261,"byte_end":14268,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/ use futures::future::Future;","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":14269,"byte_end":14301,"line_start":39,"line_end":39,"column_start":1,"column_end":33}},{"value":"/ use futures::task::{Context, Poll, AtomicWaker};","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":14302,"byte_end":14354,"line_start":40,"line_end":40,"column_start":1,"column_end":53}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":14355,"byte_end":14378,"line_start":41,"line_end":41,"column_start":1,"column_end":24}},{"value":"/ use std::sync::atomic::AtomicBool;","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":14379,"byte_end":14417,"line_start":42,"line_end":42,"column_start":1,"column_end":39}},{"value":"/ use std::sync::atomic::Ordering::Relaxed;","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":14418,"byte_end":14463,"line_start":43,"line_end":43,"column_start":1,"column_end":46}},{"value":"/ use std::pin::Pin;","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":14464,"byte_end":14486,"line_start":44,"line_end":44,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":14487,"byte_end":14490,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ struct Inner {","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":14491,"byte_end":14509,"line_start":46,"line_end":46,"column_start":1,"column_end":19}},{"value":"/     waker: AtomicWaker,","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":14510,"byte_end":14537,"line_start":47,"line_end":47,"column_start":1,"column_end":28}},{"value":"/     set: AtomicBool,","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":14538,"byte_end":14562,"line_start":48,"line_end":48,"column_start":1,"column_end":25}},{"value":"/ }","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":14563,"byte_end":14568,"line_start":49,"line_end":49,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":14569,"byte_end":14572,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ #[derive(Clone)]","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":14573,"byte_end":14593,"line_start":51,"line_end":51,"column_start":1,"column_end":21}},{"value":"/ struct Flag(Arc<Inner>);","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":14594,"byte_end":14622,"line_start":52,"line_end":52,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":14623,"byte_end":14626,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ impl Flag {","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":14627,"byte_end":14642,"line_start":54,"line_end":54,"column_start":1,"column_end":16}},{"value":"/     pub fn new() -> Self {","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":14643,"byte_end":14673,"line_start":55,"line_end":55,"column_start":1,"column_end":31}},{"value":"/         Self(Arc::new(Inner {","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":14674,"byte_end":14707,"line_start":56,"line_end":56,"column_start":1,"column_end":34}},{"value":"/             waker: AtomicWaker::new(),","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":14708,"byte_end":14750,"line_start":57,"line_end":57,"column_start":1,"column_end":43}},{"value":"/             set: AtomicBool::new(false),","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":14751,"byte_end":14795,"line_start":58,"line_end":58,"column_start":1,"column_end":45}},{"value":"/         }))","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":14796,"byte_end":14811,"line_start":59,"line_end":59,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":14812,"byte_end":14821,"line_start":60,"line_end":60,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":14822,"byte_end":14825,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/     pub fn signal(&self) {","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":14826,"byte_end":14856,"line_start":62,"line_end":62,"column_start":1,"column_end":31}},{"value":"/         self.0.set.store(true, Relaxed);","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":14857,"byte_end":14901,"line_start":63,"line_end":63,"column_start":1,"column_end":45}},{"value":"/         self.0.waker.wake();","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":14902,"byte_end":14934,"line_start":64,"line_end":64,"column_start":1,"column_end":33}},{"value":"/     }","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":14935,"byte_end":14944,"line_start":65,"line_end":65,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":14945,"byte_end":14950,"line_start":66,"line_end":66,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":14951,"byte_end":14954,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ impl Future for Flag {","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":14955,"byte_end":14981,"line_start":68,"line_end":68,"column_start":1,"column_end":27}},{"value":"/     type Output = ();","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":14982,"byte_end":15007,"line_start":69,"line_end":69,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":15008,"byte_end":15011,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/     fn poll(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<()> {","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":15012,"byte_end":15085,"line_start":71,"line_end":71,"column_start":1,"column_end":74}},{"value":"/         // quick check to avoid registration if already done.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":15086,"byte_end":15151,"line_start":72,"line_end":72,"column_start":1,"column_end":66}},{"value":"/         if self.0.set.load(Relaxed) {","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":15152,"byte_end":15193,"line_start":73,"line_end":73,"column_start":1,"column_end":42}},{"value":"/             return Poll::Ready(());","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":15194,"byte_end":15233,"line_start":74,"line_end":74,"column_start":1,"column_end":40}},{"value":"/         }","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":15234,"byte_end":15247,"line_start":75,"line_end":75,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":15248,"byte_end":15251,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/         self.0.waker.register(cx.waker());","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":15252,"byte_end":15298,"line_start":77,"line_end":77,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":15299,"byte_end":15302,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/         // Need to check condition **after** `register` to avoid a race","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":15303,"byte_end":15378,"line_start":79,"line_end":79,"column_start":1,"column_end":76}},{"value":"/         // condition that would result in lost notifications.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":15379,"byte_end":15444,"line_start":80,"line_end":80,"column_start":1,"column_end":66}},{"value":"/         if self.0.set.load(Relaxed) {","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":15445,"byte_end":15486,"line_start":81,"line_end":81,"column_start":1,"column_end":42}},{"value":"/             Poll::Ready(())","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":15487,"byte_end":15518,"line_start":82,"line_end":82,"column_start":1,"column_end":32}},{"value":"/         } else {","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":15519,"byte_end":15539,"line_start":83,"line_end":83,"column_start":1,"column_end":21}},{"value":"/             Poll::Pending","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":15540,"byte_end":15569,"line_start":84,"line_end":84,"column_start":1,"column_end":30}},{"value":"/         }","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":15570,"byte_end":15583,"line_start":85,"line_end":85,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":15584,"byte_end":15593,"line_start":86,"line_end":86,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":15594,"byte_end":15599,"line_start":87,"line_end":87,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":15600,"byte_end":15607,"line_start":88,"line_end":88,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":20695,"byte_end":20698,"line_start":200,"line_end":200,"column_start":18,"column_end":21},"name":"new","qualname":"<AtomicWaker>::new","value":"pub const fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an `AtomicWaker`.\n","sig":null,"attributes":[{"value":"/ Create an `AtomicWaker`.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":20649,"byte_end":20677,"line_start":199,"line_end":199,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":22951,"byte_end":22959,"line_start":258,"line_end":258,"column_start":12,"column_end":20},"name":"register","qualname":"<AtomicWaker>::register","value":"pub fn register(&Self, &Waker)","parent":null,"children":[],"decl_id":null,"docs":" Registers the waker to be notified on calls to `wake`.","sig":null,"attributes":[{"value":"/ Registers the waker to be notified on calls to `wake`.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":20913,"byte_end":20971,"line_start":208,"line_end":208,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":20976,"byte_end":20979,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ The new task will take place of any previous tasks that were registered","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":20984,"byte_end":21059,"line_start":210,"line_end":210,"column_start":5,"column_end":80}},{"value":"/ by previous calls to `register`. Any calls to `wake` that happen after","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":21064,"byte_end":21138,"line_start":211,"line_end":211,"column_start":5,"column_end":79}},{"value":"/ a call to `register` (as defined by the memory ordering rules), will","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":21143,"byte_end":21215,"line_start":212,"line_end":212,"column_start":5,"column_end":77}},{"value":"/ notify the `register` caller's task and deregister the waker from future","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":21220,"byte_end":21296,"line_start":213,"line_end":213,"column_start":5,"column_end":81}},{"value":"/ notifications. Because of this, callers should ensure `register` gets","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":21301,"byte_end":21374,"line_start":214,"line_end":214,"column_start":5,"column_end":78}},{"value":"/ invoked with a new `Waker` **each** time they require a wakeup.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":21379,"byte_end":21446,"line_start":215,"line_end":215,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":21451,"byte_end":21454,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ It is safe to call `register` with multiple other threads concurrently","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":21459,"byte_end":21533,"line_start":217,"line_end":217,"column_start":5,"column_end":79}},{"value":"/ calling `wake`. This will result in the `register` caller's current","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":21538,"byte_end":21609,"line_start":218,"line_end":218,"column_start":5,"column_end":76}},{"value":"/ task being notified once.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":21614,"byte_end":21643,"line_start":219,"line_end":219,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":21648,"byte_end":21651,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ This function is safe to call concurrently, but this is generally a bad","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":21656,"byte_end":21731,"line_start":221,"line_end":221,"column_start":5,"column_end":80}},{"value":"/ idea. Concurrent calls to `register` will attempt to register different","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":21736,"byte_end":21811,"line_start":222,"line_end":222,"column_start":5,"column_end":80}},{"value":"/ tasks to be notified. One of the callers will win and have its task set,","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":21816,"byte_end":21892,"line_start":223,"line_end":223,"column_start":5,"column_end":81}},{"value":"/ but there is no guarantee as to which caller will succeed.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":21897,"byte_end":21959,"line_start":224,"line_end":224,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":21964,"byte_end":21967,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":21972,"byte_end":21986,"line_start":226,"line_end":226,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":21991,"byte_end":21994,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ Here is how `register` is used when implementing a flag.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":21999,"byte_end":22059,"line_start":228,"line_end":228,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":22064,"byte_end":22067,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":22072,"byte_end":22079,"line_start":230,"line_end":230,"column_start":5,"column_end":12}},{"value":"/ use futures::future::Future;","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":22084,"byte_end":22116,"line_start":231,"line_end":231,"column_start":5,"column_end":37}},{"value":"/ use futures::task::{Context, Poll, AtomicWaker};","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":22121,"byte_end":22173,"line_start":232,"line_end":232,"column_start":5,"column_end":57}},{"value":"/ use std::sync::atomic::AtomicBool;","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":22178,"byte_end":22216,"line_start":233,"line_end":233,"column_start":5,"column_end":43}},{"value":"/ use std::sync::atomic::Ordering::Relaxed;","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":22221,"byte_end":22266,"line_start":234,"line_end":234,"column_start":5,"column_end":50}},{"value":"/ use std::pin::Pin;","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":22271,"byte_end":22293,"line_start":235,"line_end":235,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":22298,"byte_end":22301,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ struct Flag {","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":22306,"byte_end":22323,"line_start":237,"line_end":237,"column_start":5,"column_end":22}},{"value":"/     waker: AtomicWaker,","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":22328,"byte_end":22355,"line_start":238,"line_end":238,"column_start":5,"column_end":32}},{"value":"/     set: AtomicBool,","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":22360,"byte_end":22384,"line_start":239,"line_end":239,"column_start":5,"column_end":29}},{"value":"/ }","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":22389,"byte_end":22394,"line_start":240,"line_end":240,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":22399,"byte_end":22402,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ impl Future for Flag {","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":22407,"byte_end":22433,"line_start":242,"line_end":242,"column_start":5,"column_end":31}},{"value":"/     type Output = ();","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":22438,"byte_end":22463,"line_start":243,"line_end":243,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":22468,"byte_end":22471,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/     fn poll(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<()> {","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":22476,"byte_end":22549,"line_start":245,"line_end":245,"column_start":5,"column_end":78}},{"value":"/         // Register **before** checking `set` to avoid a race condition","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":22554,"byte_end":22629,"line_start":246,"line_end":246,"column_start":5,"column_end":80}},{"value":"/         // that would result in lost notifications.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":22634,"byte_end":22689,"line_start":247,"line_end":247,"column_start":5,"column_end":60}},{"value":"/         self.waker.register(cx.waker());","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":22694,"byte_end":22738,"line_start":248,"line_end":248,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":22743,"byte_end":22746,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/         if self.set.load(Relaxed) {","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":22751,"byte_end":22790,"line_start":250,"line_end":250,"column_start":5,"column_end":44}},{"value":"/             Poll::Ready(())","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":22795,"byte_end":22826,"line_start":251,"line_end":251,"column_start":5,"column_end":36}},{"value":"/         } else {","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":22831,"byte_end":22851,"line_start":252,"line_end":252,"column_start":5,"column_end":25}},{"value":"/             Poll::Pending","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":22856,"byte_end":22885,"line_start":253,"line_end":253,"column_start":5,"column_end":34}},{"value":"/         }","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":22890,"byte_end":22903,"line_start":254,"line_end":254,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":22908,"byte_end":22917,"line_start":255,"line_end":255,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":22922,"byte_end":22927,"line_start":256,"line_end":256,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":22932,"byte_end":22939,"line_start":257,"line_end":257,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":27639,"byte_end":27643,"line_start":351,"line_end":351,"column_start":12,"column_end":16},"name":"wake","qualname":"<AtomicWaker>::wake","value":"pub fn wake(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Calls `wake` on the last `Waker` passed to `register`.","sig":null,"attributes":[{"value":"/ Calls `wake` on the last `Waker` passed to `register`.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":27490,"byte_end":27548,"line_start":348,"line_end":348,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":27553,"byte_end":27556,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ If `register` has not been called yet, then this does nothing.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":27561,"byte_end":27627,"line_start":350,"line_end":350,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":28139,"byte_end":28143,"line_start":365,"line_end":365,"column_start":12,"column_end":16},"name":"take","qualname":"<AtomicWaker>::take","value":"pub fn take(&Self) -> Option<Waker>","parent":null,"children":[],"decl_id":null,"docs":" Returns the last `Waker` passed to `register`, so that the user can wake it.","sig":null,"attributes":[{"value":"/ Returns the last `Waker` passed to `register`, so that the user can wake it.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":27743,"byte_end":27823,"line_start":357,"line_end":357,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":27828,"byte_end":27831,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":27836,"byte_end":27839,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ Sometimes, just waking the AtomicWaker is not fine grained enough. This allows the user","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":27844,"byte_end":27935,"line_start":360,"line_end":360,"column_start":5,"column_end":96}},{"value":"/ to take the waker and then wake it separately, rather than performing both steps in one","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":27940,"byte_end":28031,"line_start":361,"line_end":361,"column_start":5,"column_end":96}},{"value":"/ atomic action.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":28036,"byte_end":28054,"line_start":362,"line_end":362,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":28059,"byte_end":28062,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ If a waker has not been registered, this returns `None`.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":28067,"byte_end":28127,"line_start":364,"line_end":364,"column_start":5,"column_end":65}}]},{"kind":"Mod","id":{"krate":0,"index":233},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\lib.rs","byte_start":771,"byte_end":780,"line_start":26,"line_end":26,"column_start":9,"column_end":18},"name":"__private","qualname":"::__private","value":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":234}],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\future.rs","byte_start":2165,"byte_end":2168,"line_start":38,"line_end":38,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":34}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\future.rs","byte_start":2442,"byte_end":2443,"line_start":53,"line_end":53,"column_start":30,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\future.rs","byte_start":3196,"byte_end":3197,"line_start":73,"line_end":73,"column_start":29,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\future.rs","byte_start":3565,"byte_end":3568,"line_start":91,"line_end":91,"column_start":59,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":62}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\future.rs","byte_start":3769,"byte_end":3785,"line_start":98,"line_end":98,"column_start":54,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":8555,"byte_end":8558,"line_start":112,"line_end":112,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":9687,"byte_end":9690,"line_start":147,"line_end":147,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":117}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":9964,"byte_end":9965,"line_start":162,"line_end":162,"column_start":30,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":10752,"byte_end":10753,"line_start":185,"line_end":185,"column_start":29,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":11153,"byte_end":11156,"line_start":205,"line_end":205,"column_start":49,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":11527,"byte_end":11543,"line_start":218,"line_end":218,"column_start":44,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":153}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":11918,"byte_end":11921,"line_start":230,"line_end":230,"column_start":59,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":20631,"byte_end":20642,"line_start":198,"line_end":198,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":201},{"krate":0,"index":204},{"krate":0,"index":206},{"krate":0,"index":207}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":20812,"byte_end":20817,"line_start":203,"line_end":203,"column_start":29,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":29270,"byte_end":29281,"line_start":396,"line_end":396,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":209}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":29360,"byte_end":29371,"line_start":402,"line_end":402,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":211}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":29500,"byte_end":29511,"line_start":408,"line_end":408,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":29536,"byte_end":29547,"line_start":409,"line_end":409,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\lib.rs","byte_start":533,"byte_end":539,"line_start":13,"line_end":13,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":4}},{"kind":"Mod","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\lib.rs","byte_start":621,"byte_end":627,"line_start":17,"line_end":17,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":76}},{"kind":"Mod","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\lib.rs","byte_start":722,"byte_end":726,"line_start":22,"line_end":22,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":167}},{"kind":"Mod","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\mod.rs","byte_start":12114,"byte_end":12124,"line_start":7,"line_end":7,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":170}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\future.rs","byte_start":1855,"byte_end":1861,"line_start":27,"line_end":27,"column_start":24,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":12033},"to":{"krate":0,"index":27}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\future.rs","byte_start":2165,"byte_end":2168,"line_start":38,"line_end":38,"column_start":25,"column_end":28},"kind":{"Impl":{"id":0}},"from":{"krate":2,"index":39947},"to":{"krate":0,"index":27}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\future.rs","byte_start":2442,"byte_end":2443,"line_start":53,"line_end":53,"column_start":30,"column_end":31},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":41},"to":{"krate":0,"index":39}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\future.rs","byte_start":2643,"byte_end":2649,"line_start":58,"line_end":58,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":12033},"to":{"krate":0,"index":44}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\future.rs","byte_start":2672,"byte_end":2678,"line_start":58,"line_end":58,"column_start":51,"column_end":57},"kind":"SuperTrait","from":{"krate":0,"index":39},"to":{"krate":0,"index":44}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\future.rs","byte_start":3196,"byte_end":3197,"line_start":73,"line_end":73,"column_start":29,"column_end":30},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":49},"to":{"krate":0,"index":44}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\future.rs","byte_start":3565,"byte_end":3568,"line_start":91,"line_end":91,"column_start":59,"column_end":62},"kind":{"Impl":{"id":3}},"from":{"krate":5,"index":196},"to":{"krate":0,"index":27}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\future.rs","byte_start":3769,"byte_end":3785,"line_start":98,"line_end":98,"column_start":54,"column_end":70},"kind":{"Impl":{"id":4}},"from":{"krate":1,"index":5677},"to":{"krate":0,"index":27}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":8555,"byte_end":8558,"line_start":112,"line_end":112,"column_start":20,"column_end":23},"kind":{"Impl":{"id":5}},"from":{"krate":2,"index":39947},"to":{"krate":0,"index":96}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":9388,"byte_end":9394,"line_start":136,"line_end":136,"column_start":24,"column_end":30},"kind":"SuperTrait","from":{"krate":0,"index":96},"to":{"krate":0,"index":110}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":9687,"byte_end":9690,"line_start":147,"line_end":147,"column_start":25,"column_end":28},"kind":{"Impl":{"id":6}},"from":{"krate":2,"index":39947},"to":{"krate":0,"index":110}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":9964,"byte_end":9965,"line_start":162,"line_end":162,"column_start":30,"column_end":31},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":124},"to":{"krate":0,"index":122}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":10163,"byte_end":10169,"line_start":167,"line_end":167,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":0,"index":96},"to":{"krate":0,"index":127}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":10192,"byte_end":10198,"line_start":167,"line_end":167,"column_start":51,"column_end":57},"kind":"SuperTrait","from":{"krate":0,"index":122},"to":{"krate":0,"index":127}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":10752,"byte_end":10753,"line_start":185,"line_end":185,"column_start":29,"column_end":30},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":132},"to":{"krate":0,"index":127}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":11153,"byte_end":11156,"line_start":205,"line_end":205,"column_start":49,"column_end":52},"kind":{"Impl":{"id":9}},"from":{"krate":5,"index":196},"to":{"krate":0,"index":96}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":11527,"byte_end":11543,"line_start":218,"line_end":218,"column_start":44,"column_end":60},"kind":{"Impl":{"id":10}},"from":{"krate":1,"index":5677},"to":{"krate":0,"index":96}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\stream.rs","byte_start":11918,"byte_end":11921,"line_start":230,"line_end":230,"column_start":59,"column_end":62},"kind":{"Impl":{"id":11}},"from":{"krate":5,"index":196},"to":{"krate":0,"index":110}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":20631,"byte_end":20642,"line_start":198,"line_end":198,"column_start":6,"column_end":17},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":194},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":20776,"byte_end":20780,"line_start":202,"line_end":202,"column_start":27,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":2842},"to":{"krate":0,"index":202}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":20812,"byte_end":20817,"line_start":203,"line_end":203,"column_start":29,"column_end":34},"kind":{"Impl":{"id":13}},"from":{"krate":2,"index":12295},"to":{"krate":0,"index":202}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":29270,"byte_end":29281,"line_start":396,"line_end":396,"column_start":18,"column_end":29},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":194},"to":{"krate":2,"index":2808}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":29360,"byte_end":29371,"line_start":402,"line_end":402,"column_start":21,"column_end":32},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":194},"to":{"krate":2,"index":8819}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":29500,"byte_end":29511,"line_start":408,"line_end":408,"column_start":22,"column_end":33},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":194},"to":{"krate":2,"index":2830}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-core-0.3.15\\src\\task\\__internal\\atomic_waker.rs","byte_start":29536,"byte_end":29547,"line_start":409,"line_end":409,"column_start":22,"column_end":33},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":194},"to":{"krate":2,"index":2842}}]}