{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0","program":"C:\\Users\\RBento\\.rustup\\toolchains\\nightly-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","fixedbitset","C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","opt-level=1","-C","embed-bitcode=no","-C","debuginfo=2","-C","debug-assertions=on","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=b0a986e5fd2ba4d4","-C","extra-filename=-b0a986e5fd2ba4d4","--out-dir","c:\\Users\\RBento\\Documents\\GitHub\\rust-bevy-game\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\RBento\\Documents\\GitHub\\rust-bevy-game\\target\\rls\\debug\\deps","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\RBento\\.rustup/toolchains/nightly-x86_64-pc-windows-msvc"],"output":"c:\\Users\\RBento\\Documents\\GitHub\\rust-bevy-game\\target\\rls\\debug\\deps\\libfixedbitset-b0a986e5fd2ba4d4.rmeta"},"prelude":{"crate_id":{"name":"fixedbitset","disambiguator":[12989167588833266478,16661772113200805035]},"crate_root":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src","external_crates":[{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[15869266064849044270,13812703651219207899]}},{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[15148766368479893525,17497858971256376700]}},{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[16194220905313221195,6339449639258572938]}},{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[16728121507327789412,17936324348553370828]}},{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[8353546475527657673,16963020149250979420]}},{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[14145689099815379496,9077506326932238031]}},{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[6244492946486796811,5490964437503717086]}},{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[4957111798665788102,12670576939103314555]}},{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[9357994508122440114,8896505374189203733]}},{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[17341712432760991862,18372629839506156389]}},{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[2671884461253057496,4478164966631933143]}},{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[6741719769603984485,10712659696795682227]}},{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[15998493142843264248,17902295596389096714]}}],"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":0,"byte_end":43887,"line_start":1,"line_end":1603,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":17},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":966,"byte_end":976,"line_start":42,"line_end":42,"column_start":16,"column_end":26},"alias_span":null,"name":"IndexRange","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":0,"byte_end":43887,"line_start":1,"line_end":1603,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":33},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":43},{"krate":0,"index":46},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":53},{"krate":0,"index":56},{"krate":0,"index":59},{"krate":0,"index":62},{"krate":0,"index":65},{"krate":0,"index":68},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":75},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":82},{"krate":0,"index":85},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":230},{"krate":0,"index":233},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":242},{"krate":0,"index":244},{"krate":0,"index":246},{"krate":0,"index":249},{"krate":0,"index":91},{"krate":0,"index":135},{"krate":0,"index":137},{"krate":0,"index":139},{"krate":0,"index":143},{"krate":0,"index":147},{"krate":0,"index":150},{"krate":0,"index":154},{"krate":0,"index":158},{"krate":0,"index":162},{"krate":0,"index":165},{"krate":0,"index":169},{"krate":0,"index":174},{"krate":0,"index":177},{"krate":0,"index":180},{"krate":0,"index":185},{"krate":0,"index":189},{"krate":0,"index":191},{"krate":0,"index":194},{"krate":0,"index":197},{"krate":0,"index":200},{"krate":0,"index":204},{"krate":0,"index":207},{"krate":0,"index":210},{"krate":0,"index":214},{"krate":0,"index":217},{"krate":0,"index":220},{"krate":0,"index":224},{"krate":0,"index":227}],"decl_id":null,"docs":" `FixedBitSet` is a simple fixed size set of bits.","sig":null,"attributes":[{"value":"/ `FixedBitSet` is a simple fixed size set of bits.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":0,"byte_end":53,"line_start":1,"line_end":1,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":54,"byte_end":57,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":58,"byte_end":61,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ ### Crate features","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":62,"byte_end":84,"line_start":4,"line_end":4,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":85,"byte_end":88,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ - `std` (default feature)  ","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":89,"byte_end":120,"line_start":6,"line_end":6,"column_start":1,"column_end":32}},{"value":"/   Disabling this feature disables using std and instead uses crate alloc.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":121,"byte_end":198,"line_start":7,"line_end":7,"column_start":1,"column_end":78}},{"value":"/   Requires Rust 1.36 to disable.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":199,"byte_end":235,"line_start":8,"line_end":8,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":236,"byte_end":239,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ ### Rust Version","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":240,"byte_end":260,"line_start":10,"line_end":10,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":261,"byte_end":264,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This version of fixedbitset requires Rust 1.39 or later.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":265,"byte_end":325,"line_start":12,"line_end":12,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":326,"byte_end":329,"line_start":13,"line_end":13,"column_start":1,"column_end":4}}]},{"kind":"Trait","id":{"krate":0,"index":17},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\range.rs","byte_start":44174,"byte_end":44184,"line_start":12,"line_end":12,"column_start":11,"column_end":21},"name":"IndexRange","qualname":"::range::IndexRange","value":"IndexRange<T = usize>","parent":null,"children":[{"krate":0,"index":19},{"krate":0,"index":20}],"decl_id":null,"docs":" **IndexRange** is implemented by Rust's built-in range types, produced\n by range syntax like `..`, `a..`, `..b` or `c..d`.\n","sig":null,"attributes":[{"value":"/ **IndexRange** is implemented by Rust's built-in range types, produced","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\range.rs","byte_start":44034,"byte_end":44108,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ by range syntax like `..`, `a..`, `..b` or `c..d`.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\range.rs","byte_start":44109,"byte_end":44163,"line_start":11,"line_end":11,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":19},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\range.rs","byte_start":44249,"byte_end":44254,"line_start":15,"line_end":15,"column_start":8,"column_end":13},"name":"start","qualname":"::range::IndexRange::start","value":"pub fn start(&Self) -> Option<T>","parent":{"krate":0,"index":17},"children":[],"decl_id":null,"docs":" Start index (inclusive)\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\range.rs","byte_start":44200,"byte_end":44209,"line_start":13,"line_end":13,"column_start":5,"column_end":14}},{"value":"/ Start index (inclusive)","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\range.rs","byte_start":44214,"byte_end":44241,"line_start":14,"line_end":14,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":20},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\range.rs","byte_start":44335,"byte_end":44338,"line_start":18,"line_end":18,"column_start":8,"column_end":11},"name":"end","qualname":"::range::IndexRange::end","value":"pub fn end(&Self) -> Option<T>","parent":{"krate":0,"index":17},"children":[],"decl_id":null,"docs":" End index (exclusive)\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\range.rs","byte_start":44288,"byte_end":44297,"line_start":16,"line_end":16,"column_start":5,"column_end":14}},{"value":"/ End index (exclusive)","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\range.rs","byte_start":44302,"byte_end":44327,"line_start":17,"line_end":17,"column_start":5,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":230},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":1493,"byte_end":1504,"line_start":60,"line_end":60,"column_start":12,"column_end":23},"name":"FixedBitSet","qualname":"::FixedBitSet","value":"FixedBitSet {  }","parent":null,"children":[{"krate":0,"index":231},{"krate":0,"index":232}],"decl_id":null,"docs":" `FixedBitSet` is a simple fixed size set of bits that each can\n be enabled (1 / **true**) or disabled (0 / **false**).","sig":null,"attributes":[{"value":"/ `FixedBitSet` is a simple fixed size set of bits that each can","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":1105,"byte_end":1171,"line_start":53,"line_end":53,"column_start":1,"column_end":67}},{"value":"/ be enabled (1 / **true**) or disabled (0 / **false**).","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":1172,"byte_end":1230,"line_start":54,"line_end":54,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":1231,"byte_end":1234,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ The bit set has a fixed capacity in terms of enabling bits (and the","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":1235,"byte_end":1306,"line_start":56,"line_end":56,"column_start":1,"column_end":72}},{"value":"/ capacity can grow using the `grow` method).","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":1307,"byte_end":1354,"line_start":57,"line_end":57,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":1654,"byte_end":1657,"line_start":69,"line_end":69,"column_start":18,"column_end":21},"name":"new","qualname":"<FixedBitSet>::new","value":"pub const fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new empty **FixedBitSet**.\n","sig":null,"attributes":[{"value":"/ Create a new empty **FixedBitSet**.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":1597,"byte_end":1636,"line_start":68,"line_end":68,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":1875,"byte_end":1888,"line_start":79,"line_end":79,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<FixedBitSet>::with_capacity","value":"pub fn with_capacity(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new **FixedBitSet** with a specific number of bits,\n all initially clear.\n","sig":null,"attributes":[{"value":"/ Create a new **FixedBitSet** with a specific number of bits,","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":1770,"byte_end":1834,"line_start":77,"line_end":77,"column_start":5,"column_end":69}},{"value":"/ all initially clear.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":1839,"byte_end":1863,"line_start":78,"line_end":78,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":2616,"byte_end":2640,"line_start":102,"line_end":102,"column_start":12,"column_end":36},"name":"with_capacity_and_blocks","qualname":"<FixedBitSet>::with_capacity_and_blocks","value":"pub fn with_capacity_and_blocks<I: IntoIterator<Item = Block>>(usize, I)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new **FixedBitSet** with a specific number of bits,\n initialized from provided blocks.","sig":null,"attributes":[{"value":"/ Create a new **FixedBitSet** with a specific number of bits,","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":2111,"byte_end":2175,"line_start":89,"line_end":89,"column_start":5,"column_end":69}},{"value":"/ initialized from provided blocks.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":2180,"byte_end":2217,"line_start":90,"line_end":90,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":2222,"byte_end":2225,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ If the blocks are not the exact size needed for the capacity","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":2230,"byte_end":2294,"line_start":92,"line_end":92,"column_start":5,"column_end":69}},{"value":"/ they will be padded with zeros (if shorter) or truncated to","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":2299,"byte_end":2362,"line_start":93,"line_end":93,"column_start":5,"column_end":68}},{"value":"/ the capacity (if longer).","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":2367,"byte_end":2396,"line_start":94,"line_end":94,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":2401,"byte_end":2404,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ For example:","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":2409,"byte_end":2425,"line_start":96,"line_end":96,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":2430,"byte_end":2437,"line_start":97,"line_end":97,"column_start":5,"column_end":12}},{"value":"/ let data = vec![4];","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":2442,"byte_end":2465,"line_start":98,"line_end":98,"column_start":5,"column_end":28}},{"value":"/ let bs = fixedbitset::FixedBitSet::with_capacity_and_blocks(4, data);","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":2470,"byte_end":2543,"line_start":99,"line_end":99,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(format!(\"{:b}\", bs), \"0010\");","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":2548,"byte_end":2592,"line_start":100,"line_end":100,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":2597,"byte_end":2604,"line_start":101,"line_end":101,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":3429,"byte_end":3433,"line_start":125,"line_end":125,"column_start":12,"column_end":16},"name":"grow","qualname":"<FixedBitSet>::grow","value":"pub fn grow(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Grow capacity to **bits**, all new bits initialized to zero\n","sig":null,"attributes":[{"value":"/ Grow capacity to **bits**, all new bits initialized to zero","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":3354,"byte_end":3417,"line_start":124,"line_end":124,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":3754,"byte_end":3757,"line_start":136,"line_end":136,"column_start":12,"column_end":15},"name":"len","qualname":"<FixedBitSet>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the length of the `FixedBitSet` in bits.\n","sig":null,"attributes":[{"value":"/ Return the length of the `FixedBitSet` in bits.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":3677,"byte_end":3728,"line_start":134,"line_end":134,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":3733,"byte_end":3742,"line_start":135,"line_end":135,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":4055,"byte_end":4063,"line_start":145,"line_end":145,"column_start":12,"column_end":20},"name":"contains","qualname":"<FixedBitSet>::contains","value":"pub fn contains(&Self, usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return **true** if the bit is enabled in the **FixedBitSet**,\n **false** otherwise.","sig":null,"attributes":[{"value":"/ Return **true** if the bit is enabled in the **FixedBitSet**,","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":3795,"byte_end":3860,"line_start":138,"line_end":138,"column_start":5,"column_end":70}},{"value":"/ **false** otherwise.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":3865,"byte_end":3889,"line_start":139,"line_end":139,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":3894,"byte_end":3897,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ Note: bits outside the capacity are always disabled.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":3902,"byte_end":3958,"line_start":141,"line_end":141,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":3963,"byte_end":3966,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ Note: Also available with index syntax: `bitset[bit]`.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":3971,"byte_end":4029,"line_start":143,"line_end":143,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":4034,"byte_end":4043,"line_start":144,"line_end":144,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":4316,"byte_end":4321,"line_start":156,"line_end":156,"column_start":12,"column_end":17},"name":"clear","qualname":"<FixedBitSet>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clear all bits.\n","sig":null,"attributes":[{"value":"/ Clear all bits.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":4271,"byte_end":4290,"line_start":154,"line_end":154,"column_start":5,"column_end":24}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":4295,"byte_end":4304,"line_start":155,"line_end":155,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":4520,"byte_end":4526,"line_start":167,"line_end":167,"column_start":12,"column_end":18},"name":"insert","qualname":"<FixedBitSet>::insert","value":"pub fn insert(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Enable `bit`.","sig":null,"attributes":[{"value":"/ Enable `bit`.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":4421,"byte_end":4438,"line_start":163,"line_end":163,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":4443,"byte_end":4446,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ **Panics** if **bit** is out of bounds.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":4451,"byte_end":4494,"line_start":165,"line_end":165,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":4499,"byte_end":4508,"line_start":166,"line_end":166,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":4930,"byte_end":4933,"line_start":180,"line_end":180,"column_start":12,"column_end":15},"name":"put","qualname":"<FixedBitSet>::put","value":"pub fn put(&mut Self, usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Enable `bit`, and return its previous value.","sig":null,"attributes":[{"value":"/ Enable `bit`, and return its previous value.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":4800,"byte_end":4848,"line_start":176,"line_end":176,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":4853,"byte_end":4856,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ **Panics** if **bit** is out of bounds.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":4861,"byte_end":4904,"line_start":178,"line_end":178,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":4909,"byte_end":4918,"line_start":179,"line_end":179,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":5425,"byte_end":5431,"line_start":195,"line_end":195,"column_start":12,"column_end":18},"name":"toggle","qualname":"<FixedBitSet>::toggle","value":"pub fn toggle(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Toggle `bit` (inverting its state).","sig":null,"attributes":[{"value":"/ Toggle `bit` (inverting its state).","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":5303,"byte_end":5342,"line_start":191,"line_end":191,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":5347,"byte_end":5350,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ ***Panics*** if **bit** is out of bounds","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":5355,"byte_end":5399,"line_start":193,"line_end":193,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":5404,"byte_end":5413,"line_start":194,"line_end":194,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":5769,"byte_end":5772,"line_start":204,"line_end":204,"column_start":12,"column_end":15},"name":"set","qualname":"<FixedBitSet>::set","value":"pub fn set(&mut Self, usize, bool)","parent":null,"children":[],"decl_id":null,"docs":" **Panics** if **bit** is out of bounds.\n","sig":null,"attributes":[{"value":"/ **Panics** if **bit** is out of bounds.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":5700,"byte_end":5743,"line_start":202,"line_end":202,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":5748,"byte_end":5757,"line_start":203,"line_end":203,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":6330,"byte_end":6338,"line_start":222,"line_end":222,"column_start":12,"column_end":20},"name":"copy_bit","qualname":"<FixedBitSet>::copy_bit","value":"pub fn copy_bit(&mut Self, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Copies boolean value from specified bit to the specified bit.","sig":null,"attributes":[{"value":"/ Copies boolean value from specified bit to the specified bit.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":6184,"byte_end":6249,"line_start":218,"line_end":218,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":6254,"byte_end":6257,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ **Panics** if **to** is out of bounds.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":6262,"byte_end":6304,"line_start":220,"line_end":220,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":6309,"byte_end":6318,"line_start":221,"line_end":221,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":7028,"byte_end":7038,"line_start":243,"line_end":243,"column_start":12,"column_end":22},"name":"count_ones","qualname":"<FixedBitSet>::count_ones","value":"pub fn count_ones<T: IndexRange>(&Self, T) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Count the number of set bits in the given bit range.","sig":null,"attributes":[{"value":"/ Count the number of set bits in the given bit range.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":6803,"byte_end":6859,"line_start":237,"line_end":237,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":6864,"byte_end":6867,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ Use `..` to count the whole content of the bitset.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":6872,"byte_end":6926,"line_start":239,"line_end":239,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":6931,"byte_end":6934,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the range extends past the end of the bitset.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":6939,"byte_end":7002,"line_start":241,"line_end":241,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":7007,"byte_end":7016,"line_start":242,"line_end":242,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":7546,"byte_end":7555,"line_start":259,"line_end":259,"column_start":12,"column_end":21},"name":"set_range","qualname":"<FixedBitSet>::set_range","value":"pub fn set_range<T: IndexRange>(&mut Self, T, bool)","parent":null,"children":[],"decl_id":null,"docs":" Sets every bit in the given range to the given state (`enabled`)","sig":null,"attributes":[{"value":"/ Sets every bit in the given range to the given state (`enabled`)","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":7326,"byte_end":7394,"line_start":253,"line_end":253,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":7399,"byte_end":7402,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ Use `..` to set the whole bitset.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":7407,"byte_end":7444,"line_start":255,"line_end":255,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":7449,"byte_end":7452,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the range extends past the end of the bitset.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":7457,"byte_end":7520,"line_start":257,"line_end":257,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":7525,"byte_end":7534,"line_start":258,"line_end":258,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":8133,"byte_end":8145,"line_start":278,"line_end":278,"column_start":12,"column_end":24},"name":"insert_range","qualname":"<FixedBitSet>::insert_range","value":"pub fn insert_range<T: IndexRange>(&mut Self, T)","parent":null,"children":[],"decl_id":null,"docs":" Enables every bit in the given range.","sig":null,"attributes":[{"value":"/ Enables every bit in the given range.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":7934,"byte_end":7975,"line_start":272,"line_end":272,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":7980,"byte_end":7983,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ Use `..` to make the whole bitset ones.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":7988,"byte_end":8031,"line_start":274,"line_end":274,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":8036,"byte_end":8039,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the range extends past the end of the bitset.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":8044,"byte_end":8107,"line_start":276,"line_end":276,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":8112,"byte_end":8121,"line_start":277,"line_end":277,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":8442,"byte_end":8454,"line_start":289,"line_end":289,"column_start":12,"column_end":24},"name":"toggle_range","qualname":"<FixedBitSet>::toggle_range","value":"pub fn toggle_range<T: IndexRange>(&mut Self, T)","parent":null,"children":[],"decl_id":null,"docs":" Toggles (inverts) every bit in the given range.","sig":null,"attributes":[{"value":"/ Toggles (inverts) every bit in the given range.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":8236,"byte_end":8287,"line_start":283,"line_end":283,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":8292,"byte_end":8295,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ Use `..` to toggle the whole bitset.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":8300,"byte_end":8340,"line_start":285,"line_end":285,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":8345,"byte_end":8348,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the range extends past the end of the bitset.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":8353,"byte_end":8416,"line_start":287,"line_end":287,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":8421,"byte_end":8430,"line_start":288,"line_end":288,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":8748,"byte_end":8756,"line_start":300,"line_end":300,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<FixedBitSet>::as_slice","value":"pub fn as_slice(&Self) -> &[u32]","parent":null,"children":[],"decl_id":null,"docs":" View the bitset as a slice of `u32` blocks\n","sig":null,"attributes":[{"value":"/ View the bitset as a slice of `u32` blocks","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":8676,"byte_end":8722,"line_start":298,"line_end":298,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":8727,"byte_end":8736,"line_start":299,"line_end":299,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":9029,"byte_end":9041,"line_start":308,"line_end":308,"column_start":12,"column_end":24},"name":"as_mut_slice","qualname":"<FixedBitSet>::as_mut_slice","value":"pub fn as_mut_slice(&mut Self) -> &mut [u32]","parent":null,"children":[],"decl_id":null,"docs":" View the bitset as a mutable slice of `u32` blocks. Writing past the bitlength in the last\n will cause `contains` to return potentially incorrect results for bits past the bitlength.\n","sig":null,"attributes":[{"value":"/ View the bitset as a mutable slice of `u32` blocks. Writing past the bitlength in the last","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":8810,"byte_end":8904,"line_start":305,"line_end":305,"column_start":5,"column_end":99}},{"value":"/ will cause `contains` to return potentially incorrect results for bits past the bitlength.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":8909,"byte_end":9003,"line_start":306,"line_end":306,"column_start":5,"column_end":99}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":9008,"byte_end":9017,"line_start":307,"line_end":307,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":9244,"byte_end":9248,"line_start":317,"line_end":317,"column_start":12,"column_end":16},"name":"ones","qualname":"<FixedBitSet>::ones","value":"pub fn ones(&Self) -> Ones","parent":null,"children":[],"decl_id":null,"docs":" Iterates over all enabled bits.","sig":null,"attributes":[{"value":"/ Iterates over all enabled bits.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":9107,"byte_end":9142,"line_start":313,"line_end":313,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":9147,"byte_end":9150,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ Iterator element is the index of the `1` bit, type `usize`.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":9155,"byte_end":9218,"line_start":315,"line_end":315,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":9223,"byte_end":9232,"line_start":316,"line_end":316,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":9803,"byte_end":9815,"line_start":337,"line_end":337,"column_start":12,"column_end":24},"name":"intersection","qualname":"<FixedBitSet>::intersection","value":"pub fn intersection<'a>(&'a Self, &'a FixedBitSet) -> Intersection","parent":null,"children":[],"decl_id":null,"docs":" Returns a lazy iterator over the intersection of two `FixedBitSet`s\n","sig":null,"attributes":[{"value":"/ Returns a lazy iterator over the intersection of two `FixedBitSet`s","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":9720,"byte_end":9791,"line_start":336,"line_end":336,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":10058,"byte_end":10063,"line_start":346,"line_end":346,"column_start":12,"column_end":17},"name":"union","qualname":"<FixedBitSet>::union","value":"pub fn union<'a>(&'a Self, &'a FixedBitSet) -> Union","parent":null,"children":[],"decl_id":null,"docs":" Returns a lazy iterator over the union of two `FixedBitSet`s.\n","sig":null,"attributes":[{"value":"/ Returns a lazy iterator over the union of two `FixedBitSet`s.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":9981,"byte_end":10046,"line_start":345,"line_end":345,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":10384,"byte_end":10394,"line_start":355,"line_end":355,"column_start":12,"column_end":22},"name":"difference","qualname":"<FixedBitSet>::difference","value":"pub fn difference<'a>(&'a Self, &'a FixedBitSet) -> Difference","parent":null,"children":[],"decl_id":null,"docs":" Returns a lazy iterator over the difference of two `FixedBitSet`s. The difference of `a`\n and `b` is the elements of `a` which are not in `b`.\n","sig":null,"attributes":[{"value":"/ Returns a lazy iterator over the difference of two `FixedBitSet`s. The difference of `a`","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":10219,"byte_end":10311,"line_start":353,"line_end":353,"column_start":5,"column_end":97}},{"value":"/ and `b` is the elements of `a` which are not in `b`.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":10316,"byte_end":10372,"line_start":354,"line_end":354,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":10740,"byte_end":10760,"line_start":365,"line_end":365,"column_start":12,"column_end":32},"name":"symmetric_difference","qualname":"<FixedBitSet>::symmetric_difference","value":"pub fn symmetric_difference<'a>(&'a Self, &'a FixedBitSet)\n-> SymmetricDifference","parent":null,"children":[],"decl_id":null,"docs":" Returns a lazy iterator over the symmetric difference of two `FixedBitSet`s.\n The symmetric difference of `a` and `b` is the elements of one, but not both, sets.\n","sig":null,"attributes":[{"value":"/ Returns a lazy iterator over the symmetric difference of two `FixedBitSet`s.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":10556,"byte_end":10636,"line_start":363,"line_end":363,"column_start":5,"column_end":85}},{"value":"/ The symmetric difference of `a` and `b` is the elements of one, but not both, sets.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":10641,"byte_end":10728,"line_start":364,"line_end":364,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":11103,"byte_end":11113,"line_start":375,"line_end":375,"column_start":12,"column_end":22},"name":"union_with","qualname":"<FixedBitSet>::union_with","value":"pub fn union_with(&mut Self, &FixedBitSet)","parent":null,"children":[],"decl_id":null,"docs":" In-place union of two `FixedBitSet`s.","sig":null,"attributes":[{"value":"/ In-place union of two `FixedBitSet`s.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":10955,"byte_end":10996,"line_start":372,"line_end":372,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":11001,"byte_end":11004,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ On calling this method, `self`'s capacity may be increased to match `other`'s.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":11009,"byte_end":11091,"line_start":374,"line_end":374,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":11498,"byte_end":11512,"line_start":388,"line_end":388,"column_start":12,"column_end":26},"name":"intersect_with","qualname":"<FixedBitSet>::intersect_with","value":"pub fn intersect_with(&mut Self, &FixedBitSet)","parent":null,"children":[],"decl_id":null,"docs":" In-place intersection of two `FixedBitSet`s.","sig":null,"attributes":[{"value":"/ In-place intersection of two `FixedBitSet`s.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":11348,"byte_end":11396,"line_start":385,"line_end":385,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":11401,"byte_end":11404,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ On calling this method, `self`'s capacity will remain the same as before.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":11409,"byte_end":11486,"line_start":387,"line_end":387,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":11948,"byte_end":11963,"line_start":402,"line_end":402,"column_start":12,"column_end":27},"name":"difference_with","qualname":"<FixedBitSet>::difference_with","value":"pub fn difference_with(&mut Self, &FixedBitSet)","parent":null,"children":[],"decl_id":null,"docs":" In-place difference of two `FixedBitSet`s.","sig":null,"attributes":[{"value":"/ In-place difference of two `FixedBitSet`s.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":11800,"byte_end":11846,"line_start":399,"line_end":399,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":11851,"byte_end":11854,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ On calling this method, `self`'s capacity will remain the same as before.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":11859,"byte_end":11936,"line_start":401,"line_end":401,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":12639,"byte_end":12664,"line_start":419,"line_end":419,"column_start":12,"column_end":37},"name":"symmetric_difference_with","qualname":"<FixedBitSet>::symmetric_difference_with","value":"pub fn symmetric_difference_with(&mut Self, &FixedBitSet)","parent":null,"children":[],"decl_id":null,"docs":" In-place symmetric difference of two `FixedBitSet`s.","sig":null,"attributes":[{"value":"/ In-place symmetric difference of two `FixedBitSet`s.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":12476,"byte_end":12532,"line_start":416,"line_end":416,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":12537,"byte_end":12540,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ On calling this method, `self`'s capacity may be increased to match `other`'s.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":12545,"byte_end":12627,"line_start":418,"line_end":418,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":13045,"byte_end":13056,"line_start":431,"line_end":431,"column_start":12,"column_end":23},"name":"is_disjoint","qualname":"<FixedBitSet>::is_disjoint","value":"pub fn is_disjoint(&Self, &FixedBitSet) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` has no elements in common with `other`. This\n is equivalent to checking for an empty intersection.\n","sig":null,"attributes":[{"value":"/ Returns `true` if `self` has no elements in common with `other`. This","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":12899,"byte_end":12972,"line_start":429,"line_end":429,"column_start":5,"column_end":78}},{"value":"/ is equivalent to checking for an empty intersection.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":12977,"byte_end":13033,"line_start":430,"line_end":430,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":13309,"byte_end":13318,"line_start":437,"line_end":437,"column_start":12,"column_end":21},"name":"is_subset","qualname":"<FixedBitSet>::is_subset","value":"pub fn is_subset(&Self, &FixedBitSet) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set is a subset of another, i.e. `other` contains\n at least all the values in `self`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the set is a subset of another, i.e. `other` contains","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":13179,"byte_end":13254,"line_start":435,"line_end":435,"column_start":5,"column_end":80}},{"value":"/ at least all the values in `self`.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":13259,"byte_end":13297,"line_start":436,"line_end":436,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":13642,"byte_end":13653,"line_start":444,"line_end":444,"column_start":12,"column_end":23},"name":"is_superset","qualname":"<FixedBitSet>::is_superset","value":"pub fn is_superset(&Self, &FixedBitSet) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set is a superset of another, i.e. `self` contains\n at least all the values in `other`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the set is a superset of another, i.e. `self` contains","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":13510,"byte_end":13586,"line_start":442,"line_end":442,"column_start":5,"column_end":81}},{"value":"/ at least all the values in `other`.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":13591,"byte_end":13630,"line_start":443,"line_end":443,"column_start":5,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":139},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":14389,"byte_end":14399,"line_start":476,"line_end":476,"column_start":12,"column_end":22},"name":"Difference","qualname":"::Difference","value":"Difference {  }","parent":null,"children":[{"krate":0,"index":141},{"krate":0,"index":142}],"decl_id":null,"docs":" An iterator producing elements in the difference of two sets.","sig":null,"attributes":[{"value":"/ An iterator producing elements in the difference of two sets.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":14238,"byte_end":14303,"line_start":473,"line_end":473,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":14304,"byte_end":14307,"line_start":474,"line_end":474,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`FixedBitSet::difference`] method.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":14308,"byte_end":14377,"line_start":475,"line_end":475,"column_start":1,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":147},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":14924,"byte_end":14943,"line_start":498,"line_end":498,"column_start":12,"column_end":31},"name":"SymmetricDifference","qualname":"::SymmetricDifference","value":"SymmetricDifference {  }","parent":null,"children":[{"krate":0,"index":149}],"decl_id":null,"docs":" An iterator producing elements in the symmetric difference of two sets.","sig":null,"attributes":[{"value":"/ An iterator producing elements in the symmetric difference of two sets.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":14753,"byte_end":14828,"line_start":495,"line_end":495,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":14829,"byte_end":14832,"line_start":496,"line_end":496,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`FixedBitSet::symmetric_difference`] method.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":14833,"byte_end":14912,"line_start":497,"line_end":497,"column_start":1,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":154},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":15325,"byte_end":15337,"line_start":515,"line_end":515,"column_start":12,"column_end":24},"name":"Intersection","qualname":"::Intersection","value":"Intersection {  }","parent":null,"children":[{"krate":0,"index":156},{"krate":0,"index":157}],"decl_id":null,"docs":" An iterator producing elements in the intersection of two sets.","sig":null,"attributes":[{"value":"/ An iterator producing elements in the intersection of two sets.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":15170,"byte_end":15237,"line_start":512,"line_end":512,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":15238,"byte_end":15241,"line_start":513,"line_end":513,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`FixedBitSet::intersection`] method.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":15242,"byte_end":15313,"line_start":514,"line_end":514,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":162},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":15864,"byte_end":15869,"line_start":537,"line_end":537,"column_start":12,"column_end":17},"name":"Union","qualname":"::Union","value":"Union {  }","parent":null,"children":[{"krate":0,"index":164}],"decl_id":null,"docs":" An iterator producing elements in the union of two sets.","sig":null,"attributes":[{"value":"/ An iterator producing elements in the union of two sets.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":15723,"byte_end":15783,"line_start":534,"line_end":534,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":15784,"byte_end":15787,"line_start":535,"line_end":535,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`FixedBitSet::union`] method.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":15788,"byte_end":15852,"line_start":536,"line_end":536,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":180},"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":17893,"byte_end":17897,"line_start":609,"line_end":609,"column_start":12,"column_end":16},"name":"Ones","qualname":"::Ones","value":"Ones {  }","parent":null,"children":[{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184}],"decl_id":null,"docs":" An  iterator producing the indices of the set bit in a set.","sig":null,"attributes":[{"value":"/ An  iterator producing the indices of the set bit in a set.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":17750,"byte_end":17813,"line_start":606,"line_end":606,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":17814,"byte_end":17817,"line_start":607,"line_end":607,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`FixedBitSet::ones`] method.","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":17818,"byte_end":17881,"line_start":608,"line_end":608,"column_start":1,"column_end":64}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\range.rs","byte_start":44398,"byte_end":44407,"line_start":22,"line_end":22,"column_start":27,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\range.rs","byte_start":44444,"byte_end":44453,"line_start":24,"line_end":24,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":25}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\range.rs","byte_start":44562,"byte_end":44569,"line_start":29,"line_end":29,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":28}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\range.rs","byte_start":44674,"byte_end":44679,"line_start":34,"line_end":34,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":31},{"krate":0,"index":32}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":1579,"byte_end":1590,"line_start":66,"line_end":66,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":108},{"krate":0,"index":110},{"krate":0,"index":112},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":119},{"krate":0,"index":121},{"krate":0,"index":123},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":131},{"krate":0,"index":134}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":13747,"byte_end":13758,"line_start":449,"line_end":449,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":14121,"byte_end":14132,"line_start":467,"line_end":467,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":138}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":14479,"byte_end":14489,"line_start":481,"line_end":481,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":145},{"krate":0,"index":146}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":15024,"byte_end":15043,"line_start":502,"line_end":502,"column_start":23,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":152},{"krate":0,"index":153}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":15417,"byte_end":15429,"line_start":520,"line_end":520,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":160},{"krate":0,"index":161}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":15944,"byte_end":15949,"line_start":541,"line_end":541,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":167},{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":16191,"byte_end":16196,"line_start":558,"line_end":558,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":175}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":16995,"byte_end":17000,"line_start":579,"line_end":579,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":178},{"krate":0,"index":179}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":18005,"byte_end":18009,"line_start":615,"line_end":615,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":187},{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":18633,"byte_end":18644,"line_start":635,"line_end":635,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":190}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":19026,"byte_end":19037,"line_start":652,"line_end":652,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":192},{"krate":0,"index":193}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":19340,"byte_end":19351,"line_start":668,"line_end":668,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":195}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":19763,"byte_end":19774,"line_start":683,"line_end":683,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":198}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":20552,"byte_end":20563,"line_start":713,"line_end":713,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":206}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":20693,"byte_end":20704,"line_start":720,"line_end":720,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":209}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":21408,"byte_end":21419,"line_start":747,"line_end":747,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":216}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":21543,"byte_end":21554,"line_start":754,"line_end":754,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":219}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":22256,"byte_end":22267,"line_start":781,"line_end":781,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":226}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":22408,"byte_end":22419,"line_start":788,"line_end":788,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":229}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\range.rs","byte_start":44398,"byte_end":44407,"line_start":22,"line_end":22,"column_start":27,"column_end":36},"kind":{"Impl":{"id":0}},"from":{"krate":2,"index":38417},"to":{"krate":0,"index":17}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\range.rs","byte_start":44444,"byte_end":44453,"line_start":24,"line_end":24,"column_start":33,"column_end":42},"kind":{"Impl":{"id":1}},"from":{"krate":2,"index":38458},"to":{"krate":0,"index":17}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\range.rs","byte_start":44562,"byte_end":44569,"line_start":29,"line_end":29,"column_start":33,"column_end":40},"kind":{"Impl":{"id":2}},"from":{"krate":2,"index":38479},"to":{"krate":0,"index":17}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\range.rs","byte_start":44674,"byte_end":44679,"line_start":34,"line_end":34,"column_start":33,"column_end":38},"kind":{"Impl":{"id":3}},"from":{"krate":2,"index":38433},"to":{"krate":0,"index":17}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":1579,"byte_end":1590,"line_start":66,"line_end":66,"column_start":6,"column_end":17},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":230},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":13747,"byte_end":13758,"line_start":449,"line_end":449,"column_start":17,"column_end":28},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":230},"to":{"krate":2,"index":8830}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":14121,"byte_end":14132,"line_start":467,"line_end":467,"column_start":18,"column_end":29},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":230},"to":{"krate":2,"index":8826}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":14479,"byte_end":14489,"line_start":481,"line_end":481,"column_start":23,"column_end":33},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":139},"to":{"krate":2,"index":7249}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":15024,"byte_end":15043,"line_start":502,"line_end":502,"column_start":23,"column_end":42},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":147},"to":{"krate":2,"index":7249}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":15417,"byte_end":15429,"line_start":520,"line_end":520,"column_start":23,"column_end":35},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":154},"to":{"krate":2,"index":7249}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":15944,"byte_end":15949,"line_start":541,"line_end":541,"column_start":23,"column_end":28},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":162},"to":{"krate":2,"index":7249}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":16191,"byte_end":16196,"line_start":558,"line_end":558,"column_start":6,"column_end":11},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":169},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":16995,"byte_end":17000,"line_start":579,"line_end":579,"column_start":19,"column_end":24},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":169},"to":{"krate":2,"index":7249}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":18005,"byte_end":18009,"line_start":615,"line_end":615,"column_start":23,"column_end":27},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":180},"to":{"krate":2,"index":7249}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":18633,"byte_end":18644,"line_start":635,"line_end":635,"column_start":16,"column_end":27},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":230},"to":{"krate":2,"index":2451}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":19026,"byte_end":19037,"line_start":652,"line_end":652,"column_start":23,"column_end":34},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":230},"to":{"krate":2,"index":3126}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":19340,"byte_end":19351,"line_start":668,"line_end":668,"column_start":24,"column_end":35},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":230},"to":{"krate":2,"index":7095}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":19763,"byte_end":19774,"line_start":683,"line_end":683,"column_start":30,"column_end":41},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":230},"to":{"krate":2,"index":7082}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":20552,"byte_end":20563,"line_start":713,"line_end":713,"column_start":28,"column_end":39},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":230},"to":{"krate":2,"index":2980}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":20693,"byte_end":20704,"line_start":720,"line_end":720,"column_start":35,"column_end":46},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":230},"to":{"krate":2,"index":2980}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":21408,"byte_end":21419,"line_start":747,"line_end":747,"column_start":27,"column_end":38},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":230},"to":{"krate":2,"index":2984}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":21543,"byte_end":21554,"line_start":754,"line_end":754,"column_start":34,"column_end":45},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":230},"to":{"krate":2,"index":2984}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":22256,"byte_end":22267,"line_start":781,"line_end":781,"column_start":28,"column_end":39},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":230},"to":{"krate":2,"index":2988}},{"span":{"file_name":"C:\\Users\\RBento\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\fixedbitset-0.4.0\\src\\lib.rs","byte_start":22408,"byte_end":22419,"line_start":788,"line_end":788,"column_start":35,"column_end":46},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":230},"to":{"krate":2,"index":2988}}]}